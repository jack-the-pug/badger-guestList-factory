{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "cappedGuestListInstance",
      "outputs": [
        {
          "internalType": "contract CappedGuestList",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_slot",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceCalculator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_userDepositCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalDepositCap",
          "type": "uint256"
        }
      ],
      "name": "createCappedGuestList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/access/OwnableUpgradeable.sol",
    "1": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "2": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/AddressUpgradeable.sol",
    "20": "contracts/CappedGuestList.sol",
    "21": "contracts/CappedGuestListFactory.sol",
    "24": "contracts/interfaces/IPriceCalculator.sol",
    "29": "contracts/interfaces/IVault.sol",
    "3": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol",
    "4": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/cryptography/MerkleProofUpgradeable.sol",
    "5": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/math/SafeMathUpgradeable.sol",
    "9": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/Clones.sol"
  },
  "ast": {
    "absolutePath": "contracts/CappedGuestListFactory.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        7216
      ],
      "CappedGuestList": [
        459
      ],
      "CappedGuestListFactory": [
        578
      ],
      "Clones": [
        5177
      ],
      "ContextUpgradeable": [
        6356
      ],
      "IERC20": [
        5097
      ],
      "IPriceCalculator": [
        689
      ],
      "IVault": [
        1362
      ],
      "Initializable": [
        6314
      ],
      "MerkleProofUpgradeable": [
        4707
      ],
      "OwnableUpgradeable": [
        4614
      ],
      "SafeMathUpgradeable": [
        5019
      ]
    },
    "id": 579,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 461,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:21"
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 462,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 5178,
        "src": "62:50:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CappedGuestList.sol",
        "file": "./CappedGuestList.sol",
        "id": 463,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 579,
        "sourceUnit": 460,
        "src": "114:31:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CappedGuestListFactory",
        "contractDependencies": [
          459
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 464,
          "nodeType": "StructuredDocumentation",
          "src": "147:91:21",
          "text": "@title The CappedGuestListFactory allows users to create CappedGuestList very cheaply."
        },
        "fullyImplemented": true,
        "id": 578,
        "linearizedBaseContracts": [
          578
        ],
        "name": "CappedGuestListFactory",
        "nameLocation": "247:22:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 467,
            "libraryName": {
              "id": 465,
              "name": "Clones",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5177,
              "src": "280:6:21"
            },
            "nodeType": "UsingForDirective",
            "src": "274:25:21",
            "typeName": {
              "id": 466,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "291:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "documentation": {
              "id": 468,
              "nodeType": "StructuredDocumentation",
              "src": "303:57:21",
              "text": "@notice The instance to which all proxies will point."
            },
            "functionSelector": "2eb96fba",
            "id": 471,
            "mutability": "mutable",
            "name": "cappedGuestListInstance",
            "nameLocation": "386:23:21",
            "nodeType": "VariableDeclaration",
            "scope": 578,
            "src": "363:46:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CappedGuestList_$459",
              "typeString": "contract CappedGuestList"
            },
            "typeName": {
              "id": 470,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 469,
                "name": "CappedGuestList",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 459,
                "src": "363:15:21"
              },
              "referencedDeclaration": 459,
              "src": "363:15:21",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedGuestList_$459",
                "typeString": "contract CappedGuestList"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "464:58:21",
              "statements": [
                {
                  "expression": {
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 475,
                      "name": "cappedGuestListInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "470:23:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CappedGuestList_$459",
                        "typeString": "contract CappedGuestList"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "496:19:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_CappedGuestList_$459_$",
                          "typeString": "function () returns (contract CappedGuestList)"
                        },
                        "typeName": {
                          "id": 477,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 476,
                            "name": "CappedGuestList",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 459,
                            "src": "500:15:21"
                          },
                          "referencedDeclaration": 459,
                          "src": "500:15:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CappedGuestList_$459",
                            "typeString": "contract CappedGuestList"
                          }
                        }
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "496:21:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CappedGuestList_$459",
                        "typeString": "contract CappedGuestList"
                      }
                    },
                    "src": "470:47:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CappedGuestList_$459",
                      "typeString": "contract CappedGuestList"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "470:47:21"
                }
              ]
            },
            "documentation": {
              "id": 472,
              "nodeType": "StructuredDocumentation",
              "src": "414:33:21",
              "text": "@notice Contract constructor."
            },
            "id": 483,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:2:21"
            },
            "returnParameters": {
              "id": 474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:0:21"
            },
            "scope": 578,
            "src": "450:72:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "1041:292:21",
              "statements": [
                {
                  "assignments": [
                    502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 502,
                      "mutability": "mutable",
                      "name": "_salt",
                      "nameLocation": "1055:5:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 536,
                      "src": "1047:13:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1047:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 507,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 504,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1076:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 505,
                        "name": "_slot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 486,
                        "src": "1084:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 503,
                      "name": "_computeSalt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "1063:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256) pure returns (bytes32)"
                      }
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:27:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1047:43:21"
                },
                {
                  "assignments": [
                    510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 510,
                      "mutability": "mutable",
                      "name": "_guestList",
                      "nameLocation": "1112:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 536,
                      "src": "1096:26:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CappedGuestList_$459",
                        "typeString": "contract CappedGuestList"
                      },
                      "typeName": {
                        "id": 509,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 508,
                          "name": "CappedGuestList",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 459,
                          "src": "1096:15:21"
                        },
                        "referencedDeclaration": 459,
                        "src": "1096:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CappedGuestList_$459",
                          "typeString": "contract CappedGuestList"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 520,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 517,
                            "name": "_salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "1193:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 514,
                                "name": "cappedGuestListInstance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 471,
                                "src": "1149:23:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CappedGuestList_$459",
                                  "typeString": "contract CappedGuestList"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CappedGuestList_$459",
                                  "typeString": "contract CappedGuestList"
                                }
                              ],
                              "id": 513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1141:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 512,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1141:7:21",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1141:32:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "cloneDeterministic",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5142,
                          "src": "1141:51:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$bound_to$_t_address_$",
                            "typeString": "function (address,bytes32) returns (address)"
                          }
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1141:58:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 511,
                      "name": "CappedGuestList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "1125:15:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CappedGuestList_$459_$",
                        "typeString": "type(contract CappedGuestList)"
                      }
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1125:75:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CappedGuestList_$459",
                      "typeString": "contract CappedGuestList"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1096:104:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 524,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "1228:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 525,
                        "name": "_vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 490,
                        "src": "1236:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 526,
                        "name": "_priceCalculator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 492,
                        "src": "1244:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 527,
                        "name": "_userDepositCap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 494,
                        "src": "1262:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 528,
                        "name": "_totalDepositCap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "1279:16:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 521,
                        "name": "_guestList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "1206:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CappedGuestList_$459",
                          "typeString": "contract CappedGuestList"
                        }
                      },
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "1206:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256) external"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1206:90:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:90:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 533,
                        "name": "_guestList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 510,
                        "src": "1317:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CappedGuestList_$459",
                          "typeString": "contract CappedGuestList"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CappedGuestList_$459",
                          "typeString": "contract CappedGuestList"
                        }
                      ],
                      "id": 532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1309:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 531,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1309:7:21",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1309:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 500,
                  "id": 535,
                  "nodeType": "Return",
                  "src": "1302:26:21"
                }
              ]
            },
            "documentation": {
              "id": 484,
              "nodeType": "StructuredDocumentation",
              "src": "526:332:21",
              "text": " @notice Creates a clone of the CappedGuestList.\n @param _slot Random number used to deterministically deploy the clone\n @param _owner owner of guestList\n @param _vault the Vault the guestList is for,\n @param _priceCalculator the PriceCalculator for guestList,\n @return The newly created delegation"
            },
            "functionSelector": "49c9c2e0",
            "id": 537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCappedGuestList",
            "nameLocation": "870:21:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "mutability": "mutable",
                  "name": "_slot",
                  "nameLocation": "900:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "892:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "892:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "915:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "907:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 490,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "931:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "923:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "_priceCalculator",
                  "nameLocation": "947:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "939:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "_userDepositCap",
                  "nameLocation": "973:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "965:23:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "_totalDepositCap",
                  "nameLocation": "998:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "990:24:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "891:124:21"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "1032:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:9:21"
            },
            "scope": 578,
            "src": "861:472:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "1622:100:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 550,
                        "name": "_salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 540,
                        "src": "1696:5:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 553,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1711:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CappedGuestListFactory_$578",
                              "typeString": "contract CappedGuestListFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CappedGuestListFactory_$578",
                              "typeString": "contract CappedGuestListFactory"
                            }
                          ],
                          "id": 552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1703:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1703:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1703:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 547,
                            "name": "cappedGuestListInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "1643:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CappedGuestList_$459",
                              "typeString": "contract CappedGuestList"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CappedGuestList_$459",
                              "typeString": "contract CappedGuestList"
                            }
                          ],
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1635:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 545,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1635:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1635:32:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "predictDeterministicAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5156,
                      "src": "1635:60:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes32,address) pure returns (address)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:82:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 544,
                  "id": 556,
                  "nodeType": "Return",
                  "src": "1628:89:21"
                }
              ]
            },
            "documentation": {
              "id": 538,
              "nodeType": "StructuredDocumentation",
              "src": "1337:210:21",
              "text": " @notice Computes the address of a clone, also known as minimal proxy contract.\n @param _salt Random number used to compute the address\n @return Address at which the clone will be deployed"
            },
            "id": 558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeAddress",
            "nameLocation": "1559:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nameLocation": "1583:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "1575:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1574:15:21"
            },
            "returnParameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 543,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 558,
                  "src": "1613:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1612:9:21"
            },
            "scope": 578,
            "src": "1550:172:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 576,
              "nodeType": "Block",
              "src": "2033:60:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 571,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 561,
                            "src": "2073:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 572,
                            "name": "_slot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "2081:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 569,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2056:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2056:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:31:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 568,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2046:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2046:42:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 567,
                  "id": 575,
                  "nodeType": "Return",
                  "src": "2039:49:21"
                }
              ]
            },
            "documentation": {
              "id": 559,
              "nodeType": "StructuredDocumentation",
              "src": "1726:219:21",
              "text": " @notice Computes salt used to deterministically deploy a clone.\n @param _vault Address of the vault\n @param _slot Slot of the delegation\n @return Salt used to deterministically deploy a clone."
            },
            "id": 577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_computeSalt",
            "nameLocation": "1957:12:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 561,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "1978:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "1970:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1970:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "_slot",
                  "nameLocation": "1994:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "1986:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1969:31:21"
            },
            "returnParameters": {
              "id": 567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 577,
                  "src": "2024:7:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 565,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2024:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2023:9:21"
            },
            "scope": 578,
            "src": "1948:145:21",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 579,
        "src": "238:1857:21",
        "usedErrors": []
      }
    ],
    "src": "37:2059:21"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161001d9061005f565b604051809103906000f080158015610039573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b039290921691909117905561006c565b6112278061034283390190565b6102c78061007b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632eb96fba1461003b57806349c9c2e01461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610232565b600080610085868961012a565b60008054919250906100a0906001600160a01b031683610172565b6040516314d6c7d760e31b81526001600160a01b038a811660048301528981166024830152888116604483015260648201889052608482018790529192509082169063a6b63eb89060a401600060405180830381600087803b15801561010557600080fd5b505af1158015610119573d6000803e3d6000fd5b50929b9a5050505050505050505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054016040516020818303038152906040528051906020012090505b92915050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b03811661016c5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b80356001600160a01b038116811461022d57600080fd5b919050565b60008060008060008060c0878903121561024b57600080fd5b8635955061025b60208801610216565b945061026960408801610216565b935061027760608801610216565b92506080870135915060a08701359050929550929550929556fea2646970667358221220e8819f78889e599eba34ced2212984ece567ece4d76c216c57b969df105e4a3564736f6c634300080c0033608060405234801561001057600080fd5b50611207806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80639135b6c3116100ad578063d23e048011610071578063d23e048014610251578063ebbf5c1714610264578063f2fde38b14610277578063f51c75121461028a578063fbfa77cf1461029357600080fd5b80639135b6c314610207578063a0622a5c1461021a578063a6b63eb814610222578063a8a9c26014610235578063c26ad22d1461023e57600080fd5b80635db88e85116100f45780635db88e85146101a7578063715018a6146101b057806377f32f84146101b85780638b95e335146101cb5780638da5cb5b146101f657600080fd5b806303d4fb75146101265780630eda85ee1461014c5780631a9ee26f1461017f57806345d1cfe014610192575b600080fd5b610139610134366004610eb0565b6102a6565b6040519081526020015b60405180910390f35b61016f61015a366004610eb0565b606b6020526000908152604090205460ff1681565b6040519015158152602001610143565b61016f61018d366004610f19565b610442565b6101a56101a0366004610f75565b6104dc565b005b610139606a5481565b6101a5610542565b6101a56101c6366004610f8e565b610578565b6067546101de906001600160a01b031681565b6040516001600160a01b039091168152602001610143565b6033546001600160a01b03166101de565b6101a5610215366004610f75565b610615565b61013961067b565b6101a5610230366004610fee565b61081e565b61013960695481565b6101a561024c366004611049565b6109a3565b6065546101de906001600160a01b031681565b6101a5610272366004610f75565b610acf565b6101a5610285366004610eb0565b610b2e565b61013960685481565b6066546101de906001600160a01b031681565b6066546040516370a0823160e01b81526001600160a01b03838116600483015260009283929116906370a0823190602401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610318919061109e565b90506000606660009054906101000a90046001600160a01b03166001600160a01b03166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610393919061109e565b6067546065549192506000916001600160a01b0391821691630a68667e91166103bc85876110cd565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610429919061109e565b6069549091506104399082610bc9565b95945050505050565b6001600160a01b0384166000908152606b602052604081205460ff168015801561046c5750606854155b15610475575060015b80158015610484575060685415155b1561049757610494868585610bdc565b90505b8080156104ac5750846104a9876102a6565b10155b80156104bf5750846104bc61067b565b10155b156104ce5760019150506104d4565b60009150505b949350505050565b6033546001600160a01b0316331461050f5760405162461bcd60e51b8152600401610506906110ec565b60405180910390fd5b606881905560405181907ff31172dfe9d39a93e27305df08f61a7f02e44070846c51c290c60a93597bd51590600090a250565b6033546001600160a01b0316331461056c5760405162461bcd60e51b8152600401610506906110ec565b6105766000610c59565b565b6033546001600160a01b031633146105a25760405162461bcd60e51b8152600401610506906110ec565b61060f84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808802828101820190935287825290935087925086918291850190849080828437600092019190915250610cab92505050565b50505050565b6033546001600160a01b0316331461063f5760405162461bcd60e51b8152600401610506906110ec565b60698190556040518181527fff92f33fbebe5d3177eb2e5face87085417f569955cd785211554df1d90084a5906020015b60405180910390a150565b600080606660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f5919061109e565b90506000606660009054906101000a90046001600160a01b03166001600160a01b03166377c7b8fc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561074c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610770919061109e565b6067546065549192506000916001600160a01b0391821691630a68667e911661079985876110cd565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa1580156107e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610806919061109e565b606a549091506108169082610bc9565b935050505090565b600054610100900460ff166108395760005460ff161561083d565b303b155b6108a05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610506565b600054610100900460ff161580156108c2576000805461ffff19166101011790555b6108ca610db2565b6108d386610b2e565b606680546001600160a01b0319166001600160a01b03871690811790915560408051637e062a3560e11b8152905163fc0c546a916004808201926020929091908290030181865afa15801561092c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109509190611121565b606580546001600160a01b03199081166001600160a01b0393841617909155606780549091169186169190911790556069839055606a829055801561099b576000805461ff00191690555b505050505050565b6109ae838383610bdc565b6109e95760405162461bcd60e51b815260206004820152600c60248201526b10b6b2b935b632a83937b7b360a11b6044820152606401610506565b6040805160018082528183019092526000916020808301908036833750506040805160018082528183019092529293506000929150602080830190803683370190505090508482600081518110610a4257610a4261113e565b60200260200101906001600160a01b031690816001600160a01b031681525050600181600081518110610a7757610a7761113e565b91151560209283029190910190910152610a918282610cab565b6068546040516001600160a01b038716907fb0265f949f67383910ea35ddfd8a25e2b554a8f9b878b8ca1e2336b433ad2d7290600090a35050505050565b6033546001600160a01b03163314610af95760405162461bcd60e51b8152600401610506906110ec565b606a8190556040518181527f4dca2e8d25c91b34082757532d59a08da6a173c9e60694e3a1b2cba6ccb07be190602001610670565b6033546001600160a01b03163314610b585760405162461bcd60e51b8152600401610506906110ec565b6001600160a01b038116610bbd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610506565b610bc681610c59565b50565b6000610bd58284611154565b9392505050565b6040516bffffffffffffffffffffffff19606085901b1660208201526000908190603401604051602081830303815290604052805190602001209050610439848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506068549150849050610de1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051825114610ce65760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610506565b60005b8251811015610dad5760006001600160a01b0316838281518110610d0f57610d0f61113e565b60200260200101516001600160a01b03161415610d2b57610d9b565b818181518110610d3d57610d3d61113e565b6020026020010151606b6000858481518110610d5b57610d5b61113e565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80610da58161116b565b915050610ce9565b505050565b600054610100900460ff16610dd95760405162461bcd60e51b815260040161050690611186565b610576610df7565b600082610dee8584610e27565b14949350505050565b600054610100900460ff16610e1e5760405162461bcd60e51b815260040161050690611186565b61057633610c59565b600081815b8451811015610e93576000858281518110610e4957610e4961113e565b60200260200101519050808311610e6f5760008381526020829052604090209250610e80565b600081815260208490526040902092505b5080610e8b8161116b565b915050610e2c565b509392505050565b6001600160a01b0381168114610bc657600080fd5b600060208284031215610ec257600080fd5b8135610bd581610e9b565b60008083601f840112610edf57600080fd5b50813567ffffffffffffffff811115610ef757600080fd5b6020830191508360208260051b8501011115610f1257600080fd5b9250929050565b60008060008060608587031215610f2f57600080fd5b8435610f3a81610e9b565b935060208501359250604085013567ffffffffffffffff811115610f5d57600080fd5b610f6987828801610ecd565b95989497509550505050565b600060208284031215610f8757600080fd5b5035919050565b60008060008060408587031215610fa457600080fd5b843567ffffffffffffffff80821115610fbc57600080fd5b610fc888838901610ecd565b90965094506020870135915080821115610fe157600080fd5b50610f6987828801610ecd565b600080600080600060a0868803121561100657600080fd5b853561101181610e9b565b9450602086013561102181610e9b565b9350604086013561103181610e9b565b94979396509394606081013594506080013592915050565b60008060006040848603121561105e57600080fd5b833561106981610e9b565b9250602084013567ffffffffffffffff81111561108557600080fd5b61109186828701610ecd565b9497909650939450505050565b6000602082840312156110b057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156110e7576110e76110b7565b500290565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561113357600080fd5b8151610bd581610e9b565b634e487b7160e01b600052603260045260246000fd5b600082821015611166576111666110b7565b500390565b600060001982141561117f5761117f6110b7565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220af6fc03eb70231a588fe8477ee777d03aaad2d805a5eafdaafa660fd79982f7964736f6c634300080c0033",
  "bytecodeSha1": "1ff597a2598cacb3e5f92f27fd3f0f8ea7c3d69e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CappedGuestListFactory",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "2": {},
      "20": {},
      "21": {},
      "24": {},
      "29": {},
      "3": {},
      "4": {},
      "5": {},
      "9": {
        "Clones.cloneDeterministic": {
          "4": [
            2341,
            2363,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "2": {},
      "20": {},
      "21": {
        "CappedGuestListFactory._computeSalt": {
          "2": [
            2039,
            2088
          ]
        },
        "CappedGuestListFactory.createCappedGuestList": {
          "0": [
            1206,
            1296
          ],
          "1": [
            1302,
            1328
          ]
        }
      },
      "24": {},
      "29": {},
      "3": {},
      "4": {},
      "5": {},
      "9": {
        "Clones.cloneDeterministic": {
          "3": [
            2333,
            2391
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/AddressUpgradeable",
    "CappedGuestList",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Clones",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "IPriceCalculator",
    "IVault",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/MerkleProofUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/OwnableUpgradeable",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/SafeMathUpgradeable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c80632eb96fba1461003b57806349c9c2e01461006a575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61004e610078366004610232565b600080610085868961012a565b60008054919250906100a0906001600160a01b031683610172565b6040516314d6c7d760e31b81526001600160a01b038a811660048301528981166024830152888116604483015260648201889052608482018790529192509082169063a6b63eb89060a401600060405180830381600087803b15801561010557600080fd5b505af1158015610119573d6000803e3d6000fd5b50929b9a5050505050505050505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054016040516020818303038152906040528051906020012090505b92915050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b03811661016c5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640160405180910390fd5b80356001600160a01b038116811461022d57600080fd5b919050565b60008060008060008060c0878903121561024b57600080fd5b8635955061025b60208801610216565b945061026960408801610216565b935061027760608801610216565b92506080870135915060a08701359050929550929550929556fea2646970667358221220e8819f78889e599eba34ced2212984ece567ece4d76c216c57b969df105e4a3564736f6c634300080c0033",
  "deployedSourceMap": "238:1857:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:46;;;;;-1:-1:-1;;;;;363:46:21;;;;;;-1:-1:-1;;;;;201:32:40;;;183:51;;171:2;156:18;363:46:21;;;;;;;861:472;;;;;;:::i;:::-;1032:7;1047:13;1063:27;1076:6;1084:5;1063:12;:27::i;:::-;1096:26;1149:23;;1047:43;;-1:-1:-1;1096:26:21;1141:58;;-1:-1:-1;;;;;1149:23:21;1047:43;1141:51;:58::i;:::-;1206:90;;-1:-1:-1;;;1206:90:21;;-1:-1:-1;;;;;1492:15:40;;;1206:90:21;;;1474:34:40;1544:15;;;1524:18;;;1517:43;1596:15;;;1576:18;;;1569:43;1628:18;;;1621:34;;;1671:19;;;1664:35;;;1096:104:21;;-1:-1:-1;1206:21:21;;;;;;1408:19:40;;1206:90:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1317:10:21;;861:472;-1:-1:-1;;;;;;;;;;;861:472:21:o;1948:145::-;2056:31;;-1:-1:-1;;1887:2:40;1883:15;;;1879:53;2056:31:21;;;1867:66:40;1949:12;;;1942:28;;;2024:7:21;;1986:12:40;;2056:31:21;;;;;;;;;;;;2046:42;;;;;;2039:49;;1948:145;;;;;:::o;1848:550:9:-;1932:16;2000:4;1994:11;-1:-1:-1;;;2025:3:9;2018:79;2143:14;2137:4;2133:25;2126:4;2121:3;2117:14;2110:49;-1:-1:-1;;;2188:4:9;2183:3;2179:14;2172:90;2309:4;2303;2298:3;2295:1;2287:27;2275:39;-1:-1:-1;;;;;;;2341:22:9;;2333:58;;;;-1:-1:-1;;;2333:58:9;;2211:2:40;2333:58:9;;;2193:21:40;2250:2;2230:18;;;2223:30;2289:25;2269:18;;;2262:53;2332:18;;2333:58:9;;;;;;;245:173:40;313:20;;-1:-1:-1;;;;;362:31:40;;352:42;;342:70;;408:1;405;398:12;342:70;245:173;;;:::o;423:541::-;527:6;535;543;551;559;567;620:3;608:9;599:7;595:23;591:33;588:53;;;637:1;634;627:12;588:53;673:9;660:23;650:33;;702:38;736:2;725:9;721:18;702:38;:::i;:::-;692:48;;759:38;793:2;782:9;778:18;759:38;:::i;:::-;749:48;;816:38;850:2;839:9;835:18;816:38;:::i;:::-;806:48;;901:3;890:9;886:19;873:33;863:43;;953:3;942:9;938:19;925:33;915:43;;423:541;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "cappedGuestListInstance()": {
        "notice": "The instance to which all proxies will point."
      },
      "constructor": {
        "notice": "Contract constructor."
      },
      "createCappedGuestList(uint256,address,address,address,uint256,uint256)": {
        "notice": "Creates a clone of the CappedGuestList.",
        "params": {
          "_owner": "owner of guestList",
          "_priceCalculator": "the PriceCalculator for guestList,",
          "_slot": "Random number used to deterministically deploy the clone",
          "_vault": "the Vault the guestList is for,"
        },
        "returns": {
          "_0": "The newly created delegation"
        }
      }
    },
    "title": "The CappedGuestListFactory allows users to create CappedGuestList very cheaply.",
    "version": 1
  },
  "offset": [
    238,
    2095
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2EB96FBA EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x49C9C2E0 EQ PUSH2 0x6A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x4E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x78 CALLDATASIZE PUSH1 0x4 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x85 DUP7 DUP10 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xA0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x14D6C7D7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x84 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP SWAP1 DUP3 AND SWAP1 PUSH4 0xA6B63EB8 SWAP1 PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP4 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE DUP3 PUSH1 0x37 DUP3 PUSH1 0x0 CREATE2 SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x16C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A2063726561746532206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH2 0x25B PUSH1 0x20 DUP9 ADD PUSH2 0x216 JUMP JUMPDEST SWAP5 POP PUSH2 0x269 PUSH1 0x40 DUP9 ADD PUSH2 0x216 JUMP JUMPDEST SWAP4 POP PUSH2 0x277 PUSH1 0x60 DUP9 ADD PUSH2 0x216 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 DUP2 SWAP16 PUSH25 0x889E599EBA34CED2212984ECE567ECE4D76C216C57B969DF10 0x5E 0x4A CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        238,
        2095
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "5": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "CALLVALUE",
      "path": "21"
    },
    "6": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "DUP1",
      "path": "21"
    },
    "7": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "8": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "DUP1",
      "path": "21"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "REVERT",
      "path": "21"
    },
    "16": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "17": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "POP",
      "path": "21"
    },
    "18": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "21": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "LT",
      "path": "21"
    },
    "22": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "26": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "29": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "SHR",
      "path": "21"
    },
    "32": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "DUP1",
      "path": "21"
    },
    "33": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x2EB96FBA"
    },
    "38": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "EQ",
      "path": "21"
    },
    "39": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "43": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "DUP1",
      "path": "21"
    },
    "44": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0x49C9C2E0"
    },
    "49": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "EQ",
      "path": "21"
    },
    "50": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x6A"
    },
    "53": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "54": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "55": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "DUP1",
      "path": "21"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        238,
        2095
      ],
      "op": "REVERT",
      "path": "21"
    },
    "59": {
      "offset": [
        363,
        409
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "60": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "62": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "63": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4E"
    },
    "66": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "67": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "69": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "71": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "73": {
      "op": "SHL"
    },
    "74": {
      "op": "SUB"
    },
    "75": {
      "offset": [
        363,
        409
      ],
      "op": "AND",
      "path": "21"
    },
    "76": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "DUP2",
      "path": "21"
    },
    "77": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "JUMP",
      "path": "21"
    },
    "78": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "79": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "81": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "82": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "84": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "86": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "88": {
      "op": "SHL"
    },
    "89": {
      "op": "SUB"
    },
    "90": {
      "op": "SWAP1"
    },
    "91": {
      "op": "SWAP2"
    },
    "92": {
      "op": "AND"
    },
    "93": {
      "op": "DUP2"
    },
    "94": {
      "op": "MSTORE"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "97": {
      "op": "ADD"
    },
    "98": {
      "offset": [
        363,
        409
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "100": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "101": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "DUP1",
      "path": "21"
    },
    "102": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "103": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "SUB",
      "path": "21"
    },
    "104": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "105": {
      "fn": null,
      "offset": [
        363,
        409
      ],
      "op": "RETURN",
      "path": "21"
    },
    "106": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "107": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4E"
    },
    "110": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x78"
    },
    "113": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "114": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "116": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x232"
    },
    "119": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "jump": "i",
      "offset": [
        861,
        1333
      ],
      "op": "JUMP",
      "path": "21"
    },
    "120": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "121": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1032,
        1039
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "123": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1047,
        1060
      ],
      "op": "DUP1",
      "path": "21"
    },
    "124": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1063,
        1090
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x85"
    },
    "127": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1076,
        1082
      ],
      "op": "DUP7",
      "path": "21"
    },
    "128": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1084,
        1089
      ],
      "op": "DUP10",
      "path": "21"
    },
    "129": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1063,
        1075
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x12A"
    },
    "132": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "jump": "i",
      "offset": [
        1063,
        1090
      ],
      "op": "JUMP",
      "path": "21"
    },
    "133": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1063,
        1090
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "134": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1096,
        1122
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "136": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1149,
        1172
      ],
      "op": "DUP1",
      "path": "21"
    },
    "137": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1149,
        1172
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "138": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1047,
        1090
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "139": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1047,
        1090
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "140": {
      "op": "POP"
    },
    "141": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1096,
        1122
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "142": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1141,
        1199
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0xA0"
    },
    "145": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1141,
        1199
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "152": {
      "op": "SHL"
    },
    "153": {
      "op": "SUB"
    },
    "154": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1149,
        1172
      ],
      "op": "AND",
      "path": "21"
    },
    "155": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1047,
        1090
      ],
      "op": "DUP4",
      "path": "21"
    },
    "156": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1141,
        1192
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x172"
    },
    "159": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "jump": "i",
      "offset": [
        1141,
        1199
      ],
      "op": "JUMP",
      "path": "21"
    },
    "160": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1141,
        1199
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "161": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 0,
      "value": "0x40"
    },
    "163": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "164": {
      "op": "PUSH4",
      "value": "0x14D6C7D7"
    },
    "169": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "171": {
      "op": "SHL"
    },
    "172": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP2",
      "path": "21"
    },
    "173": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "178": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "180": {
      "op": "SHL"
    },
    "181": {
      "op": "SUB"
    },
    "182": {
      "op": "DUP11"
    },
    "183": {
      "op": "DUP2"
    },
    "184": {
      "op": "AND"
    },
    "185": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "187": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP4",
      "path": "21"
    },
    "188": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "ADD",
      "path": "21"
    },
    "189": {
      "op": "MSTORE"
    },
    "190": {
      "op": "DUP10"
    },
    "191": {
      "op": "DUP2"
    },
    "192": {
      "op": "AND"
    },
    "193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "195": {
      "op": "DUP4"
    },
    "196": {
      "op": "ADD"
    },
    "197": {
      "op": "MSTORE"
    },
    "198": {
      "op": "DUP9"
    },
    "199": {
      "op": "DUP2"
    },
    "200": {
      "op": "AND"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "203": {
      "op": "DUP4"
    },
    "204": {
      "op": "ADD"
    },
    "205": {
      "op": "MSTORE"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "208": {
      "op": "DUP3"
    },
    "209": {
      "op": "ADD"
    },
    "210": {
      "op": "DUP9"
    },
    "211": {
      "op": "SWAP1"
    },
    "212": {
      "op": "MSTORE"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "215": {
      "op": "DUP3"
    },
    "216": {
      "op": "ADD"
    },
    "217": {
      "op": "DUP8"
    },
    "218": {
      "op": "SWAP1"
    },
    "219": {
      "op": "MSTORE"
    },
    "220": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1096,
        1200
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "221": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1096,
        1200
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "222": {
      "op": "POP"
    },
    "223": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1227
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "224": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1227
      ],
      "op": "DUP3",
      "path": "21"
    },
    "225": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1227
      ],
      "op": "AND",
      "path": "21"
    },
    "226": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1227
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "227": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1227
      ],
      "op": "PUSH4",
      "path": "21",
      "value": "0xA6B63EB8"
    },
    "232": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1227
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "233": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "238": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "240": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "241": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP1",
      "path": "21"
    },
    "242": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP4",
      "path": "21"
    },
    "243": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "SUB",
      "path": "21"
    },
    "244": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP2",
      "path": "21"
    },
    "245": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "247": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP8",
      "path": "21"
    },
    "248": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP1",
      "path": "21"
    },
    "249": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "EXTCODESIZE",
      "path": "21"
    },
    "250": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "251": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP1",
      "path": "21"
    },
    "252": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "253": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x105"
    },
    "256": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "257": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "259": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP1",
      "path": "21"
    },
    "260": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "REVERT",
      "path": "21"
    },
    "261": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "262": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "POP",
      "path": "21"
    },
    "263": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "GAS",
      "path": "21"
    },
    "264": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "CALL",
      "path": "21"
    },
    "265": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "266": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP1",
      "path": "21"
    },
    "267": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "268": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x119"
    },
    "271": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "272": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "273": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "275": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "DUP1",
      "path": "21"
    },
    "276": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "RETURNDATACOPY",
      "path": "21"
    },
    "277": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "RETURNDATASIZE",
      "path": "21"
    },
    "278": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "280": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "REVERT",
      "path": "21"
    },
    "281": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1206,
        1296
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "282": {
      "op": "POP"
    },
    "283": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1317,
        1327
      ],
      "op": "SWAP3",
      "path": "21",
      "statement": 1
    },
    "284": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        1317,
        1327
      ],
      "op": "SWAP12",
      "path": "21"
    },
    "285": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "offset": [
        861,
        1333
      ],
      "op": "SWAP11",
      "path": "21"
    },
    "286": {
      "op": "POP"
    },
    "287": {
      "op": "POP"
    },
    "288": {
      "op": "POP"
    },
    "289": {
      "op": "POP"
    },
    "290": {
      "op": "POP"
    },
    "291": {
      "op": "POP"
    },
    "292": {
      "op": "POP"
    },
    "293": {
      "op": "POP"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "op": "POP"
    },
    "297": {
      "fn": "CappedGuestListFactory.createCappedGuestList",
      "jump": "o",
      "offset": [
        861,
        1333
      ],
      "op": "JUMP",
      "path": "21"
    },
    "298": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        1948,
        2093
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "299": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 2,
      "value": "0x40"
    },
    "301": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "302": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "315": {
      "op": "NOT"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "318": {
      "op": "DUP5"
    },
    "319": {
      "op": "SWAP1"
    },
    "320": {
      "op": "SHL"
    },
    "321": {
      "op": "AND"
    },
    "322": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "324": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "DUP3",
      "path": "21"
    },
    "325": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "ADD",
      "path": "21"
    },
    "326": {
      "op": "MSTORE"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "329": {
      "op": "DUP2"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "op": "DUP3"
    },
    "332": {
      "op": "SWAP1"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2024,
        2031
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "336": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2024,
        2031
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "342": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "343": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "345": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "DUP2",
      "path": "21"
    },
    "346": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "DUP4",
      "path": "21"
    },
    "347": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "SUB",
      "path": "21"
    },
    "348": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "SUB",
      "path": "21"
    },
    "349": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "DUP2",
      "path": "21"
    },
    "350": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "351": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "352": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "354": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2056,
        2087
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "355": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2046,
        2088
      ],
      "op": "DUP1",
      "path": "21"
    },
    "356": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2046,
        2088
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "357": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2046,
        2088
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "358": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2046,
        2088
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "360": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2046,
        2088
      ],
      "op": "ADD",
      "path": "21"
    },
    "361": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2046,
        2088
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "362": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2039,
        2088
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "363": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        2039,
        2088
      ],
      "op": "POP",
      "path": "21"
    },
    "364": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        1948,
        2093
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "365": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        1948,
        2093
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "366": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        1948,
        2093
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "367": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        1948,
        2093
      ],
      "op": "POP",
      "path": "21"
    },
    "368": {
      "fn": "CappedGuestListFactory._computeSalt",
      "offset": [
        1948,
        2093
      ],
      "op": "POP",
      "path": "21"
    },
    "369": {
      "fn": "CappedGuestListFactory._computeSalt",
      "jump": "o",
      "offset": [
        1948,
        2093
      ],
      "op": "JUMP",
      "path": "21"
    },
    "370": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        1848,
        2398
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "371": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        1932,
        1948
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "373": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2000,
        2004
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "375": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        1994,
        2005
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "376": {
      "op": "PUSH20",
      "value": "0x3D602D80600A3D3981F3363D3D373D3D3D363D73"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "399": {
      "op": "SHL"
    },
    "400": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2025,
        2028
      ],
      "op": "DUP2",
      "path": "9"
    },
    "401": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2018,
        2097
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "402": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2143,
        2157
      ],
      "op": "DUP4",
      "path": "9"
    },
    "403": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2137,
        2141
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "405": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2133,
        2158
      ],
      "op": "SHL",
      "path": "9"
    },
    "406": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2126,
        2130
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x14"
    },
    "408": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2121,
        2124
      ],
      "op": "DUP3",
      "path": "9"
    },
    "409": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2117,
        2131
      ],
      "op": "ADD",
      "path": "9"
    },
    "410": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2110,
        2159
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "411": {
      "op": "PUSH15",
      "value": "0x5AF43D82803E903D91602B57FD5BF3"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2188,
        2192
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x28"
    },
    "432": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2183,
        2186
      ],
      "op": "DUP3",
      "path": "9"
    },
    "433": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2179,
        2193
      ],
      "op": "ADD",
      "path": "9"
    },
    "434": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2172,
        2262
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "435": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2309,
        2313
      ],
      "op": "DUP3",
      "path": "9"
    },
    "436": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2303,
        2307
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x37"
    },
    "438": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2298,
        2301
      ],
      "op": "DUP3",
      "path": "9"
    },
    "439": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2295,
        2296
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "441": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2287,
        2314
      ],
      "op": "CREATE2",
      "path": "9"
    },
    "442": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2275,
        2314
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "op": "POP"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "451": {
      "op": "SHL"
    },
    "452": {
      "op": "SUB"
    },
    "453": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2341,
        2363
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 3
    },
    "454": {
      "branch": 4,
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2341,
        2363
      ],
      "op": "AND",
      "path": "9"
    },
    "455": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x16C"
    },
    "458": {
      "branch": 4,
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "459": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "461": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "462": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "466": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "468": {
      "op": "SHL"
    },
    "469": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "DUP2",
      "path": "9"
    },
    "470": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "473": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "475": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "DUP3",
      "path": "9"
    },
    "476": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "ADD",
      "path": "9"
    },
    "477": {
      "op": "MSTORE"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "482": {
      "op": "DUP3"
    },
    "483": {
      "op": "ADD"
    },
    "484": {
      "op": "MSTORE"
    },
    "485": {
      "op": "PUSH32",
      "value": "0x455243313136373A2063726561746532206661696C6564000000000000000000"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "520": {
      "op": "DUP3"
    },
    "521": {
      "op": "ADD"
    },
    "522": {
      "op": "MSTORE"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "525": {
      "op": "ADD"
    },
    "526": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "528": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "529": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "DUP1",
      "path": "9"
    },
    "530": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "531": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "SUB",
      "path": "9"
    },
    "532": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "533": {
      "fn": "Clones.cloneDeterministic",
      "offset": [
        2333,
        2391
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "9"
    },
    "534": {
      "op": "JUMPDEST"
    },
    "535": {
      "op": "DUP1"
    },
    "536": {
      "op": "CALLDATALOAD"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "op": "DUP2"
    },
    "546": {
      "op": "AND"
    },
    "547": {
      "op": "DUP2"
    },
    "548": {
      "op": "EQ"
    },
    "549": {
      "op": "PUSH2",
      "value": "0x22D"
    },
    "552": {
      "op": "JUMPI"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "555": {
      "op": "DUP1"
    },
    "556": {
      "op": "REVERT"
    },
    "557": {
      "op": "JUMPDEST"
    },
    "558": {
      "op": "SWAP2"
    },
    "559": {
      "op": "SWAP1"
    },
    "560": {
      "op": "POP"
    },
    "561": {
      "jump": "o",
      "op": "JUMP"
    },
    "562": {
      "op": "JUMPDEST"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "565": {
      "op": "DUP1"
    },
    "566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "568": {
      "op": "DUP1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "571": {
      "op": "DUP1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "574": {
      "op": "DUP8"
    },
    "575": {
      "op": "DUP10"
    },
    "576": {
      "op": "SUB"
    },
    "577": {
      "op": "SLT"
    },
    "578": {
      "op": "ISZERO"
    },
    "579": {
      "op": "PUSH2",
      "value": "0x24B"
    },
    "582": {
      "op": "JUMPI"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "585": {
      "op": "DUP1"
    },
    "586": {
      "op": "REVERT"
    },
    "587": {
      "op": "JUMPDEST"
    },
    "588": {
      "op": "DUP7"
    },
    "589": {
      "op": "CALLDATALOAD"
    },
    "590": {
      "op": "SWAP6"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "op": "PUSH2",
      "value": "0x25B"
    },
    "595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "597": {
      "op": "DUP9"
    },
    "598": {
      "op": "ADD"
    },
    "599": {
      "op": "PUSH2",
      "value": "0x216"
    },
    "602": {
      "jump": "i",
      "op": "JUMP"
    },
    "603": {
      "op": "JUMPDEST"
    },
    "604": {
      "op": "SWAP5"
    },
    "605": {
      "op": "POP"
    },
    "606": {
      "op": "PUSH2",
      "value": "0x269"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "611": {
      "op": "DUP9"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "op": "PUSH2",
      "value": "0x216"
    },
    "616": {
      "jump": "i",
      "op": "JUMP"
    },
    "617": {
      "op": "JUMPDEST"
    },
    "618": {
      "op": "SWAP4"
    },
    "619": {
      "op": "POP"
    },
    "620": {
      "op": "PUSH2",
      "value": "0x277"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "625": {
      "op": "DUP9"
    },
    "626": {
      "op": "ADD"
    },
    "627": {
      "op": "PUSH2",
      "value": "0x216"
    },
    "630": {
      "jump": "i",
      "op": "JUMP"
    },
    "631": {
      "op": "JUMPDEST"
    },
    "632": {
      "op": "SWAP3"
    },
    "633": {
      "op": "POP"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "636": {
      "op": "DUP8"
    },
    "637": {
      "op": "ADD"
    },
    "638": {
      "op": "CALLDATALOAD"
    },
    "639": {
      "op": "SWAP2"
    },
    "640": {
      "op": "POP"
    },
    "641": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "643": {
      "op": "DUP8"
    },
    "644": {
      "op": "ADD"
    },
    "645": {
      "op": "CALLDATALOAD"
    },
    "646": {
      "op": "SWAP1"
    },
    "647": {
      "op": "POP"
    },
    "648": {
      "op": "SWAP3"
    },
    "649": {
      "op": "SWAP6"
    },
    "650": {
      "op": "POP"
    },
    "651": {
      "op": "SWAP3"
    },
    "652": {
      "op": "SWAP6"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "op": "SWAP3"
    },
    "655": {
      "op": "SWAP6"
    },
    "656": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "299280a46789b22a49874635551936f28434b6e6",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.12;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\n\nimport \"./CappedGuestList.sol\";\n\n/// @title The CappedGuestListFactory allows users to create CappedGuestList very cheaply.\ncontract CappedGuestListFactory {\n  using Clones for address;\n\n  /// @notice The instance to which all proxies will point.\n  CappedGuestList public cappedGuestListInstance;\n\n  /// @notice Contract constructor.\n  constructor() {\n    cappedGuestListInstance = new CappedGuestList();\n  }\n\n  /**\n   * @notice Creates a clone of the CappedGuestList.\n   * @param _slot Random number used to deterministically deploy the clone\n   * @param _owner owner of guestList\n   * @param _vault the Vault the guestList is for,\n   * @param _priceCalculator the PriceCalculator for guestList,\n   * @return The newly created delegation\n   */\n  function createCappedGuestList(uint256 _slot, address _owner, address _vault, address _priceCalculator, uint256 _userDepositCap, uint256 _totalDepositCap) public returns (address) {\n    bytes32 _salt = _computeSalt(_vault, _slot);\n    CappedGuestList _guestList = CappedGuestList(address(cappedGuestListInstance).cloneDeterministic(_salt));\n    _guestList.initialize(_owner, _vault, _priceCalculator, _userDepositCap, _totalDepositCap);\n    return address(_guestList);\n  }\n\n  /**\n   * @notice Computes the address of a clone, also known as minimal proxy contract.\n   * @param _salt Random number used to compute the address\n   * @return Address at which the clone will be deployed\n   */\n  function _computeAddress(bytes32 _salt) internal view returns (address) {\n    return address(cappedGuestListInstance).predictDeterministicAddress(_salt, address(this));\n  }\n\n  /**\n   * @notice Computes salt used to deterministically deploy a clone.\n   * @param _vault Address of the vault\n   * @param _slot Slot of the delegation\n   * @return Salt used to deterministically deploy a clone.\n   */\n  function _computeSalt(address _vault, uint256 _slot) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked(_vault, _slot));\n  }\n}\n",
  "sourceMap": "238:1857:21:-:0;;;450:72;;;;;;;;;;496:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;470:23:21;:47;;-1:-1:-1;;;;;;470:47:21;-1:-1:-1;;;;;470:47:21;;;;;;;;;;238:1857;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/CappedGuestListFactory.sol",
  "type": "contract"
}