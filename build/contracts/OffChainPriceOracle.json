{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "token",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "price",
          "type": "uint256[]"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "14": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "25": "contracts/interfaces/IPriceFeed.sol",
    "37": "contracts/priceOracle/OffChainPriceOracle.sol",
    "8": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/priceOracle/OffChainPriceOracle.sol",
    "exportedSymbols": {
      "Context": [
        6746
      ],
      "IPriceFeed": [
        699
      ],
      "OffChainPriceOracle": [
        3805
      ],
      "Ownable": [
        6240
      ]
    },
    "id": 3806,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3734,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:37"
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3735,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3806,
        "sourceUnit": 6241,
        "src": "57:52:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IPriceFeed.sol",
        "file": "../interfaces/IPriceFeed.sol",
        "id": 3736,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3806,
        "sourceUnit": 700,
        "src": "110:38:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3737,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6240,
              "src": "182:7:37"
            },
            "id": 3738,
            "nodeType": "InheritanceSpecifier",
            "src": "182:7:37"
          },
          {
            "baseName": {
              "id": 3739,
              "name": "IPriceFeed",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 699,
              "src": "191:10:37"
            },
            "id": 3740,
            "nodeType": "InheritanceSpecifier",
            "src": "191:10:37"
          }
        ],
        "canonicalName": "OffChainPriceOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3805,
        "linearizedBaseContracts": [
          3805,
          699,
          6240,
          6746
        ],
        "name": "OffChainPriceOracle",
        "nameLocation": "159:19:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3744,
            "mutability": "mutable",
            "name": "tokenPriceInUSD",
            "nameLocation": "237:15:37",
            "nodeType": "VariableDeclaration",
            "scope": 3805,
            "src": "209:43:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 3743,
              "keyType": {
                "id": 3741,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "217:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "209:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3742,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "228:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3790,
              "nodeType": "Block",
              "src": "342:195:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3756,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3747,
                            "src": "360:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 3757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "360:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3758,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3750,
                            "src": "376:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 3759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "376:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "360:28:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "352:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "352:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3762,
                  "nodeType": "ExpressionStatement",
                  "src": "352:37:37"
                },
                {
                  "assignments": [
                    3764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3764,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "407:3:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 3790,
                      "src": "399:11:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3763,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "399:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3767,
                  "initialValue": {
                    "expression": {
                      "id": 3765,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3747,
                      "src": "413:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 3766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "413:12:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "399:26:37"
                },
                {
                  "body": {
                    "id": 3788,
                    "nodeType": "Block",
                    "src": "470:61:37",
                    "statements": [
                      {
                        "expression": {
                          "id": 3786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3778,
                              "name": "tokenPriceInUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3744,
                              "src": "484:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3782,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 3779,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3747,
                                "src": "500:5:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 3781,
                              "indexExpression": {
                                "id": 3780,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3769,
                                "src": "506:1:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "500:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "484:25:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 3783,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3750,
                              "src": "512:5:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3785,
                            "indexExpression": {
                              "id": 3784,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3769,
                              "src": "518:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "512:8:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "484:36:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3787,
                        "nodeType": "ExpressionStatement",
                        "src": "484:36:37"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3772,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3769,
                      "src": "456:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 3773,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3764,
                      "src": "460:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "456:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3789,
                  "initializationExpression": {
                    "assignments": [
                      3769
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 3769,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "449:1:37",
                        "nodeType": "VariableDeclaration",
                        "scope": 3789,
                        "src": "441:9:37",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "441:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 3771,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 3770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "453:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "441:13:37"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 3776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "465:3:37",
                      "subExpression": {
                        "id": 3775,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3769,
                        "src": "467:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3777,
                    "nodeType": "ExpressionStatement",
                    "src": "465:3:37"
                  },
                  "nodeType": "ForStatement",
                  "src": "436:95:37"
                }
              ]
            },
            "functionSelector": "2c10e90c",
            "id": 3791,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3753,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3752,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6182,
                  "src": "332:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "332:9:37"
              }
            ],
            "name": "update",
            "nameLocation": "268:6:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3747,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "292:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 3791,
                  "src": "275:22:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3745,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "275:7:37",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3746,
                    "nodeType": "ArrayTypeName",
                    "src": "275:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3750,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "316:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 3791,
                  "src": "299:22:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3748,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "299:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 3749,
                    "nodeType": "ArrayTypeName",
                    "src": "299:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "274:48:37"
            },
            "returnParameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:37"
            },
            "scope": 3805,
            "src": "259:278:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              698
            ],
            "body": {
              "id": 3803,
              "nodeType": "Block",
              "src": "615:46:37",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 3799,
                      "name": "tokenPriceInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3744,
                      "src": "632:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 3801,
                    "indexExpression": {
                      "id": 3800,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3793,
                      "src": "648:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "632:22:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3798,
                  "id": 3802,
                  "nodeType": "Return",
                  "src": "625:29:37"
                }
              ]
            },
            "functionSelector": "38266b22",
            "id": 3804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nameLocation": "552:7:37",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3795,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "589:8:37"
            },
            "parameters": {
              "id": 3794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3793,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "568:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 3804,
                  "src": "560:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "560:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "559:15:37"
            },
            "returnParameters": {
              "id": 3798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3797,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3804,
                  "src": "606:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "605:9:37"
            },
            "scope": 3805,
            "src": "543:118:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3806,
        "src": "150:514:37",
        "usedErrors": []
      }
    ],
    "src": "32:632:37"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105438061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632c10e90c1461005c57806338266b2214610071578063715018a6146100ad5780638da5cb5b146100b5578063f2fde38b146100d0575b600080fd5b61006f61006a3660046103b7565b6100e3565b005b61009a61007f366004610477565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b61006f6101a4565b6000546040516001600160a01b0390911681526020016100a4565b61006f6100de366004610477565b6101da565b6000546001600160a01b031633146101165760405162461bcd60e51b815260040161010d90610499565b60405180910390fd5b805182511461012457600080fd5b815160005b8181101561019e57828181518110610143576101436104ce565b602002602001015160016000868481518110610161576101616104ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080610197906104e4565b9050610129565b50505050565b6000546001600160a01b031633146101ce5760405162461bcd60e51b815260040161010d90610499565b6101d86000610275565b565b6000546001600160a01b031633146102045760405162461bcd60e51b815260040161010d90610499565b6001600160a01b0381166102695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161010d565b61027281610275565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610304576103046102c5565b604052919050565b600067ffffffffffffffff821115610326576103266102c5565b5060051b60200190565b80356001600160a01b038116811461034757600080fd5b919050565b600082601f83011261035d57600080fd5b8135602061037261036d8361030c565b6102db565b82815260059290921b8401810191818101908684111561039157600080fd5b8286015b848110156103ac5780358352918301918301610395565b509695505050505050565b600080604083850312156103ca57600080fd5b823567ffffffffffffffff808211156103e257600080fd5b818501915085601f8301126103f657600080fd5b8135602061040661036d8361030c565b82815260059290921b8401810191818101908984111561042557600080fd5b948201945b8386101561044a5761043b86610330565b8252948201949082019061042a565b9650508601359250508082111561046057600080fd5b5061046d8582860161034c565b9150509250929050565b60006020828403121561048957600080fd5b61049282610330565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561050657634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122019b5a7fd3b57cba5e69bfab947aa1abb548a3477bed06b7aed203069ee5ffc1164736f6c634300080c0033",
  "bytecodeSha1": "af2a824f3c699067f0df8eecc4886cac73fb713b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "OffChainPriceOracle",
  "coverageMap": {
    "branches": {
      "14": {},
      "25": {},
      "37": {
        "OffChainPriceOracle.update": {
          "11": [
            360,
            388,
            true
          ]
        }
      },
      "8": {
        "Ownable.transferOwnership": {
          "12": [
            2006,
            2028,
            true
          ]
        }
      }
    },
    "statements": {
      "14": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "25": {},
      "37": {
        "OffChainPriceOracle.getData": {
          "0": [
            625,
            654
          ]
        },
        "OffChainPriceOracle.update": {
          "3": [
            352,
            389
          ],
          "4": [
            484,
            520
          ],
          "5": [
            465,
            468
          ]
        }
      },
      "8": {
        "Ownable._transferOwnership": {
          "9": [
            2378,
            2395
          ],
          "10": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "6": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "7": [
            1998,
            2071
          ],
          "8": [
            2081,
            2109
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "IPriceFeed",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80632c10e90c1461005c57806338266b2214610071578063715018a6146100ad5780638da5cb5b146100b5578063f2fde38b146100d0575b600080fd5b61006f61006a3660046103b7565b6100e3565b005b61009a61007f366004610477565b6001600160a01b031660009081526001602052604090205490565b6040519081526020015b60405180910390f35b61006f6101a4565b6000546040516001600160a01b0390911681526020016100a4565b61006f6100de366004610477565b6101da565b6000546001600160a01b031633146101165760405162461bcd60e51b815260040161010d90610499565b60405180910390fd5b805182511461012457600080fd5b815160005b8181101561019e57828181518110610143576101436104ce565b602002602001015160016000868481518110610161576101616104ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208190555080610197906104e4565b9050610129565b50505050565b6000546001600160a01b031633146101ce5760405162461bcd60e51b815260040161010d90610499565b6101d86000610275565b565b6000546001600160a01b031633146102045760405162461bcd60e51b815260040161010d90610499565b6001600160a01b0381166102695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161010d565b61027281610275565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610304576103046102c5565b604052919050565b600067ffffffffffffffff821115610326576103266102c5565b5060051b60200190565b80356001600160a01b038116811461034757600080fd5b919050565b600082601f83011261035d57600080fd5b8135602061037261036d8361030c565b6102db565b82815260059290921b8401810191818101908684111561039157600080fd5b8286015b848110156103ac5780358352918301918301610395565b509695505050505050565b600080604083850312156103ca57600080fd5b823567ffffffffffffffff808211156103e257600080fd5b818501915085601f8301126103f657600080fd5b8135602061040661036d8361030c565b82815260059290921b8401810191818101908984111561042557600080fd5b948201945b8386101561044a5761043b86610330565b8252948201949082019061042a565b9650508601359250508082111561046057600080fd5b5061046d8582860161034c565b9150509250929050565b60006020828403121561048957600080fd5b61049282610330565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060001982141561050657634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122019b5a7fd3b57cba5e69bfab947aa1abb548a3477bed06b7aed203069ee5ffc1164736f6c634300080c0033",
  "deployedSourceMap": "150:514:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:278;;;;;;:::i;:::-;;:::i;:::-;;543:118;;;;;;:::i;:::-;-1:-1:-1;;;;;632:22:37;606:7;632:22;;;:15;:22;;;;;;;543:118;;;;2947:25:40;;;2935:2;2920:18;543:118:37;;;;;;;;1668:101:8;;;:::i;1036:85::-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:8;;;3129:51:40;;3117:2;3102:18;1036:85:8;2983:203:40;1918:198:8;;;;;;:::i;:::-;;:::i;259:278:37:-;1082:7:8;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:14;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;;;;;;;;;376:5:37::1;:12;360:5;:12;:28;352:37;;;::::0;::::1;;413:12:::0;;399:11:::1;436:95;460:3;456:1;:7;436:95;;;512:5;518:1;512:8;;;;;;;;:::i;:::-;;;;;;;484:15;:25;500:5;506:1;500:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;484:25:37::1;-1:-1:-1::0;;;;;484:25:37::1;;;;;;;;;;;;:36;;;;465:3;;;;:::i;:::-;;;436:95;;;;342:195;259:278:::0;;:::o;1668:101:8:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:14;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:14;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:8;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:8;;4123:2:40;1998:73:8::1;::::0;::::1;4105:21:40::0;4162:2;4142:18;;;4135:30;4201:34;4181:18;;;4174:62;-1:-1:-1;;;4252:18:40;;;4245:36;4298:19;;1998:73:8::1;3921:402:40::0;1998:73:8::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:127:40:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:40;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:40:o;426:183::-;486:4;519:18;511:6;508:30;505:56;;;541:18;;:::i;:::-;-1:-1:-1;586:1:40;582:14;598:4;578:25;;426:183::o;614:173::-;682:20;;-1:-1:-1;;;;;731:31:40;;721:42;;711:70;;777:1;774;767:12;711:70;614:173;;;:::o;792:662::-;846:5;899:3;892:4;884:6;880:17;876:27;866:55;;917:1;914;907:12;866:55;953:6;940:20;979:4;1003:60;1019:43;1059:2;1019:43;:::i;:::-;1003:60;:::i;:::-;1097:15;;;1183:1;1179:10;;;;1167:23;;1163:32;;;1128:12;;;;1207:15;;;1204:35;;;1235:1;1232;1225:12;1204:35;1271:2;1263:6;1259:15;1283:142;1299:6;1294:3;1291:15;1283:142;;;1365:17;;1353:30;;1403:12;;;;1316;;1283:142;;;-1:-1:-1;1443:5:40;792:662;-1:-1:-1;;;;;;792:662:40:o;1459:1146::-;1577:6;1585;1638:2;1626:9;1617:7;1613:23;1609:32;1606:52;;;1654:1;1651;1644:12;1606:52;1694:9;1681:23;1723:18;1764:2;1756:6;1753:14;1750:34;;;1780:1;1777;1770:12;1750:34;1818:6;1807:9;1803:22;1793:32;;1863:7;1856:4;1852:2;1848:13;1844:27;1834:55;;1885:1;1882;1875:12;1834:55;1921:2;1908:16;1943:4;1967:60;1983:43;2023:2;1983:43;:::i;1967:60::-;2061:15;;;2143:1;2139:10;;;;2131:19;;2127:28;;;2092:12;;;;2167:19;;;2164:39;;;2199:1;2196;2189:12;2164:39;2223:11;;;;2243:148;2259:6;2254:3;2251:15;2243:148;;;2325:23;2344:3;2325:23;:::i;:::-;2313:36;;2276:12;;;;2369;;;;2243:148;;;2410:5;-1:-1:-1;;2453:18:40;;2440:32;;-1:-1:-1;;2484:16:40;;;2481:36;;;2513:1;2510;2503:12;2481:36;;2536:63;2591:7;2580:8;2569:9;2565:24;2536:63;:::i;:::-;2526:73;;;1459:1146;;;;;:::o;2610:186::-;2669:6;2722:2;2710:9;2701:7;2697:23;2693:32;2690:52;;;2738:1;2735;2728:12;2690:52;2761:29;2780:9;2761:29;:::i;:::-;2751:39;2610:186;-1:-1:-1;;;2610:186:40:o;3191:356::-;3393:2;3375:21;;;3412:18;;;3405:30;3471:34;3466:2;3451:18;;3444:62;3538:2;3523:18;;3191:356::o;3552:127::-;3613:10;3608:3;3604:20;3601:1;3594:31;3644:4;3641:1;3634:15;3668:4;3665:1;3658:15;3684:232;3723:3;-1:-1:-1;;3744:17:40;;3741:140;;;3803:10;3798:3;3794:20;3791:1;3784:31;3838:4;3835:1;3828:15;3866:4;3863:1;3856:15;3741:140;-1:-1:-1;3908:1:40;3897:13;;3684:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    150,
    664
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C10E90C EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x38266B22 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0xE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x477 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6F PUSH2 0x1A4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA4 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19E JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x143 JUMPI PUSH2 0x143 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x161 JUMPI PUSH2 0x161 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x197 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x129 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH2 0x1D8 PUSH1 0x0 PUSH2 0x275 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x269 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x272 DUP2 PUSH2 0x275 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x304 JUMPI PUSH2 0x304 PUSH2 0x2C5 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x326 JUMPI PUSH2 0x326 PUSH2 0x2C5 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x372 PUSH2 0x36D DUP4 PUSH2 0x30C JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3AC JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x395 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x406 PUSH2 0x36D DUP4 PUSH2 0x30C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x44A JUMPI PUSH2 0x43B DUP7 PUSH2 0x330 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x42A JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D DUP6 DUP3 DUP7 ADD PUSH2 0x34C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x492 DUP3 PUSH2 0x330 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x506 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xB5 0xA7 REVERT EXTCODESIZE JUMPI 0xCB 0xA5 0xE6 SWAP12 STATICCALL 0xB9 SELFBALANCE 0xAA BYTE 0xBB SLOAD DUP11 CALLVALUE PUSH24 0xBED06B7AED203069EE5FFC1164736F6C634300080C003300 ",
  "pcMap": {
    "0": {
      "offset": [
        150,
        664
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "5": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "6": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "7": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "8": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "12": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "REVERT",
      "path": "37"
    },
    "16": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "17": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "POP",
      "path": "37"
    },
    "18": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "21": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "LT",
      "path": "37"
    },
    "22": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "26": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "CALLDATALOAD",
      "path": "37"
    },
    "29": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "SHR",
      "path": "37"
    },
    "32": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "33": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x2C10E90C"
    },
    "38": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "EQ",
      "path": "37"
    },
    "39": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "43": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "44": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x38266B22"
    },
    "49": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "EQ",
      "path": "37"
    },
    "50": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "54": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "55": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x715018A6"
    },
    "60": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "EQ",
      "path": "37"
    },
    "61": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xAD"
    },
    "64": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "65": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "66": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0x8DA5CB5B"
    },
    "71": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "EQ",
      "path": "37"
    },
    "72": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB5"
    },
    "75": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "76": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "77": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH4",
      "path": "37",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "EQ",
      "path": "37"
    },
    "83": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD0"
    },
    "86": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "87": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "88": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "DUP1",
      "path": "37"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        150,
        664
      ],
      "op": "REVERT",
      "path": "37"
    },
    "92": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "93": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6F"
    },
    "96": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6A"
    },
    "99": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "100": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "102": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3B7"
    },
    "105": {
      "fn": "OffChainPriceOracle.update",
      "jump": "i",
      "offset": [
        259,
        537
      ],
      "op": "JUMP",
      "path": "37"
    },
    "106": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "107": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xE3"
    },
    "110": {
      "fn": "OffChainPriceOracle.update",
      "jump": "i",
      "offset": [
        259,
        537
      ],
      "op": "JUMP",
      "path": "37"
    },
    "111": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "112": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "STOP",
      "path": "37"
    },
    "113": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "114": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x9A"
    },
    "117": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7F"
    },
    "120": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "121": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "123": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x477"
    },
    "126": {
      "fn": "OffChainPriceOracle.getData",
      "jump": "i",
      "offset": [
        543,
        661
      ],
      "op": "JUMP",
      "path": "37"
    },
    "127": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "134": {
      "op": "SHL"
    },
    "135": {
      "op": "SUB"
    },
    "136": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "AND",
      "path": "37",
      "statement": 0
    },
    "137": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        606,
        613
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "139": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "140": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "DUP2",
      "path": "37"
    },
    "141": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "142": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        647
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "144": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "146": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "147": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "149": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "150": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "151": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "152": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        632,
        654
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "153": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "JUMP",
      "path": "37"
    },
    "154": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "155": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "157": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "158": {
      "op": "SWAP1"
    },
    "159": {
      "op": "DUP2"
    },
    "160": {
      "op": "MSTORE"
    },
    "161": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "163": {
      "op": "ADD"
    },
    "164": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "165": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "167": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "168": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "DUP1",
      "path": "37"
    },
    "169": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "170": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "SUB",
      "path": "37"
    },
    "171": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "172": {
      "fn": "OffChainPriceOracle.getData",
      "offset": [
        543,
        661
      ],
      "op": "RETURN",
      "path": "37"
    },
    "173": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6F"
    },
    "177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1A4"
    },
    "180": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "8"
    },
    "181": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "182": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "184": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8",
      "statement": 1
    },
    "185": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "187": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "194": {
      "op": "SHL"
    },
    "195": {
      "op": "SUB"
    },
    "196": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "197": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "198": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "199": {
      "op": "DUP2"
    },
    "200": {
      "op": "MSTORE"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "203": {
      "op": "ADD"
    },
    "204": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA4"
    },
    "207": {
      "op": "JUMP"
    },
    "208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "209": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6F"
    },
    "212": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xDE"
    },
    "215": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "218": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x477"
    },
    "221": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "8"
    },
    "222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "223": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1DA"
    },
    "226": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "8"
    },
    "227": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "228": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "230": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "op": "SUB"
    },
    "239": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "240": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 2
    },
    "241": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "8"
    },
    "242": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x116"
    },
    "245": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "246": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "248": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "249": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "253": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "255": {
      "op": "SHL"
    },
    "256": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "8"
    },
    "257": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "260": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "8"
    },
    "261": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D"
    },
    "264": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "265": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x499"
    },
    "268": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "269": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "270": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "272": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "273": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "8"
    },
    "274": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "8"
    },
    "276": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "278": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "279": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        376,
        381
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 3
    },
    "280": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        376,
        388
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "281": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        360,
        365
      ],
      "op": "DUP3",
      "path": "37"
    },
    "282": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        360,
        372
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "283": {
      "branch": 11,
      "fn": "OffChainPriceOracle.update",
      "offset": [
        360,
        388
      ],
      "op": "EQ",
      "path": "37"
    },
    "284": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        352,
        389
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x124"
    },
    "287": {
      "branch": 11,
      "fn": "OffChainPriceOracle.update",
      "offset": [
        352,
        389
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "288": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        352,
        389
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "290": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        352,
        389
      ],
      "op": "DUP1",
      "path": "37"
    },
    "291": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        352,
        389
      ],
      "op": "REVERT",
      "path": "37"
    },
    "292": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        352,
        389
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "293": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        413,
        425
      ],
      "op": "DUP2",
      "path": "37"
    },
    "294": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        413,
        425
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "295": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        399,
        410
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "297": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "298": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        460,
        463
      ],
      "op": "DUP2",
      "path": "37"
    },
    "299": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        456,
        457
      ],
      "op": "DUP2",
      "path": "37"
    },
    "300": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        456,
        463
      ],
      "op": "LT",
      "path": "37"
    },
    "301": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "302": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x19E"
    },
    "305": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "306": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        517
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 4
    },
    "307": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        518,
        519
      ],
      "op": "DUP2",
      "path": "37"
    },
    "308": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "DUP2",
      "path": "37"
    },
    "309": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "310": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "DUP2",
      "path": "37"
    },
    "311": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "LT",
      "path": "37"
    },
    "312": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x143"
    },
    "315": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "316": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x143"
    },
    "319": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4CE"
    },
    "322": {
      "fn": "OffChainPriceOracle.update",
      "jump": "i",
      "offset": [
        512,
        520
      ],
      "op": "JUMP",
      "path": "37"
    },
    "323": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "324": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "326": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "MUL",
      "path": "37"
    },
    "327": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "329": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "ADD",
      "path": "37"
    },
    "330": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "ADD",
      "path": "37"
    },
    "331": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        512,
        520
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "332": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        499
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "334": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "336": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        505
      ],
      "op": "DUP7",
      "path": "37"
    },
    "337": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        506,
        507
      ],
      "op": "DUP5",
      "path": "37"
    },
    "338": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "DUP2",
      "path": "37"
    },
    "339": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "340": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "DUP2",
      "path": "37"
    },
    "341": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "LT",
      "path": "37"
    },
    "342": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x161"
    },
    "345": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "346": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x161"
    },
    "349": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4CE"
    },
    "352": {
      "fn": "OffChainPriceOracle.update",
      "jump": "i",
      "offset": [
        500,
        508
      ],
      "op": "JUMP",
      "path": "37"
    },
    "353": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "354": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "356": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "MUL",
      "path": "37"
    },
    "357": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "359": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "ADD",
      "path": "37"
    },
    "360": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "ADD",
      "path": "37"
    },
    "361": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        500,
        508
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "368": {
      "op": "SHL"
    },
    "369": {
      "op": "SUB"
    },
    "370": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "AND",
      "path": "37"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "377": {
      "op": "SHL"
    },
    "378": {
      "op": "SUB"
    },
    "379": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "AND",
      "path": "37"
    },
    "380": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "DUP2",
      "path": "37"
    },
    "381": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "382": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "384": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "ADD",
      "path": "37"
    },
    "385": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "386": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "DUP2",
      "path": "37"
    },
    "387": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "388": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "390": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "ADD",
      "path": "37"
    },
    "391": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "393": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        509
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "394": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        520
      ],
      "op": "DUP2",
      "path": "37"
    },
    "395": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        520
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "396": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        520
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "397": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        484,
        520
      ],
      "op": "POP",
      "path": "37"
    },
    "398": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        465,
        468
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 5
    },
    "399": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        465,
        468
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x197"
    },
    "402": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        465,
        468
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "403": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        465,
        468
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x4E4"
    },
    "406": {
      "fn": "OffChainPriceOracle.update",
      "jump": "i",
      "offset": [
        465,
        468
      ],
      "op": "JUMP",
      "path": "37"
    },
    "407": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        465,
        468
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "408": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        465,
        468
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "409": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        465,
        468
      ],
      "op": "POP",
      "path": "37"
    },
    "410": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x129"
    },
    "413": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "JUMP",
      "path": "37"
    },
    "414": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "415": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        436,
        531
      ],
      "op": "POP",
      "path": "37"
    },
    "416": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        342,
        537
      ],
      "op": "POP",
      "path": "37"
    },
    "417": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "POP",
      "path": "37"
    },
    "418": {
      "fn": "OffChainPriceOracle.update",
      "offset": [
        259,
        537
      ],
      "op": "POP",
      "path": "37"
    },
    "419": {
      "fn": "OffChainPriceOracle.update",
      "jump": "o",
      "offset": [
        259,
        537
      ],
      "op": "JUMP",
      "path": "37"
    },
    "420": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "421": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "423": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "430": {
      "op": "SHL"
    },
    "431": {
      "op": "SUB"
    },
    "432": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "433": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "434": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "8"
    },
    "435": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1CE"
    },
    "438": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "439": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "441": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "442": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "446": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "448": {
      "op": "SHL"
    },
    "449": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "8"
    },
    "450": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "451": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "453": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "8"
    },
    "454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D"
    },
    "457": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "458": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x499"
    },
    "461": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "462": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "463": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 6,
      "value": "0x1D8"
    },
    "466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "468": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x275"
    },
    "471": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "8"
    },
    "472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "473": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "8"
    },
    "474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "475": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "477": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "484": {
      "op": "SHL"
    },
    "485": {
      "op": "SUB"
    },
    "486": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "487": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "488": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "8"
    },
    "489": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x204"
    },
    "492": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "493": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "495": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "502": {
      "op": "SHL"
    },
    "503": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "8"
    },
    "504": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "505": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "507": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "8"
    },
    "508": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D"
    },
    "511": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "512": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x499"
    },
    "515": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "516": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "523": {
      "op": "SHL"
    },
    "524": {
      "op": "SUB"
    },
    "525": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 7
    },
    "526": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "8"
    },
    "527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x269"
    },
    "530": {
      "branch": 12,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "534": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "538": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "540": {
      "op": "SHL"
    },
    "541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "8"
    },
    "548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "8"
    },
    "549": {
      "op": "MSTORE"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "554": {
      "op": "DUP3"
    },
    "555": {
      "op": "ADD"
    },
    "556": {
      "op": "MSTORE"
    },
    "557": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "592": {
      "op": "DUP3"
    },
    "593": {
      "op": "ADD"
    },
    "594": {
      "op": "MSTORE"
    },
    "595": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "607": {
      "op": "DUP3"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "612": {
      "op": "ADD"
    },
    "613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D"
    },
    "616": {
      "op": "JUMP"
    },
    "617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 8,
      "value": "0x272"
    },
    "621": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "8"
    },
    "622": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x275"
    },
    "625": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "8"
    },
    "626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "627": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "8"
    },
    "628": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "8"
    },
    "629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "630": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "8"
    },
    "633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "640": {
      "op": "SHL"
    },
    "641": {
      "op": "SUB"
    },
    "642": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 9
    },
    "643": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "8"
    },
    "644": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "8"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "651": {
      "op": "SHL"
    },
    "652": {
      "op": "SUB"
    },
    "653": {
      "op": "NOT"
    },
    "654": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "8"
    },
    "655": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "8"
    },
    "656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "8"
    },
    "657": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "8"
    },
    "658": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "8"
    },
    "659": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "660": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x40"
    },
    "662": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "663": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "664": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "665": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "8"
    },
    "667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "8"
    },
    "669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "670": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "703": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "704": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "705": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "8"
    },
    "706": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "8"
    },
    "707": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "8"
    },
    "708": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "8"
    },
    "709": {
      "op": "JUMPDEST"
    },
    "710": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "720": {
      "op": "MSTORE"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "725": {
      "op": "MSTORE"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "730": {
      "op": "REVERT"
    },
    "731": {
      "op": "JUMPDEST"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "734": {
      "op": "MLOAD"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "737": {
      "op": "DUP3"
    },
    "738": {
      "op": "ADD"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "741": {
      "op": "NOT"
    },
    "742": {
      "op": "AND"
    },
    "743": {
      "op": "DUP2"
    },
    "744": {
      "op": "ADD"
    },
    "745": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "754": {
      "op": "DUP2"
    },
    "755": {
      "op": "GT"
    },
    "756": {
      "op": "DUP3"
    },
    "757": {
      "op": "DUP3"
    },
    "758": {
      "op": "LT"
    },
    "759": {
      "op": "OR"
    },
    "760": {
      "op": "ISZERO"
    },
    "761": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "764": {
      "op": "JUMPI"
    },
    "765": {
      "op": "PUSH2",
      "value": "0x304"
    },
    "768": {
      "op": "PUSH2",
      "value": "0x2C5"
    },
    "771": {
      "jump": "i",
      "op": "JUMP"
    },
    "772": {
      "op": "JUMPDEST"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "SWAP2"
    },
    "777": {
      "op": "SWAP1"
    },
    "778": {
      "op": "POP"
    },
    "779": {
      "jump": "o",
      "op": "JUMP"
    },
    "780": {
      "op": "JUMPDEST"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "783": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "792": {
      "op": "DUP3"
    },
    "793": {
      "op": "GT"
    },
    "794": {
      "op": "ISZERO"
    },
    "795": {
      "op": "PUSH2",
      "value": "0x326"
    },
    "798": {
      "op": "JUMPI"
    },
    "799": {
      "op": "PUSH2",
      "value": "0x326"
    },
    "802": {
      "op": "PUSH2",
      "value": "0x2C5"
    },
    "805": {
      "jump": "i",
      "op": "JUMP"
    },
    "806": {
      "op": "JUMPDEST"
    },
    "807": {
      "op": "POP"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "op": "SWAP1"
    },
    "815": {
      "jump": "o",
      "op": "JUMP"
    },
    "816": {
      "op": "JUMPDEST"
    },
    "817": {
      "op": "DUP1"
    },
    "818": {
      "op": "CALLDATALOAD"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "825": {
      "op": "SHL"
    },
    "826": {
      "op": "SUB"
    },
    "827": {
      "op": "DUP2"
    },
    "828": {
      "op": "AND"
    },
    "829": {
      "op": "DUP2"
    },
    "830": {
      "op": "EQ"
    },
    "831": {
      "op": "PUSH2",
      "value": "0x347"
    },
    "834": {
      "op": "JUMPI"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "837": {
      "op": "DUP1"
    },
    "838": {
      "op": "REVERT"
    },
    "839": {
      "op": "JUMPDEST"
    },
    "840": {
      "op": "SWAP2"
    },
    "841": {
      "op": "SWAP1"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "jump": "o",
      "op": "JUMP"
    },
    "844": {
      "op": "JUMPDEST"
    },
    "845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "847": {
      "op": "DUP3"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "850": {
      "op": "DUP4"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "SLT"
    },
    "853": {
      "op": "PUSH2",
      "value": "0x35D"
    },
    "856": {
      "op": "JUMPI"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "859": {
      "op": "DUP1"
    },
    "860": {
      "op": "REVERT"
    },
    "861": {
      "op": "JUMPDEST"
    },
    "862": {
      "op": "DUP2"
    },
    "863": {
      "op": "CALLDATALOAD"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "866": {
      "op": "PUSH2",
      "value": "0x372"
    },
    "869": {
      "op": "PUSH2",
      "value": "0x36D"
    },
    "872": {
      "op": "DUP4"
    },
    "873": {
      "op": "PUSH2",
      "value": "0x30C"
    },
    "876": {
      "jump": "i",
      "op": "JUMP"
    },
    "877": {
      "op": "JUMPDEST"
    },
    "878": {
      "op": "PUSH2",
      "value": "0x2DB"
    },
    "881": {
      "jump": "i",
      "op": "JUMP"
    },
    "882": {
      "op": "JUMPDEST"
    },
    "883": {
      "op": "DUP3"
    },
    "884": {
      "op": "DUP2"
    },
    "885": {
      "op": "MSTORE"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "888": {
      "op": "SWAP3"
    },
    "889": {
      "op": "SWAP1"
    },
    "890": {
      "op": "SWAP3"
    },
    "891": {
      "op": "SHL"
    },
    "892": {
      "op": "DUP5"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "op": "DUP2"
    },
    "895": {
      "op": "ADD"
    },
    "896": {
      "op": "SWAP2"
    },
    "897": {
      "op": "DUP2"
    },
    "898": {
      "op": "DUP2"
    },
    "899": {
      "op": "ADD"
    },
    "900": {
      "op": "SWAP1"
    },
    "901": {
      "op": "DUP7"
    },
    "902": {
      "op": "DUP5"
    },
    "903": {
      "op": "GT"
    },
    "904": {
      "op": "ISZERO"
    },
    "905": {
      "op": "PUSH2",
      "value": "0x391"
    },
    "908": {
      "op": "JUMPI"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "911": {
      "op": "DUP1"
    },
    "912": {
      "op": "REVERT"
    },
    "913": {
      "op": "JUMPDEST"
    },
    "914": {
      "op": "DUP3"
    },
    "915": {
      "op": "DUP7"
    },
    "916": {
      "op": "ADD"
    },
    "917": {
      "op": "JUMPDEST"
    },
    "918": {
      "op": "DUP5"
    },
    "919": {
      "op": "DUP2"
    },
    "920": {
      "op": "LT"
    },
    "921": {
      "op": "ISZERO"
    },
    "922": {
      "op": "PUSH2",
      "value": "0x3AC"
    },
    "925": {
      "op": "JUMPI"
    },
    "926": {
      "op": "DUP1"
    },
    "927": {
      "op": "CALLDATALOAD"
    },
    "928": {
      "op": "DUP4"
    },
    "929": {
      "op": "MSTORE"
    },
    "930": {
      "op": "SWAP2"
    },
    "931": {
      "op": "DUP4"
    },
    "932": {
      "op": "ADD"
    },
    "933": {
      "op": "SWAP2"
    },
    "934": {
      "op": "DUP4"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "op": "PUSH2",
      "value": "0x395"
    },
    "939": {
      "op": "JUMP"
    },
    "940": {
      "op": "JUMPDEST"
    },
    "941": {
      "op": "POP"
    },
    "942": {
      "op": "SWAP7"
    },
    "943": {
      "op": "SWAP6"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "op": "POP"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "op": "POP"
    },
    "950": {
      "jump": "o",
      "op": "JUMP"
    },
    "951": {
      "op": "JUMPDEST"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "954": {
      "op": "DUP1"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "957": {
      "op": "DUP4"
    },
    "958": {
      "op": "DUP6"
    },
    "959": {
      "op": "SUB"
    },
    "960": {
      "op": "SLT"
    },
    "961": {
      "op": "ISZERO"
    },
    "962": {
      "op": "PUSH2",
      "value": "0x3CA"
    },
    "965": {
      "op": "JUMPI"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "968": {
      "op": "DUP1"
    },
    "969": {
      "op": "REVERT"
    },
    "970": {
      "op": "JUMPDEST"
    },
    "971": {
      "op": "DUP3"
    },
    "972": {
      "op": "CALLDATALOAD"
    },
    "973": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "982": {
      "op": "DUP1"
    },
    "983": {
      "op": "DUP3"
    },
    "984": {
      "op": "GT"
    },
    "985": {
      "op": "ISZERO"
    },
    "986": {
      "op": "PUSH2",
      "value": "0x3E2"
    },
    "989": {
      "op": "JUMPI"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "992": {
      "op": "DUP1"
    },
    "993": {
      "op": "REVERT"
    },
    "994": {
      "op": "JUMPDEST"
    },
    "995": {
      "op": "DUP2"
    },
    "996": {
      "op": "DUP6"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "SWAP2"
    },
    "999": {
      "op": "POP"
    },
    "1000": {
      "op": "DUP6"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1003": {
      "op": "DUP4"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "SLT"
    },
    "1006": {
      "op": "PUSH2",
      "value": "0x3F6"
    },
    "1009": {
      "op": "JUMPI"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1012": {
      "op": "DUP1"
    },
    "1013": {
      "op": "REVERT"
    },
    "1014": {
      "op": "JUMPDEST"
    },
    "1015": {
      "op": "DUP2"
    },
    "1016": {
      "op": "CALLDATALOAD"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1019": {
      "op": "PUSH2",
      "value": "0x406"
    },
    "1022": {
      "op": "PUSH2",
      "value": "0x36D"
    },
    "1025": {
      "op": "DUP4"
    },
    "1026": {
      "op": "PUSH2",
      "value": "0x30C"
    },
    "1029": {
      "jump": "i",
      "op": "JUMP"
    },
    "1030": {
      "op": "JUMPDEST"
    },
    "1031": {
      "op": "DUP3"
    },
    "1032": {
      "op": "DUP2"
    },
    "1033": {
      "op": "MSTORE"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1036": {
      "op": "SWAP3"
    },
    "1037": {
      "op": "SWAP1"
    },
    "1038": {
      "op": "SWAP3"
    },
    "1039": {
      "op": "SHL"
    },
    "1040": {
      "op": "DUP5"
    },
    "1041": {
      "op": "ADD"
    },
    "1042": {
      "op": "DUP2"
    },
    "1043": {
      "op": "ADD"
    },
    "1044": {
      "op": "SWAP2"
    },
    "1045": {
      "op": "DUP2"
    },
    "1046": {
      "op": "DUP2"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "SWAP1"
    },
    "1049": {
      "op": "DUP10"
    },
    "1050": {
      "op": "DUP5"
    },
    "1051": {
      "op": "GT"
    },
    "1052": {
      "op": "ISZERO"
    },
    "1053": {
      "op": "PUSH2",
      "value": "0x425"
    },
    "1056": {
      "op": "JUMPI"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1059": {
      "op": "DUP1"
    },
    "1060": {
      "op": "REVERT"
    },
    "1061": {
      "op": "JUMPDEST"
    },
    "1062": {
      "op": "SWAP5"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "op": "SWAP5"
    },
    "1066": {
      "op": "JUMPDEST"
    },
    "1067": {
      "op": "DUP4"
    },
    "1068": {
      "op": "DUP7"
    },
    "1069": {
      "op": "LT"
    },
    "1070": {
      "op": "ISZERO"
    },
    "1071": {
      "op": "PUSH2",
      "value": "0x44A"
    },
    "1074": {
      "op": "JUMPI"
    },
    "1075": {
      "op": "PUSH2",
      "value": "0x43B"
    },
    "1078": {
      "op": "DUP7"
    },
    "1079": {
      "op": "PUSH2",
      "value": "0x330"
    },
    "1082": {
      "jump": "i",
      "op": "JUMP"
    },
    "1083": {
      "op": "JUMPDEST"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "op": "SWAP5"
    },
    "1087": {
      "op": "DUP3"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "op": "SWAP5"
    },
    "1090": {
      "op": "SWAP1"
    },
    "1091": {
      "op": "DUP3"
    },
    "1092": {
      "op": "ADD"
    },
    "1093": {
      "op": "SWAP1"
    },
    "1094": {
      "op": "PUSH2",
      "value": "0x42A"
    },
    "1097": {
      "op": "JUMP"
    },
    "1098": {
      "op": "JUMPDEST"
    },
    "1099": {
      "op": "SWAP7"
    },
    "1100": {
      "op": "POP"
    },
    "1101": {
      "op": "POP"
    },
    "1102": {
      "op": "DUP7"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "CALLDATALOAD"
    },
    "1105": {
      "op": "SWAP3"
    },
    "1106": {
      "op": "POP"
    },
    "1107": {
      "op": "POP"
    },
    "1108": {
      "op": "DUP1"
    },
    "1109": {
      "op": "DUP3"
    },
    "1110": {
      "op": "GT"
    },
    "1111": {
      "op": "ISZERO"
    },
    "1112": {
      "op": "PUSH2",
      "value": "0x460"
    },
    "1115": {
      "op": "JUMPI"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1118": {
      "op": "DUP1"
    },
    "1119": {
      "op": "REVERT"
    },
    "1120": {
      "op": "JUMPDEST"
    },
    "1121": {
      "op": "POP"
    },
    "1122": {
      "op": "PUSH2",
      "value": "0x46D"
    },
    "1125": {
      "op": "DUP6"
    },
    "1126": {
      "op": "DUP3"
    },
    "1127": {
      "op": "DUP7"
    },
    "1128": {
      "op": "ADD"
    },
    "1129": {
      "op": "PUSH2",
      "value": "0x34C"
    },
    "1132": {
      "jump": "i",
      "op": "JUMP"
    },
    "1133": {
      "op": "JUMPDEST"
    },
    "1134": {
      "op": "SWAP2"
    },
    "1135": {
      "op": "POP"
    },
    "1136": {
      "op": "POP"
    },
    "1137": {
      "op": "SWAP3"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "op": "SWAP3"
    },
    "1140": {
      "op": "SWAP1"
    },
    "1141": {
      "op": "POP"
    },
    "1142": {
      "jump": "o",
      "op": "JUMP"
    },
    "1143": {
      "op": "JUMPDEST"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "DUP5"
    },
    "1150": {
      "op": "SUB"
    },
    "1151": {
      "op": "SLT"
    },
    "1152": {
      "op": "ISZERO"
    },
    "1153": {
      "op": "PUSH2",
      "value": "0x489"
    },
    "1156": {
      "op": "JUMPI"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1159": {
      "op": "DUP1"
    },
    "1160": {
      "op": "REVERT"
    },
    "1161": {
      "op": "JUMPDEST"
    },
    "1162": {
      "op": "PUSH2",
      "value": "0x492"
    },
    "1165": {
      "op": "DUP3"
    },
    "1166": {
      "op": "PUSH2",
      "value": "0x330"
    },
    "1169": {
      "jump": "i",
      "op": "JUMP"
    },
    "1170": {
      "op": "JUMPDEST"
    },
    "1171": {
      "op": "SWAP4"
    },
    "1172": {
      "op": "SWAP3"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "op": "POP"
    },
    "1176": {
      "jump": "o",
      "op": "JUMP"
    },
    "1177": {
      "op": "JUMPDEST"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1180": {
      "op": "DUP1"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "DUP2"
    },
    "1184": {
      "op": "DUP2"
    },
    "1185": {
      "op": "ADD"
    },
    "1186": {
      "op": "MSTORE"
    },
    "1187": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1227": {
      "op": "ADD"
    },
    "1228": {
      "op": "SWAP1"
    },
    "1229": {
      "jump": "o",
      "op": "JUMP"
    },
    "1230": {
      "op": "JUMPDEST"
    },
    "1231": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1238": {
      "op": "SHL"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1241": {
      "op": "MSTORE"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1246": {
      "op": "MSTORE"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1251": {
      "op": "REVERT"
    },
    "1252": {
      "op": "JUMPDEST"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1257": {
      "op": "NOT"
    },
    "1258": {
      "op": "DUP3"
    },
    "1259": {
      "op": "EQ"
    },
    "1260": {
      "op": "ISZERO"
    },
    "1261": {
      "op": "PUSH2",
      "value": "0x506"
    },
    "1264": {
      "op": "JUMPI"
    },
    "1265": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "MSTORE"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1280": {
      "op": "MSTORE"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1285": {
      "op": "REVERT"
    },
    "1286": {
      "op": "JUMPDEST"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1290": {
      "op": "ADD"
    },
    "1291": {
      "op": "SWAP1"
    },
    "1292": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "f6afcbef802767da584d32bea425091ee443459f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport '../interfaces/IPriceFeed.sol';\n\ncontract OffChainPriceOracle is Ownable, IPriceFeed {\n\n    mapping(address => uint256) tokenPriceInUSD;\n\n    function update(address[] memory token, uint256[] memory price) external onlyOwner {\n        require(token.length == price.length);\n        uint256 len = token.length;\n\n        for (uint256 i = 0; i < len; ++i) {\n            tokenPriceInUSD[token[i]] = price[i];\n        }\n    }\n\n    function getData(address token) external view override returns(uint256) {\n        return tokenPriceInUSD[token];\n    }\n\n}",
  "sourceMap": "150:514:37:-:0;;;;;;;;;;;;-1:-1:-1;921:32:8;719:10:14;921:18:8;:32::i;:::-;150:514:37;;2270:187:8;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;150:514:37:-;;;;;;;",
  "sourcePath": "contracts/priceOracle/OffChainPriceOracle.sol",
  "type": "contract"
}