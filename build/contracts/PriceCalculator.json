{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "oracleAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "onChainFetcher",
              "type": "address"
            }
          ],
          "internalType": "struct PriceCalculator.PriceFeed[]",
          "name": "priceFeeds",
          "type": "tuple[]"
        }
      ],
      "name": "addFeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "oracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "onChainFetcher",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "tokenPriceInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/access/OwnableUpgradeable.sol",
    "1": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
    "10": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "11": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "12": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
    "13": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "18": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
    "19": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "25": "contracts/interfaces/IPriceFeed.sol",
    "3": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/utils/ContextUpgradeable.sol",
    "39": "contracts/priceOracle/PriceCalculator.sol"
  },
  "ast": {
    "absolutePath": "contracts/priceOracle/PriceCalculator.sol",
    "exportedSymbols": {
      "Address": [
        6651
      ],
      "AddressUpgradeable": [
        7216
      ],
      "ContextUpgradeable": [
        6356
      ],
      "IERC20": [
        5097
      ],
      "IERC20Metadata": [
        5514
      ],
      "IPriceFeed": [
        699
      ],
      "Initializable": [
        6314
      ],
      "Math": [
        5826
      ],
      "OwnableUpgradeable": [
        4614
      ],
      "PriceCalculator": [
        4490
      ],
      "SafeERC20": [
        5738
      ],
      "SafeMath": [
        5489
      ]
    },
    "id": 4491,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4261,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:39"
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "id": 4262,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 4615,
        "src": "57:75:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 4263,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 6315,
        "src": "133:75:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4264,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 5098,
        "src": "209:56:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4265,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 5739,
        "src": "266:65:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 4266,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 5827,
        "src": "332:53:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4267,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 5490,
        "src": "386:57:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 4268,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 5515,
        "src": "444:75:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IPriceFeed.sol",
        "file": "../interfaces/IPriceFeed.sol",
        "id": 4269,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4491,
        "sourceUnit": 700,
        "src": "521:38:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4270,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6314,
              "src": "623:13:39"
            },
            "id": 4271,
            "nodeType": "InheritanceSpecifier",
            "src": "623:13:39"
          },
          {
            "baseName": {
              "id": 4272,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4614,
              "src": "638:18:39"
            },
            "id": 4273,
            "nodeType": "InheritanceSpecifier",
            "src": "638:18:39"
          }
        ],
        "canonicalName": "PriceCalculator",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4490,
        "linearizedBaseContracts": [
          4490,
          4614,
          6356,
          6314
        ],
        "name": "PriceCalculator",
        "nameLocation": "604:15:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4276,
            "libraryName": {
              "id": 4274,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5489,
              "src": "669:8:39"
            },
            "nodeType": "UsingForDirective",
            "src": "663:27:39",
            "typeName": {
              "id": 4275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "682:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 4280,
            "libraryName": {
              "id": 4277,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5738,
              "src": "701:9:39"
            },
            "nodeType": "UsingForDirective",
            "src": "695:27:39",
            "typeName": {
              "id": 4279,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4278,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5097,
                "src": "715:6:39"
              },
              "referencedDeclaration": 5097,
              "src": "715:6:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5097",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "PriceCalculator.PriceFeed",
            "id": 4285,
            "members": [
              {
                "constant": false,
                "id": 4282,
                "mutability": "mutable",
                "name": "oracleAddress",
                "nameLocation": "763:13:39",
                "nodeType": "VariableDeclaration",
                "scope": 4285,
                "src": "755:21:39",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4281,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "755:7:39",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4284,
                "mutability": "mutable",
                "name": "onChainFetcher",
                "nameLocation": "794:14:39",
                "nodeType": "VariableDeclaration",
                "scope": 4285,
                "src": "786:22:39",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4283,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "786:7:39",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PriceFeed",
            "nameLocation": "735:9:39",
            "nodeType": "StructDefinition",
            "scope": 4490,
            "src": "728:87:39",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9878cbb3",
            "id": 4290,
            "mutability": "mutable",
            "name": "tokenPriceFeed",
            "nameLocation": "858:14:39",
            "nodeType": "VariableDeclaration",
            "scope": 4490,
            "src": "821:51:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceFeed_$4285_storage_$",
              "typeString": "mapping(address => struct PriceCalculator.PriceFeed)"
            },
            "typeName": {
              "id": 4289,
              "keyType": {
                "id": 4286,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "821:29:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceFeed_$4285_storage_$",
                "typeString": "mapping(address => struct PriceCalculator.PriceFeed)"
              },
              "valueType": {
                "id": 4288,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4287,
                  "name": "PriceFeed",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4285,
                  "src": "840:9:39"
                },
                "referencedDeclaration": 4285,
                "src": "840:9:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                  "typeString": "struct PriceCalculator.PriceFeed"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4298,
              "nodeType": "Block",
              "src": "922:33:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4295,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4517,
                      "src": "932:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "932:16:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4297,
                  "nodeType": "ExpressionStatement",
                  "src": "932:16:39"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 4299,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4293,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4292,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6288,
                  "src": "910:11:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "910:11:39"
              }
            ],
            "name": "initialize",
            "nameLocation": "888:10:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:2:39"
            },
            "returnParameters": {
              "id": 4294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:0:39"
            },
            "scope": 4490,
            "src": "879:76:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4343,
              "nodeType": "Block",
              "src": "1054:193:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4312,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4302,
                            "src": "1072:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 4313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1072:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 4314,
                            "name": "priceFeeds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4306,
                            "src": "1089:10:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PriceFeed_$4285_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct PriceCalculator.PriceFeed memory[] memory"
                            }
                          },
                          "id": 4315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1089:17:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1072:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6261645f61726773",
                        "id": 4317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1108:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ee544e1a098bb9c3ffd381c73f4bd22b085c6d09f1e895267685e0c95044b54",
                          "typeString": "literal_string \"bad_args\""
                        },
                        "value": "bad_args"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ee544e1a098bb9c3ffd381c73f4bd22b085c6d09f1e895267685e0c95044b54",
                          "typeString": "literal_string \"bad_args\""
                        }
                      ],
                      "id": 4311,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1064:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1064:55:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4319,
                  "nodeType": "ExpressionStatement",
                  "src": "1064:55:39"
                },
                {
                  "body": {
                    "id": 4341,
                    "nodeType": "Block",
                    "src": "1175:66:39",
                    "statements": [
                      {
                        "expression": {
                          "id": 4339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4331,
                              "name": "tokenPriceFeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4290,
                              "src": "1189:14:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceFeed_$4285_storage_$",
                                "typeString": "mapping(address => struct PriceCalculator.PriceFeed storage ref)"
                              }
                            },
                            "id": 4335,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 4332,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4302,
                                "src": "1204:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 4334,
                              "indexExpression": {
                                "id": 4333,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4321,
                                "src": "1211:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1204:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1189:25:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceFeed_$4285_storage",
                              "typeString": "struct PriceCalculator.PriceFeed storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 4336,
                              "name": "priceFeeds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4306,
                              "src": "1217:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_PriceFeed_$4285_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct PriceCalculator.PriceFeed memory[] memory"
                              }
                            },
                            "id": 4338,
                            "indexExpression": {
                              "id": 4337,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4321,
                              "src": "1228:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1217:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PriceFeed_$4285_memory_ptr",
                              "typeString": "struct PriceCalculator.PriceFeed memory"
                            }
                          },
                          "src": "1189:41:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PriceFeed_$4285_storage",
                            "typeString": "struct PriceCalculator.PriceFeed storage ref"
                          }
                        },
                        "id": 4340,
                        "nodeType": "ExpressionStatement",
                        "src": "1189:41:39"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4324,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4321,
                      "src": "1150:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 4325,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4302,
                        "src": "1154:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 4326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1154:13:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1150:17:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4342,
                  "initializationExpression": {
                    "assignments": [
                      4321
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 4321,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1143:1:39",
                        "nodeType": "VariableDeclaration",
                        "scope": 4342,
                        "src": "1135:9:39",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4320,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1135:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 4323,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 4322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1147:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1135:13:39"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 4329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1169:3:39",
                      "subExpression": {
                        "id": 4328,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4321,
                        "src": "1169:1:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4330,
                    "nodeType": "ExpressionStatement",
                    "src": "1169:3:39"
                  },
                  "nodeType": "ForStatement",
                  "src": "1130:111:39"
                }
              ]
            },
            "functionSelector": "19c5e81a",
            "id": 4344,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4309,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4308,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4551,
                  "src": "1044:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1044:9:39"
              }
            ],
            "name": "addFeeds",
            "nameLocation": "970:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4302,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "996:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "979:23:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4300,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "979:7:39",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4301,
                    "nodeType": "ArrayTypeName",
                    "src": "979:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4306,
                  "mutability": "mutable",
                  "name": "priceFeeds",
                  "nameLocation": "1023:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "1004:29:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PriceFeed_$4285_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PriceCalculator.PriceFeed[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4304,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4303,
                        "name": "PriceFeed",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 4285,
                        "src": "1004:9:39"
                      },
                      "referencedDeclaration": 4285,
                      "src": "1004:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                        "typeString": "struct PriceCalculator.PriceFeed"
                      }
                    },
                    "id": 4305,
                    "nodeType": "ArrayTypeName",
                    "src": "1004:11:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PriceFeed_$4285_storage_$dyn_storage_ptr",
                      "typeString": "struct PriceCalculator.PriceFeed[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:56:39"
            },
            "returnParameters": {
              "id": 4310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1054:0:39"
            },
            "scope": 4490,
            "src": "961:286:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4380,
              "nodeType": "Block",
              "src": "1377:171:39",
              "statements": [
                {
                  "assignments": [
                    4356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4356,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1395:5:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 4380,
                      "src": "1387:13:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4355,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1387:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4363,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4361,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4348,
                        "src": "1437:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4358,
                            "name": "oracleAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4346,
                            "src": "1414:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4357,
                          "name": "IPriceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "1403:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPriceFeed_$699_$",
                            "typeString": "type(contract IPriceFeed)"
                          }
                        },
                        "id": 4359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1403:25:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPriceFeed_$699",
                          "typeString": "contract IPriceFeed"
                        }
                      },
                      "id": 4360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 698,
                      "src": "1403:33:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:47:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1387:63:39"
                },
                {
                  "expression": {
                    "id": 4378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4364,
                      "name": "valueInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4353,
                      "src": "1460:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 4370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1495:2:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4372,
                                    "name": "tokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4348,
                                    "src": "1516:12:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4371,
                                  "name": "IERC20Metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5514,
                                  "src": "1501:14:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$5514_$",
                                    "typeString": "type(contract IERC20Metadata)"
                                  }
                                },
                                "id": 4373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1501:28:39",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$5514",
                                  "typeString": "contract IERC20Metadata"
                                }
                              },
                              "id": 4374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "decimals",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5513,
                              "src": "1501:37:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                "typeString": "function () view external returns (uint8)"
                              }
                            },
                            "id": 4375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1501:39:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1495:45:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 4367,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4350,
                              "src": "1483:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4365,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4356,
                              "src": "1473:5:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5383,
                            "src": "1473:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1473:17:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5398,
                        "src": "1473:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 4377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1473:68:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1460:81:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4379,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:81:39"
                }
              ]
            },
            "id": 4381,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "oracleValueOf",
            "nameLocation": "1262:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4346,
                  "mutability": "mutable",
                  "name": "oracleAddress",
                  "nameLocation": "1284:13:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4381,
                  "src": "1276:21:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4345,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4348,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1307:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4381,
                  "src": "1299:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4350,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1326:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4381,
                  "src": "1321:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4349,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1321:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1275:58:39"
            },
            "returnParameters": {
              "id": 4354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4353,
                  "mutability": "mutable",
                  "name": "valueInUSD",
                  "nameLocation": "1365:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4381,
                  "src": "1357:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:20:39"
            },
            "scope": 4490,
            "src": "1253:295:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4488,
              "nodeType": "Block",
              "src": "1652:755:39",
              "statements": [
                {
                  "assignments": [
                    4392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4392,
                      "mutability": "mutable",
                      "name": "feed",
                      "nameLocation": "1680:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 4488,
                      "src": "1662:22:39",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                        "typeString": "struct PriceCalculator.PriceFeed"
                      },
                      "typeName": {
                        "id": 4391,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4390,
                          "name": "PriceFeed",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4285,
                          "src": "1662:9:39"
                        },
                        "referencedDeclaration": 4285,
                        "src": "1662:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                          "typeString": "struct PriceCalculator.PriceFeed"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4396,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4393,
                      "name": "tokenPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4290,
                      "src": "1687:14:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_PriceFeed_$4285_storage_$",
                        "typeString": "mapping(address => struct PriceCalculator.PriceFeed storage ref)"
                      }
                    },
                    "id": 4395,
                    "indexExpression": {
                      "id": 4394,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4383,
                      "src": "1702:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1687:28:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PriceFeed_$4285_storage",
                      "typeString": "struct PriceCalculator.PriceFeed storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1662:53:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4398,
                              "name": "feed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4392,
                              "src": "1734:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                                "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                              }
                            },
                            "id": 4399,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4282,
                            "src": "1734:18:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1764:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1756:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4400,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1756:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1756:10:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1734:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4405,
                              "name": "feed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4392,
                              "src": "1770:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                                "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                              }
                            },
                            "id": 4406,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onChainFetcher",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4284,
                            "src": "1770:19:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1801:1:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1793:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4407,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1793:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1793:10:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1770:33:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1734:69:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f5f70726963655f66656564",
                        "id": 4413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1805:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7035981e17a4d258abd7dab3ec1c8366425169f04d8268d5d036b7c04ff400b7",
                          "typeString": "literal_string \"no_price_feed\""
                        },
                        "value": "no_price_feed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7035981e17a4d258abd7dab3ec1c8366425169f04d8268d5d036b7c04ff400b7",
                          "typeString": "literal_string \"no_price_feed\""
                        }
                      ],
                      "id": 4397,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1726:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1726:95:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4415,
                  "nodeType": "ExpressionStatement",
                  "src": "1726:95:39"
                },
                {
                  "assignments": [
                    4417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4417,
                      "mutability": "mutable",
                      "name": "pairPrice",
                      "nameLocation": "1839:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 4488,
                      "src": "1831:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1831:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4419,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 4418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1851:1:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1831:21:39"
                },
                {
                  "assignments": [
                    4421
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4421,
                      "mutability": "mutable",
                      "name": "oraclePrice",
                      "nameLocation": "1870:11:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 4488,
                      "src": "1862:19:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1862:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4423,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 4422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1884:1:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1862:23:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4424,
                        "name": "feed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "1900:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                          "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                        }
                      },
                      "id": 4425,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onChainFetcher",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4284,
                      "src": "1900:19:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1931:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1923:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4426,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1923:7:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1923:10:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1900:33:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4441,
                  "nodeType": "IfStatement",
                  "src": "1896:132:39",
                  "trueBody": {
                    "id": 4440,
                    "nodeType": "Block",
                    "src": "1935:93:39",
                    "statements": [
                      {
                        "expression": {
                          "id": 4438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4431,
                            "name": "pairPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4417,
                            "src": "1949:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4433,
                                  "name": "feed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4392,
                                  "src": "1975:4:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                                    "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                                  }
                                },
                                "id": 4434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "onChainFetcher",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4284,
                                "src": "1975:19:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4435,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4383,
                                "src": "1996:12:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4436,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4385,
                                "src": "2010:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4432,
                              "name": "oracleValueOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4381,
                              "src": "1961:13:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 4437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1961:56:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1949:68:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4439,
                        "nodeType": "ExpressionStatement",
                        "src": "1949:68:39"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4442,
                        "name": "feed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "2042:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                          "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                        }
                      },
                      "id": 4443,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oracleAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4282,
                      "src": "2042:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2072:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2064:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4444,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2064:7:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2064:10:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2042:32:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4459,
                  "nodeType": "IfStatement",
                  "src": "2038:132:39",
                  "trueBody": {
                    "id": 4458,
                    "nodeType": "Block",
                    "src": "2076:94:39",
                    "statements": [
                      {
                        "expression": {
                          "id": 4456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4449,
                            "name": "oraclePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4421,
                            "src": "2090:11:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 4451,
                                  "name": "feed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4392,
                                  "src": "2118:4:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                                    "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                                  }
                                },
                                "id": 4452,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "oracleAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4282,
                                "src": "2118:18:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4453,
                                "name": "tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4383,
                                "src": "2138:12:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 4454,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4385,
                                "src": "2152:6:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4450,
                              "name": "oracleValueOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4381,
                              "src": "2104:13:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 4455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2104:55:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2090:69:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4457,
                        "nodeType": "ExpressionStatement",
                        "src": "2090:69:39"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4460,
                        "name": "feed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "2184:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                          "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                        }
                      },
                      "id": 4461,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onChainFetcher",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4284,
                      "src": "2184:19:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2215:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2207:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2207:7:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2207:10:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2184:33:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4470,
                  "nodeType": "IfStatement",
                  "src": "2180:82:39",
                  "trueBody": {
                    "id": 4469,
                    "nodeType": "Block",
                    "src": "2219:43:39",
                    "statements": [
                      {
                        "expression": {
                          "id": 4467,
                          "name": "oraclePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4421,
                          "src": "2240:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4389,
                        "id": 4468,
                        "nodeType": "Return",
                        "src": "2233:18:39"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4471,
                        "name": "feed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4392,
                        "src": "2276:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PriceFeed_$4285_storage_ptr",
                          "typeString": "struct PriceCalculator.PriceFeed storage pointer"
                        }
                      },
                      "id": 4472,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "oracleAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4282,
                      "src": "2276:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2306:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2298:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2298:7:39",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2298:10:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2276:32:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4481,
                  "nodeType": "IfStatement",
                  "src": "2272:79:39",
                  "trueBody": {
                    "id": 4480,
                    "nodeType": "Block",
                    "src": "2310:41:39",
                    "statements": [
                      {
                        "expression": {
                          "id": 4478,
                          "name": "pairPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4417,
                          "src": "2331:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4389,
                        "id": 4479,
                        "nodeType": "Return",
                        "src": "2324:16:39"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4484,
                        "name": "oraclePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4421,
                        "src": "2377:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4485,
                        "name": "pairPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4417,
                        "src": "2390:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4482,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5826,
                        "src": "2368:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$5826_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 4483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5777,
                      "src": "2368:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2368:32:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4389,
                  "id": 4487,
                  "nodeType": "Return",
                  "src": "2361:39:39"
                }
              ]
            },
            "functionSelector": "0a68667e",
            "id": 4489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenPriceInUSD",
            "nameLocation": "1563:15:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4383,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1587:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4489,
                  "src": "1579:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4385,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1606:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4489,
                  "src": "1601:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4384,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1578:35:39"
            },
            "returnParameters": {
              "id": 4389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4388,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1645:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4489,
                  "src": "1637:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1637:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1636:15:39"
            },
            "scope": 4490,
            "src": "1554:853:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 4491,
        "src": "595:1815:39",
        "usedErrors": []
      }
    ],
    "src": "32:2380:39"
  },
  "bytecode": "608060405234801561001057600080fd5b50610ba8806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638129fc1c1161005b5780638129fc1c146100c55780638da5cb5b146100cd5780639878cbb3146100e8578063f2fde38b1461013c57600080fd5b80630a68667e1461008257806319c5e81a146100a8578063715018a6146100bd575b600080fd5b610095610090366004610705565b61014f565b6040519081526020015b60405180910390f35b6100bb6100b6366004610860565b610271565b005b6100bb61037f565b6100bb6103b5565b6033546040516001600160a01b03909116815260200161009f565b61011c6100f6366004610920565b606560205260009081526040902080546001909101546001600160a01b03918216911682565b604080516001600160a01b0393841681529290911660208301520161009f565b6100bb61014a366004610920565b610476565b6001600160a01b03808316600090815260656020526040812080549192909116151580610188575060018101546001600160a01b031615155b6101c95760405162461bcd60e51b815260206004820152600d60248201526c1b9bd7dc1c9a58d957d9995959609a1b60448201526064015b60405180910390fd5b600181015460009081906001600160a01b0316156101fd5760018301546101fa906001600160a01b0316878761050e565b91505b82546001600160a01b031615610226578254610223906001600160a01b0316878761050e565b90505b60018301546001600160a01b031661024257925061026b915050565b82546001600160a01b031661025b5750915061026b9050565b6102658183610608565b93505050505b92915050565b6033546001600160a01b0316331461029b5760405162461bcd60e51b81526004016101c09061093b565b80518251146102d75760405162461bcd60e51b81526020600482015260086024820152676261645f6172677360c01b60448201526064016101c0565b60005b825181101561037a578181815181106102f5576102f5610970565b60200260200101516065600085848151811061031357610313610970565b6020908102919091018101516001600160a01b039081168352828201939093526040909101600020835181546001600160a01b03199081169185169190911782559390910151600190910180549093169116179055806103728161099c565b9150506102da565b505050565b6033546001600160a01b031633146103a95760405162461bcd60e51b81526004016101c09061093b565b6103b36000610620565b565b600054610100900460ff166103d05760005460ff16156103d4565b303b155b6104375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff16158015610459576000805461ffff19166101011790555b610461610672565b8015610473576000805461ff00191690555b50565b6033546001600160a01b031633146104a05760405162461bcd60e51b81526004016101c09061093b565b6001600160a01b0381166105055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c0565b61047381610620565b604051631c13359160e11b81526001600160a01b03838116600483015260009182918616906338266b2290602401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906109b7565b90506105ff846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e491906109d0565b6105ef90600a610ad7565b6105f983866106a1565b906106ad565b95945050505050565b60008183106106175781610619565b825b9392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166106995760405162461bcd60e51b81526004016101c090610ae6565b6103b36106b9565b60006106198284610b31565b60006106198284610b50565b600054610100900460ff166106e05760405162461bcd60e51b81526004016101c090610ae6565b6103b333610620565b80356001600160a01b038116811461070057600080fd5b919050565b6000806040838503121561071857600080fd5b610721836106e9565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107685761076861072f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156107975761079761072f565b604052919050565b600067ffffffffffffffff8211156107b9576107b961072f565b5060051b60200190565b600082601f8301126107d457600080fd5b813560206107e96107e48361079f565b61076e565b82815260069290921b8401810191818101908684111561080857600080fd5b8286015b8481101561085557604081890312156108255760008081fd5b61082d610745565b610836826106e9565b81526108438583016106e9565b8186015283529183019160400161080c565b509695505050505050565b6000806040838503121561087357600080fd5b823567ffffffffffffffff8082111561088b57600080fd5b818501915085601f83011261089f57600080fd5b813560206108af6107e48361079f565b82815260059290921b840181019181810190898411156108ce57600080fd5b948201945b838610156108f3576108e4866106e9565b825294820194908201906108d3565b9650508601359250508082111561090957600080fd5b50610916858286016107c3565b9150509250929050565b60006020828403121561093257600080fd5b610619826106e9565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156109b0576109b0610986565b5060010190565b6000602082840312156109c957600080fd5b5051919050565b6000602082840312156109e257600080fd5b815160ff8116811461061957600080fd5b600181815b80851115610a2e578160001904821115610a1457610a14610986565b80851615610a2157918102915b93841c93908002906109f8565b509250929050565b600082610a455750600161026b565b81610a525750600061026b565b8160018114610a685760028114610a7257610a8e565b600191505061026b565b60ff841115610a8357610a83610986565b50506001821b61026b565b5060208310610133831016604e8410600b8410161715610ab1575081810a61026b565b610abb83836109f3565b8060001904821115610acf57610acf610986565b029392505050565b600061061960ff841683610a36565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000816000190483118215151615610b4b57610b4b610986565b500290565b600082610b6d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d8dbd17b4ec1a1f107bac8f318401ce11792a26f2e5b73d46bb90c696312021264736f6c634300080c0033",
  "bytecodeSha1": "6b4d6bb29e3bafa2f968cbe41773ba0f65939165",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "PriceCalculator",
  "coverageMap": {
    "branches": {
      "0": {
        "OwnableUpgradeable.transferOwnership": {
          "33": [
            2246,
            2268,
            true
          ]
        }
      },
      "1": {
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "31": [
            2952,
            2965,
            true
          ]
        },
        "PriceCalculator.initialize": {
          "29": [
            2369,
            2382,
            true
          ],
          "30": [
            2369,
            2417,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "18": {
        "Math.min": {
          "32": [
            545,
            550,
            true
          ]
        }
      },
      "19": {},
      "25": {},
      "3": {},
      "39": {
        "PriceCalculator.addFeeds": {
          "28": [
            1072,
            1106,
            true
          ]
        },
        "PriceCalculator.tokenPriceInUSD": {
          "24": [
            1734,
            1766,
            true
          ],
          "25": [
            1770,
            1803,
            true
          ],
          "26": [
            1900,
            1933,
            false
          ],
          "27": [
            2042,
            2074,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "OwnableUpgradeable.__Ownable_init": {
          "20": [
            1050,
            1076
          ]
        },
        "OwnableUpgradeable.__Ownable_init_unchained": {
          "23": [
            1161,
            1193
          ]
        },
        "OwnableUpgradeable._transferOwnership": {
          "18": [
            2618,
            2635
          ],
          "19": [
            2645,
            2690
          ]
        },
        "OwnableUpgradeable.owner": {
          "0": [
            1341,
            1354
          ]
        },
        "OwnableUpgradeable.renounceOwnership": {
          "11": [
            1972,
            2002
          ]
        },
        "OwnableUpgradeable.transferOwnership": {
          "14": [
            2238,
            2311
          ],
          "15": [
            2321,
            2349
          ]
        }
      },
      "1": {
        "Initializable._isConstructor": {
          "12": [
            3101,
            3153
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "18": {
        "Math.min": {
          "17": [
            538,
            558
          ]
        }
      },
      "19": {
        "SafeMath.div": {
          "22": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "21": [
            3528,
            3540
          ]
        }
      },
      "25": {},
      "3": {
        "ContextUpgradeable._msgSender": {
          "7": [
            922,
            939
          ]
        }
      },
      "39": {
        "PriceCalculator.addFeeds": {
          "8": [
            1064,
            1119
          ],
          "9": [
            1189,
            1230
          ],
          "10": [
            1169,
            1172
          ]
        },
        "PriceCalculator.initialize": {
          "13": [
            932,
            948
          ]
        },
        "PriceCalculator.oracleValueOf": {
          "16": [
            1460,
            1541
          ]
        },
        "PriceCalculator.tokenPriceInUSD": {
          "1": [
            1726,
            1821
          ],
          "2": [
            1949,
            2017
          ],
          "3": [
            2090,
            2159
          ],
          "4": [
            2233,
            2251
          ],
          "5": [
            2324,
            2340
          ],
          "6": [
            2361,
            2400
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/ContextUpgradeable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "IPriceFeed",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/Initializable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Math",
    "OpenZeppelin/openzeppelin-contracts-upgradeable@4.5.0/OwnableUpgradeable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80638129fc1c1161005b5780638129fc1c146100c55780638da5cb5b146100cd5780639878cbb3146100e8578063f2fde38b1461013c57600080fd5b80630a68667e1461008257806319c5e81a146100a8578063715018a6146100bd575b600080fd5b610095610090366004610705565b61014f565b6040519081526020015b60405180910390f35b6100bb6100b6366004610860565b610271565b005b6100bb61037f565b6100bb6103b5565b6033546040516001600160a01b03909116815260200161009f565b61011c6100f6366004610920565b606560205260009081526040902080546001909101546001600160a01b03918216911682565b604080516001600160a01b0393841681529290911660208301520161009f565b6100bb61014a366004610920565b610476565b6001600160a01b03808316600090815260656020526040812080549192909116151580610188575060018101546001600160a01b031615155b6101c95760405162461bcd60e51b815260206004820152600d60248201526c1b9bd7dc1c9a58d957d9995959609a1b60448201526064015b60405180910390fd5b600181015460009081906001600160a01b0316156101fd5760018301546101fa906001600160a01b0316878761050e565b91505b82546001600160a01b031615610226578254610223906001600160a01b0316878761050e565b90505b60018301546001600160a01b031661024257925061026b915050565b82546001600160a01b031661025b5750915061026b9050565b6102658183610608565b93505050505b92915050565b6033546001600160a01b0316331461029b5760405162461bcd60e51b81526004016101c09061093b565b80518251146102d75760405162461bcd60e51b81526020600482015260086024820152676261645f6172677360c01b60448201526064016101c0565b60005b825181101561037a578181815181106102f5576102f5610970565b60200260200101516065600085848151811061031357610313610970565b6020908102919091018101516001600160a01b039081168352828201939093526040909101600020835181546001600160a01b03199081169185169190911782559390910151600190910180549093169116179055806103728161099c565b9150506102da565b505050565b6033546001600160a01b031633146103a95760405162461bcd60e51b81526004016101c09061093b565b6103b36000610620565b565b600054610100900460ff166103d05760005460ff16156103d4565b303b155b6104375760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101c0565b600054610100900460ff16158015610459576000805461ffff19166101011790555b610461610672565b8015610473576000805461ff00191690555b50565b6033546001600160a01b031633146104a05760405162461bcd60e51b81526004016101c09061093b565b6001600160a01b0381166105055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101c0565b61047381610620565b604051631c13359160e11b81526001600160a01b03838116600483015260009182918616906338266b2290602401602060405180830381865afa158015610559573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057d91906109b7565b90506105ff846001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e491906109d0565b6105ef90600a610ad7565b6105f983866106a1565b906106ad565b95945050505050565b60008183106106175781610619565b825b9392505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166106995760405162461bcd60e51b81526004016101c090610ae6565b6103b36106b9565b60006106198284610b31565b60006106198284610b50565b600054610100900460ff166106e05760405162461bcd60e51b81526004016101c090610ae6565b6103b333610620565b80356001600160a01b038116811461070057600080fd5b919050565b6000806040838503121561071857600080fd5b610721836106e9565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156107685761076861072f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156107975761079761072f565b604052919050565b600067ffffffffffffffff8211156107b9576107b961072f565b5060051b60200190565b600082601f8301126107d457600080fd5b813560206107e96107e48361079f565b61076e565b82815260069290921b8401810191818101908684111561080857600080fd5b8286015b8481101561085557604081890312156108255760008081fd5b61082d610745565b610836826106e9565b81526108438583016106e9565b8186015283529183019160400161080c565b509695505050505050565b6000806040838503121561087357600080fd5b823567ffffffffffffffff8082111561088b57600080fd5b818501915085601f83011261089f57600080fd5b813560206108af6107e48361079f565b82815260059290921b840181019181810190898411156108ce57600080fd5b948201945b838610156108f3576108e4866106e9565b825294820194908201906108d3565b9650508601359250508082111561090957600080fd5b50610916858286016107c3565b9150509250929050565b60006020828403121561093257600080fd5b610619826106e9565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156109b0576109b0610986565b5060010190565b6000602082840312156109c957600080fd5b5051919050565b6000602082840312156109e257600080fd5b815160ff8116811461061957600080fd5b600181815b80851115610a2e578160001904821115610a1457610a14610986565b80851615610a2157918102915b93841c93908002906109f8565b509250929050565b600082610a455750600161026b565b81610a525750600061026b565b8160018114610a685760028114610a7257610a8e565b600191505061026b565b60ff841115610a8357610a83610986565b50506001821b61026b565b5060208310610133831016604e8410600b8410161715610ab1575081810a61026b565b610abb83836109f3565b8060001904821115610acf57610acf610986565b029392505050565b600061061960ff841683610a36565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000816000190483118215151615610b4b57610b4b610986565b500290565b600082610b6d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220d8dbd17b4ec1a1f107bac8f318401ce11792a26f2e5b73d46bb90c696312021264736f6c634300080c0033",
  "deployedSourceMap": "595:1815:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1554:853;;;;;;:::i;:::-;;:::i;:::-;;;597:25:40;;;585:2;570:18;1554:853:39;;;;;;;;961:286;;;;;;:::i;:::-;;:::i;:::-;;1908:101:0;;;:::i;879:76:39:-;;;:::i;1276:85:0:-;1348:6;;1276:85;;-1:-1:-1;;;;;1348:6:0;;;3789:51:40;;3777:2;3762:18;1276:85:0;3643:203:40;821:51:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;821:51:39;;;;;;;;;;;-1:-1:-1;;;;;4272:15:40;;;4254:34;;4324:15;;;;4319:2;4304:18;;4297:43;4189:18;821:51:39;4042:304:40;2158:198:0;;;;;;:::i;:::-;;:::i;1554:853:39:-;-1:-1:-1;;;;;1687:28:39;;;1637:13;1687:28;;;:14;:28;;;;;1734:18;;1637:13;;1687:28;;1734:18;:32;;;:69;;-1:-1:-1;1770:19:39;;;;-1:-1:-1;;;;;1770:19:39;:33;;1734:69;1726:95;;;;-1:-1:-1;;;1726:95:39;;4553:2:40;1726:95:39;;;4535:21:40;4592:2;4572:18;;;4565:30;-1:-1:-1;;;4611:18:40;;;4604:43;4664:18;;1726:95:39;;;;;;;;;1900:19;;;;1831:17;;;;-1:-1:-1;;;;;1900:19:39;:33;1896:132;;1975:19;;;;1961:56;;-1:-1:-1;;;;;1975:19:39;1996:12;2010:6;1961:13;:56::i;:::-;1949:68;;1896:132;2042:18;;-1:-1:-1;;;;;2042:18:39;:32;2038:132;;2118:18;;2104:55;;-1:-1:-1;;;;;2118:18:39;2138:12;2152:6;2104:13;:55::i;:::-;2090:69;;2038:132;2184:19;;;;-1:-1:-1;;;;;2184:19:39;2180:82;;2240:11;-1:-1:-1;2233:18:39;;-1:-1:-1;;2233:18:39;2180:82;2276:18;;-1:-1:-1;;;;;2276:18:39;2272:79;;-1:-1:-1;2331:9:39;-1:-1:-1;2324:16:39;;-1:-1:-1;2324:16:39;2272:79;2368:32;2377:11;2390:9;2368:8;:32::i;:::-;2361:39;;;;;1554:853;;;;;:::o;961:286::-;1348:6:0;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1089:10:39::1;:17;1072:6;:13;:34;1064:55;;;::::0;-1:-1:-1;;;1064:55:39;;5256:2:40;1064:55:39::1;::::0;::::1;5238:21:40::0;5295:1;5275:18;;;5268:29;-1:-1:-1;;;5313:18:40;;;5306:38;5361:18;;1064:55:39::1;5054:331:40::0;1064:55:39::1;1135:9;1130:111;1154:6;:13;1150:1;:17;1130:111;;;1217:10;1228:1;1217:13;;;;;;;;:::i;:::-;;;;;;;1189:14;:25;1204:6;1211:1;1204:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;1189:25:39;;::::1;::::0;;;;::::1;::::0;;;;;;;;-1:-1:-1;1189:25:39;:41;;;;-1:-1:-1;;;;;;1189:41:39;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;1189:41:39;;::::1;::::0;;;;::::1;::::0;::::1;;::::0;;1169:3;::::1;::::0;::::1;:::i;:::-;;;;1130:111;;;;961:286:::0;;:::o;1908:101:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;1972:30:::1;1999:1;1972:18;:30::i;:::-;1908:101::o:0;879:76:39:-;2369:13:1;;;;;;;:48;;2405:12;;;;2404:13;2369:48;;;3147:4;1476:19:2;:23;2385:16:1;2361:107;;;;-1:-1:-1;;;2361:107:1;;5996:2:40;2361:107:1;;;5978:21:40;6035:2;6015:18;;;6008:30;6074:34;6054:18;;;6047:62;-1:-1:-1;;;6125:18:40;;;6118:44;6179:19;;2361:107:1;5794:410:40;2361:107:1;2479:19;2502:13;;;;;;2501:14;2525:98;;;;2559:13;:20;;-1:-1:-1;;2593:19:1;;;;;2525:98;932:16:39::1;:14;:16::i;:::-;2649:14:1::0;2645:66;;;2695:5;2679:21;;-1:-1:-1;;2679:21:1;;;2645:66;2080:637;879:76:39:o;2158:198:0:-;1348:6;;-1:-1:-1;;;;;1348:6:0;929:10:3;1488:23:0;1480:68;;;;-1:-1:-1;;;1480:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2246:22:0;::::1;2238:73;;;::::0;-1:-1:-1;;;2238:73:0;;6411:2:40;2238:73:0::1;::::0;::::1;6393:21:40::0;6450:2;6430:18;;;6423:30;6489:34;6469:18;;;6462:62;-1:-1:-1;;;6540:18:40;;;6533:36;6586:19;;2238:73:0::1;6209:402:40::0;2238:73:0::1;2321:28;2340:8;2321:18;:28::i;1253:295:39:-:0;1403:47;;-1:-1:-1;;;1403:47:39;;-1:-1:-1;;;;;3807:32:40;;;1403:47:39;;;3789:51:40;1357:18:39;;;;1403:33;;;;;3762:18:40;;1403:47:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:63;;1473:68;1516:12;-1:-1:-1;;;;;1501:37:39;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1495:45;;:2;:45;:::i;:::-;1473:17;:5;1483:6;1473:9;:17::i;:::-;:21;;:68::i;:::-;1460:81;1253:295;-1:-1:-1;;;;;1253:295:39:o;461:104:18:-;519:7;549:1;545;:5;:13;;557:1;545:13;;;553:1;545:13;538:20;461:104;-1:-1:-1;;;461:104:18:o;2510:187:0:-;2602:6;;;-1:-1:-1;;;;;2618:17:0;;;-1:-1:-1;;;;;;2618:17:0;;;;;;;2650:40;;2602:6;;;2618:17;2602:6;;2650:40;;2583:16;;2650:40;2573:124;2510:187;:::o;988:95::-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1050:26:0::1;:24;:26::i;3451:96:19:-:0;3509:7;3535:5;3539:1;3535;:5;:::i;3836:96::-;3894:7;3920:5;3924:1;3920;:5;:::i;1089:111:0:-;2952:13:1;;;;;;;2944:69;;;;-1:-1:-1;;;2944:69:1;;;;;;;:::i;:::-;1161:32:0::1;929:10:3::0;1161:18:0::1;:32::i;14:173:40:-:0;82:20;;-1:-1:-1;;;;;131:31:40;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:40:o;633:127::-;694:10;689:3;685:20;682:1;675:31;725:4;722:1;715:15;749:4;746:1;739:15;765:257;837:4;831:11;;;869:17;;916:18;901:34;;937:22;;;898:62;895:88;;;963:18;;:::i;:::-;999:4;992:24;765:257;:::o;1027:275::-;1098:2;1092:9;1163:2;1144:13;;-1:-1:-1;;1140:27:40;1128:40;;1198:18;1183:34;;1219:22;;;1180:62;1177:88;;;1245:18;;:::i;:::-;1281:2;1274:22;1027:275;;-1:-1:-1;1027:275:40:o;1307:183::-;1367:4;1400:18;1392:6;1389:30;1386:56;;;1422:18;;:::i;:::-;-1:-1:-1;1467:1:40;1463:14;1479:4;1459:25;;1307:183::o;1495:956::-;1558:5;1611:3;1604:4;1596:6;1592:17;1588:27;1578:55;;1629:1;1626;1619:12;1578:55;1665:6;1652:20;1691:4;1715:60;1731:43;1771:2;1731:43;:::i;:::-;1715:60;:::i;:::-;1809:15;;;1895:1;1891:10;;;;1879:23;;1875:32;;;1840:12;;;;1919:15;;;1916:35;;;1947:1;1944;1937:12;1916:35;1983:2;1975:6;1971:15;1995:427;2011:6;2006:3;2003:15;1995:427;;;2089:4;2083:3;2078;2074:13;2070:24;2067:114;;;2135:1;2164:2;2160;2153:14;2067:114;2207:22;;:::i;:::-;2256:23;2275:3;2256:23;:::i;:::-;2249:5;2242:38;2316:32;2344:2;2339:3;2335:12;2316:32;:::i;:::-;2300:14;;;2293:56;2362:18;;2400:12;;;;2037:4;2028:14;1995:427;;;-1:-1:-1;2440:5:40;1495:956;-1:-1:-1;;;;;;1495:956:40:o;2456:1182::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2718:9;2705:23;2747:18;2788:2;2780:6;2777:14;2774:34;;;2804:1;2801;2794:12;2774:34;2842:6;2831:9;2827:22;2817:32;;2887:7;2880:4;2876:2;2872:13;2868:27;2858:55;;2909:1;2906;2899:12;2858:55;2945:2;2932:16;2967:4;2991:60;3007:43;3047:2;3007:43;:::i;2991:60::-;3085:15;;;3167:1;3163:10;;;;3155:19;;3151:28;;;3116:12;;;;3191:19;;;3188:39;;;3223:1;3220;3213:12;3188:39;3247:11;;;;3267:148;3283:6;3278:3;3275:15;3267:148;;;3349:23;3368:3;3349:23;:::i;:::-;3337:36;;3300:12;;;;3393;;;;3267:148;;;3434:5;-1:-1:-1;;3477:18:40;;3464:32;;-1:-1:-1;;3508:16:40;;;3505:36;;;3537:1;3534;3527:12;3505:36;;3560:72;3624:7;3613:8;3602:9;3598:24;3560:72;:::i;:::-;3550:82;;;2456:1182;;;;;:::o;3851:186::-;3910:6;3963:2;3951:9;3942:7;3938:23;3934:32;3931:52;;;3979:1;3976;3969:12;3931:52;4002:29;4021:9;4002:29;:::i;4693:356::-;4895:2;4877:21;;;4914:18;;;4907:30;4973:34;4968:2;4953:18;;4946:62;5040:2;5025:18;;4693:356::o;5390:127::-;5451:10;5446:3;5442:20;5439:1;5432:31;5482:4;5479:1;5472:15;5506:4;5503:1;5496:15;5522:127;5583:10;5578:3;5574:20;5571:1;5564:31;5614:4;5611:1;5604:15;5638:4;5635:1;5628:15;5654:135;5693:3;-1:-1:-1;;5714:17:40;;5711:43;;;5734:18;;:::i;:::-;-1:-1:-1;5781:1:40;5770:13;;5654:135::o;6616:184::-;6686:6;6739:2;6727:9;6718:7;6714:23;6710:32;6707:52;;;6755:1;6752;6745:12;6707:52;-1:-1:-1;6778:16:40;;6616:184;-1:-1:-1;6616:184:40:o;6805:273::-;6873:6;6926:2;6914:9;6905:7;6901:23;6897:32;6894:52;;;6942:1;6939;6932:12;6894:52;6974:9;6968:16;7024:4;7017:5;7013:16;7006:5;7003:27;6993:55;;7044:1;7041;7034:12;7083:422;7172:1;7215:5;7172:1;7229:270;7250:7;7240:8;7237:21;7229:270;;;7309:4;7305:1;7301:6;7297:17;7291:4;7288:27;7285:53;;;7318:18;;:::i;:::-;7368:7;7358:8;7354:22;7351:55;;;7388:16;;;;7351:55;7467:22;;;;7427:15;;;;7229:270;;;7233:3;7083:422;;;;;:::o;7510:806::-;7559:5;7589:8;7579:80;;-1:-1:-1;7630:1:40;7644:5;;7579:80;7678:4;7668:76;;-1:-1:-1;7715:1:40;7729:5;;7668:76;7760:4;7778:1;7773:59;;;;7846:1;7841:130;;;;7753:218;;7773:59;7803:1;7794:10;;7817:5;;;7841:130;7878:3;7868:8;7865:17;7862:43;;;7885:18;;:::i;:::-;-1:-1:-1;;7941:1:40;7927:16;;7956:5;;7753:218;;8055:2;8045:8;8042:16;8036:3;8030:4;8027:13;8023:36;8017:2;8007:8;8004:16;7999:2;7993:4;7990:12;7986:35;7983:77;7980:159;;;-1:-1:-1;8092:19:40;;;8124:5;;7980:159;8171:34;8196:8;8190:4;8171:34;:::i;:::-;8241:6;8237:1;8233:6;8229:19;8220:7;8217:32;8214:58;;;8252:18;;:::i;:::-;8290:20;;7510:806;-1:-1:-1;;;7510:806:40:o;8321:140::-;8379:5;8408:47;8449:4;8439:8;8435:19;8429:4;8408:47;:::i;8466:407::-;8668:2;8650:21;;;8707:2;8687:18;;;8680:30;8746:34;8741:2;8726:18;;8719:62;-1:-1:-1;;;8812:2:40;8797:18;;8790:41;8863:3;8848:19;;8466:407::o;8878:168::-;8918:7;8984:1;8980;8976:6;8972:14;8969:1;8966:21;8961:1;8954:9;8947:17;8943:45;8940:71;;;8991:18;;:::i;:::-;-1:-1:-1;9031:9:40;;8878:168::o;9051:217::-;9091:1;9117;9107:132;;9161:10;9156:3;9152:20;9149:1;9142:31;9196:4;9193:1;9186:15;9224:4;9221:1;9214:15;9107:132;-1:-1:-1;9253:9:40;;9051:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    595,
    2410
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8129FC1C GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xCD JUMPI DUP1 PUSH4 0x9878CBB3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA68667E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x19C5E81A EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x705 JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBB PUSH2 0xB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x860 JUMP JUMPDEST PUSH2 0x271 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBB PUSH2 0x37F JUMP JUMPDEST PUSH2 0xBB PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0x11C PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x9F JUMP JUMPDEST PUSH2 0xBB PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 AND ISZERO ISZERO DUP1 PUSH2 0x188 JUMPI POP PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1B9BD7DC1C9A58D957D9995959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1FD JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x1FA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 PUSH2 0x50E JUMP JUMPDEST SWAP2 POP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x226 JUMPI DUP3 SLOAD PUSH2 0x223 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x242 JUMPI SWAP3 POP PUSH2 0x26B SWAP2 POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25B JUMPI POP SWAP2 POP PUSH2 0x26B SWAP1 POP JUMP JUMPDEST PUSH2 0x265 DUP2 DUP4 PUSH2 0x608 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0x93B JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6261645F61726773 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x37A JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2F5 JUMPI PUSH2 0x2F5 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x65 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x313 JUMPI PUSH2 0x313 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH1 0x0 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP4 SWAP1 SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE DUP1 PUSH2 0x372 DUP2 PUSH2 0x99C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x0 PUSH2 0x620 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3D0 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3D4 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x437 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x461 PUSH2 0x672 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x473 DUP2 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1C133591 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP7 AND SWAP1 PUSH4 0x38266B22 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x559 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x57D SWAP2 SWAP1 PUSH2 0x9B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x5FF DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0x5EF SWAP1 PUSH1 0xA PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x5F9 DUP4 DUP7 PUSH2 0x6A1 JUMP JUMPDEST SWAP1 PUSH2 0x6AD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x617 JUMPI DUP2 PUSH2 0x619 JUMP JUMPDEST DUP3 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x619 DUP3 DUP5 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x619 DUP3 DUP5 PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0xAE6 JUMP JUMPDEST PUSH2 0x3B3 CALLER PUSH2 0x620 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x718 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x721 DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x797 JUMPI PUSH2 0x797 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x7B9 JUMPI PUSH2 0x7B9 PUSH2 0x72F JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x7E9 PUSH2 0x7E4 DUP4 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x855 JUMPI PUSH1 0x40 DUP2 DUP10 SUB SLT ISZERO PUSH2 0x825 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x82D PUSH2 0x745 JUMP JUMPDEST PUSH2 0x836 DUP3 PUSH2 0x6E9 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x843 DUP6 DUP4 ADD PUSH2 0x6E9 JUMP JUMPDEST DUP2 DUP7 ADD MSTORE DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 PUSH1 0x40 ADD PUSH2 0x80C JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x873 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x88B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x89F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x8AF PUSH2 0x7E4 DUP4 PUSH2 0x79F JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x8F3 JUMPI PUSH2 0x8E4 DUP7 PUSH2 0x6E9 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x8D3 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x916 DUP6 DUP3 DUP7 ADD PUSH2 0x7C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 DUP3 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x9B0 JUMPI PUSH2 0x9B0 PUSH2 0x986 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xA2E JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA14 PUSH2 0x986 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xA21 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x9F8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA45 JUMPI POP PUSH1 0x1 PUSH2 0x26B JUMP JUMPDEST DUP2 PUSH2 0xA52 JUMPI POP PUSH1 0x0 PUSH2 0x26B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA68 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA72 JUMPI PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x26B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA83 JUMPI PUSH2 0xA83 PUSH2 0x986 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x26B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAB1 JUMPI POP DUP2 DUP2 EXP PUSH2 0x26B JUMP JUMPDEST PUSH2 0xABB DUP4 DUP4 PUSH2 0x9F3 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xACF JUMPI PUSH2 0xACF PUSH2 0x986 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x619 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xB4B JUMPI PUSH2 0xB4B PUSH2 0x986 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB6D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xDB 0xD1 PUSH28 0x4EC1A1F107BAC8F318401CE11792A26F2E5B73D46BB90C6963120212 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "6": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "7": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "8": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "12": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "REVERT",
      "path": "39"
    },
    "16": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "17": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "POP",
      "path": "39"
    },
    "18": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "21": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "LT",
      "path": "39"
    },
    "22": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "26": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "29": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "SHR",
      "path": "39"
    },
    "32": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "33": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x8129FC1C"
    },
    "38": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "GT",
      "path": "39"
    },
    "39": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "43": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "44": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x8129FC1C"
    },
    "49": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "EQ",
      "path": "39"
    },
    "50": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xC5"
    },
    "53": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "54": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "55": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "EQ",
      "path": "39"
    },
    "61": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xCD"
    },
    "64": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "65": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "66": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x9878CBB3"
    },
    "71": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "EQ",
      "path": "39"
    },
    "72": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xE8"
    },
    "75": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "76": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "77": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "EQ",
      "path": "39"
    },
    "83": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x13C"
    },
    "86": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "87": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "90": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "REVERT",
      "path": "39"
    },
    "91": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "92": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "93": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xA68667E"
    },
    "98": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "EQ",
      "path": "39"
    },
    "99": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "103": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "104": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x19C5E81A"
    },
    "109": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "EQ",
      "path": "39"
    },
    "110": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA8"
    },
    "113": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "114": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "115": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "EQ",
      "path": "39"
    },
    "121": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xBD"
    },
    "124": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "125": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "126": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "DUP1",
      "path": "39"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        595,
        2410
      ],
      "op": "REVERT",
      "path": "39"
    },
    "130": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "131": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x95"
    },
    "134": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x90"
    },
    "137": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "138": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "140": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x705"
    },
    "143": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "jump": "i",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMP",
      "path": "39"
    },
    "144": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "145": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x14F"
    },
    "148": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "jump": "i",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMP",
      "path": "39"
    },
    "149": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "150": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "152": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "153": {
      "op": "SWAP1"
    },
    "154": {
      "op": "DUP2"
    },
    "155": {
      "op": "MSTORE"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "158": {
      "op": "ADD"
    },
    "159": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "160": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "162": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "163": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "DUP1",
      "path": "39"
    },
    "164": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "165": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "SUB",
      "path": "39"
    },
    "166": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "167": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "RETURN",
      "path": "39"
    },
    "168": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "169": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xBB"
    },
    "172": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB6"
    },
    "175": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "176": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "178": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x860"
    },
    "181": {
      "fn": "PriceCalculator.addFeeds",
      "jump": "i",
      "offset": [
        961,
        1247
      ],
      "op": "JUMP",
      "path": "39"
    },
    "182": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "183": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x271"
    },
    "186": {
      "fn": "PriceCalculator.addFeeds",
      "jump": "i",
      "offset": [
        961,
        1247
      ],
      "op": "JUMP",
      "path": "39"
    },
    "187": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "188": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "STOP",
      "path": "39"
    },
    "189": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1908,
        2009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "190": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1908,
        2009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "193": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1908,
        2009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "196": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        1908,
        2009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "197": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        879,
        955
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "198": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        879,
        955
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xBB"
    },
    "201": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        879,
        955
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3B5"
    },
    "204": {
      "fn": "PriceCalculator.initialize",
      "jump": "i",
      "offset": [
        879,
        955
      ],
      "op": "JUMP",
      "path": "39"
    },
    "205": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1276,
        1361
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x33"
    },
    "208": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "209": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1276,
        1361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "211": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1276,
        1361
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "SUB"
    },
    "220": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "221": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "222": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "AND",
      "path": "0"
    },
    "223": {
      "op": "DUP2"
    },
    "224": {
      "op": "MSTORE"
    },
    "225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "227": {
      "op": "ADD"
    },
    "228": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1276,
        1361
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F"
    },
    "231": {
      "op": "JUMP"
    },
    "232": {
      "offset": [
        821,
        872
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "233": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x11C"
    },
    "236": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF6"
    },
    "239": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "240": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "242": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x920"
    },
    "245": {
      "fn": "OwnableUpgradeable.owner",
      "jump": "i",
      "offset": [
        821,
        872
      ],
      "op": "JUMP",
      "path": "39"
    },
    "246": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "247": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x65"
    },
    "249": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "251": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "252": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "254": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "255": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "DUP2",
      "path": "39"
    },
    "256": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "257": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "259": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "260": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "261": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "DUP1",
      "path": "39"
    },
    "262": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "263": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "265": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "266": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "267": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "ADD",
      "path": "39"
    },
    "268": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "275": {
      "op": "SHL"
    },
    "276": {
      "op": "SUB"
    },
    "277": {
      "offset": [
        821,
        872
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "278": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "DUP3",
      "path": "39"
    },
    "279": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "AND",
      "path": "39"
    },
    "280": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "281": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "AND",
      "path": "39"
    },
    "282": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "DUP3",
      "path": "39"
    },
    "283": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "JUMP",
      "path": "39"
    },
    "284": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "285": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "287": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "DUP1",
      "path": "39"
    },
    "288": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        821,
        872
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "SUB"
    },
    "297": {
      "op": "SWAP4"
    },
    "298": {
      "op": "DUP5"
    },
    "299": {
      "op": "AND"
    },
    "300": {
      "op": "DUP2"
    },
    "301": {
      "op": "MSTORE"
    },
    "302": {
      "op": "SWAP3"
    },
    "303": {
      "op": "SWAP1"
    },
    "304": {
      "op": "SWAP2"
    },
    "305": {
      "op": "AND"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "308": {
      "op": "DUP4"
    },
    "309": {
      "op": "ADD"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "offset": [
        821,
        872
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x9F"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "317": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBB"
    },
    "320": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A"
    },
    "323": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "324": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "326": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x920"
    },
    "329": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2158,
        2356
      ],
      "op": "JUMP",
      "path": "0"
    },
    "330": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "331": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x476"
    },
    "334": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2158,
        2356
      ],
      "op": "JUMP",
      "path": "0"
    },
    "335": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "342": {
      "op": "SHL"
    },
    "343": {
      "op": "SUB"
    },
    "344": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "DUP1",
      "path": "39"
    },
    "345": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "DUP4",
      "path": "39"
    },
    "346": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "AND",
      "path": "39"
    },
    "347": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1637,
        1650
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "349": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "350": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "DUP2",
      "path": "39"
    },
    "351": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "352": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1701
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x65"
    },
    "354": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "356": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "357": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "359": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "DUP2",
      "path": "39"
    },
    "360": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "361": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1752
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 1
    },
    "362": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1752
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "363": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1637,
        1650
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "364": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1637,
        1650
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "365": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "366": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1687,
        1715
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "367": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1752
      ],
      "op": "AND",
      "path": "39"
    },
    "368": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1766
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "369": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1766
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "370": {
      "branch": 24,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1766
      ],
      "op": "DUP1",
      "path": "39"
    },
    "371": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1803
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x188"
    },
    "374": {
      "branch": 24,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1803
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "375": {
      "op": "POP"
    },
    "376": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1770,
        1789
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "378": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1770,
        1789
      ],
      "op": "DUP2",
      "path": "39"
    },
    "379": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1770,
        1789
      ],
      "op": "ADD",
      "path": "39"
    },
    "380": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1770,
        1789
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "387": {
      "op": "SHL"
    },
    "388": {
      "op": "SUB"
    },
    "389": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1770,
        1789
      ],
      "op": "AND",
      "path": "39"
    },
    "390": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1770,
        1803
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "391": {
      "branch": 25,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1770,
        1803
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "392": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1734,
        1803
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "393": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1C9"
    },
    "396": {
      "branch": 25,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "397": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "399": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "400": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "404": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "406": {
      "op": "SHL"
    },
    "407": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "DUP2",
      "path": "39"
    },
    "408": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "411": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "413": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "DUP3",
      "path": "39"
    },
    "414": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "ADD",
      "path": "39"
    },
    "415": {
      "op": "MSTORE"
    },
    "416": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "420": {
      "op": "DUP3"
    },
    "421": {
      "op": "ADD"
    },
    "422": {
      "op": "MSTORE"
    },
    "423": {
      "op": "PUSH13",
      "value": "0x1B9BD7DC1C9A58D957D9995959"
    },
    "437": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "439": {
      "op": "SHL"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "442": {
      "op": "DUP3"
    },
    "443": {
      "op": "ADD"
    },
    "444": {
      "op": "MSTORE"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "447": {
      "op": "ADD"
    },
    "448": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "449": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "451": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "452": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "DUP1",
      "path": "39"
    },
    "453": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "454": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "SUB",
      "path": "39"
    },
    "455": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "456": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "39"
    },
    "457": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1726,
        1821
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "458": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1900,
        1919
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "460": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1900,
        1919
      ],
      "op": "DUP2",
      "path": "39"
    },
    "461": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1900,
        1919
      ],
      "op": "ADD",
      "path": "39"
    },
    "462": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1900,
        1919
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "463": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1831,
        1848
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "465": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1831,
        1848
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "466": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1831,
        1848
      ],
      "op": "DUP2",
      "path": "39"
    },
    "467": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1831,
        1848
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "472": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "474": {
      "op": "SHL"
    },
    "475": {
      "op": "SUB"
    },
    "476": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1900,
        1919
      ],
      "op": "AND",
      "path": "39"
    },
    "477": {
      "branch": 26,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1900,
        1933
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "478": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1896,
        2028
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1FD"
    },
    "481": {
      "branch": 26,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1896,
        2028
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "482": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1975,
        1994
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 2,
      "value": "0x1"
    },
    "484": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1975,
        1994
      ],
      "op": "DUP4",
      "path": "39"
    },
    "485": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1975,
        1994
      ],
      "op": "ADD",
      "path": "39"
    },
    "486": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1975,
        1994
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "487": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1961,
        2017
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1FA"
    },
    "490": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1961,
        2017
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "497": {
      "op": "SHL"
    },
    "498": {
      "op": "SUB"
    },
    "499": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1975,
        1994
      ],
      "op": "AND",
      "path": "39"
    },
    "500": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1996,
        2008
      ],
      "op": "DUP8",
      "path": "39"
    },
    "501": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2010,
        2016
      ],
      "op": "DUP8",
      "path": "39"
    },
    "502": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1961,
        1974
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x50E"
    },
    "505": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "jump": "i",
      "offset": [
        1961,
        2017
      ],
      "op": "JUMP",
      "path": "39"
    },
    "506": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1961,
        2017
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "507": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1949,
        2017
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "508": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1949,
        2017
      ],
      "op": "POP",
      "path": "39"
    },
    "509": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1896,
        2028
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "510": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2042,
        2060
      ],
      "op": "DUP3",
      "path": "39"
    },
    "511": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2042,
        2060
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "518": {
      "op": "SHL"
    },
    "519": {
      "op": "SUB"
    },
    "520": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2042,
        2060
      ],
      "op": "AND",
      "path": "39"
    },
    "521": {
      "branch": 27,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2042,
        2074
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "522": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2038,
        2170
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x226"
    },
    "525": {
      "branch": 27,
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2038,
        2170
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "526": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2118,
        2136
      ],
      "op": "DUP3",
      "path": "39",
      "statement": 3
    },
    "527": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2118,
        2136
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "528": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2104,
        2159
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x223"
    },
    "531": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2104,
        2159
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "538": {
      "op": "SHL"
    },
    "539": {
      "op": "SUB"
    },
    "540": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2118,
        2136
      ],
      "op": "AND",
      "path": "39"
    },
    "541": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2138,
        2150
      ],
      "op": "DUP8",
      "path": "39"
    },
    "542": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2152,
        2158
      ],
      "op": "DUP8",
      "path": "39"
    },
    "543": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2104,
        2117
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x50E"
    },
    "546": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "jump": "i",
      "offset": [
        2104,
        2159
      ],
      "op": "JUMP",
      "path": "39"
    },
    "547": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2104,
        2159
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "548": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2090,
        2159
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "549": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2090,
        2159
      ],
      "op": "POP",
      "path": "39"
    },
    "550": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2038,
        2170
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "551": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2184,
        2203
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "553": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2184,
        2203
      ],
      "op": "DUP4",
      "path": "39"
    },
    "554": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2184,
        2203
      ],
      "op": "ADD",
      "path": "39"
    },
    "555": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2184,
        2203
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "562": {
      "op": "SHL"
    },
    "563": {
      "op": "SUB"
    },
    "564": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2184,
        2203
      ],
      "op": "AND",
      "path": "39"
    },
    "565": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2180,
        2262
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x242"
    },
    "568": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2180,
        2262
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "569": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2240,
        2251
      ],
      "op": "SWAP3",
      "path": "39",
      "statement": 4
    },
    "570": {
      "op": "POP"
    },
    "571": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2233,
        2251
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x26B"
    },
    "574": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2233,
        2251
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "op": "POP"
    },
    "577": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2233,
        2251
      ],
      "op": "JUMP",
      "path": "39"
    },
    "578": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2180,
        2262
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "579": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2276,
        2294
      ],
      "op": "DUP3",
      "path": "39"
    },
    "580": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2276,
        2294
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2276,
        2294
      ],
      "op": "AND",
      "path": "39"
    },
    "590": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2272,
        2351
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x25B"
    },
    "593": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2272,
        2351
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "594": {
      "op": "POP"
    },
    "595": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2331,
        2340
      ],
      "op": "SWAP2",
      "path": "39",
      "statement": 5
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2324,
        2340
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x26B"
    },
    "600": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2324,
        2340
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2324,
        2340
      ],
      "op": "JUMP",
      "path": "39"
    },
    "603": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2272,
        2351
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "604": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2368,
        2400
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 6,
      "value": "0x265"
    },
    "607": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2377,
        2388
      ],
      "op": "DUP2",
      "path": "39"
    },
    "608": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2390,
        2399
      ],
      "op": "DUP4",
      "path": "39"
    },
    "609": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2368,
        2376
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x608"
    },
    "612": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "jump": "i",
      "offset": [
        2368,
        2400
      ],
      "op": "JUMP",
      "path": "39"
    },
    "613": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2368,
        2400
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "614": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2361,
        2400
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "615": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2361,
        2400
      ],
      "op": "POP",
      "path": "39"
    },
    "616": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2361,
        2400
      ],
      "op": "POP",
      "path": "39"
    },
    "617": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2361,
        2400
      ],
      "op": "POP",
      "path": "39"
    },
    "618": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        2361,
        2400
      ],
      "op": "POP",
      "path": "39"
    },
    "619": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "620": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "621": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "622": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "POP",
      "path": "39"
    },
    "623": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "offset": [
        1554,
        2407
      ],
      "op": "POP",
      "path": "39"
    },
    "624": {
      "fn": "PriceCalculator.tokenPriceInUSD",
      "jump": "o",
      "offset": [
        1554,
        2407
      ],
      "op": "JUMP",
      "path": "39"
    },
    "625": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "626": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x33"
    },
    "628": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "635": {
      "op": "SHL"
    },
    "636": {
      "op": "SUB"
    },
    "637": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "AND",
      "path": "0"
    },
    "638": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 7
    },
    "639": {
      "offset": [
        1488,
        1511
      ],
      "op": "EQ",
      "path": "0"
    },
    "640": {
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29B"
    },
    "643": {
      "offset": [
        1480,
        1548
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "644": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "646": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "653": {
      "op": "SHL"
    },
    "654": {
      "offset": [
        1480,
        1548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "655": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "656": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "658": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "ADD",
      "path": "0"
    },
    "659": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "662": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "663": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93B"
    },
    "666": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [
        1480,
        1548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "667": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "668": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1089,
        1099
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 8
    },
    "669": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1089,
        1106
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "670": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1072,
        1078
      ],
      "op": "DUP3",
      "path": "39"
    },
    "671": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1072,
        1085
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "672": {
      "branch": 28,
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1072,
        1106
      ],
      "op": "EQ",
      "path": "39"
    },
    "673": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2D7"
    },
    "676": {
      "branch": 28,
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "677": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "679": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "DUP2",
      "path": "39"
    },
    "688": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "691": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "693": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "DUP3",
      "path": "39"
    },
    "694": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "ADD",
      "path": "39"
    },
    "695": {
      "op": "MSTORE"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "700": {
      "op": "DUP3"
    },
    "701": {
      "op": "ADD"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH8",
      "value": "0x6261645F61726773"
    },
    "712": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "714": {
      "op": "SHL"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "717": {
      "op": "DUP3"
    },
    "718": {
      "op": "ADD"
    },
    "719": {
      "op": "MSTORE"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "722": {
      "op": "ADD"
    },
    "723": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1C0"
    },
    "726": {
      "op": "JUMP"
    },
    "727": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1064,
        1119
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "728": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1135,
        1144
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "730": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "731": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1154,
        1160
      ],
      "op": "DUP3",
      "path": "39"
    },
    "732": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1154,
        1167
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "733": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1150,
        1151
      ],
      "op": "DUP2",
      "path": "39"
    },
    "734": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1150,
        1167
      ],
      "op": "LT",
      "path": "39"
    },
    "735": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "736": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x37A"
    },
    "739": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "740": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1227
      ],
      "op": "DUP2",
      "path": "39",
      "statement": 9
    },
    "741": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1228,
        1229
      ],
      "op": "DUP2",
      "path": "39"
    },
    "742": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "DUP2",
      "path": "39"
    },
    "743": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "744": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "DUP2",
      "path": "39"
    },
    "745": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "LT",
      "path": "39"
    },
    "746": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2F5"
    },
    "749": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "750": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2F5"
    },
    "753": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x970"
    },
    "756": {
      "fn": "PriceCalculator.addFeeds",
      "jump": "i",
      "offset": [
        1217,
        1230
      ],
      "op": "JUMP",
      "path": "39"
    },
    "757": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "758": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "760": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "MUL",
      "path": "39"
    },
    "761": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "763": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "ADD",
      "path": "39"
    },
    "764": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "ADD",
      "path": "39"
    },
    "765": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1217,
        1230
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "766": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1203
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x65"
    },
    "768": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "770": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1210
      ],
      "op": "DUP6",
      "path": "39"
    },
    "771": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1211,
        1212
      ],
      "op": "DUP5",
      "path": "39"
    },
    "772": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "DUP2",
      "path": "39"
    },
    "773": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "774": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "DUP2",
      "path": "39"
    },
    "775": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "LT",
      "path": "39"
    },
    "776": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x313"
    },
    "779": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "780": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x313"
    },
    "783": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x970"
    },
    "786": {
      "fn": "PriceCalculator.addFeeds",
      "jump": "i",
      "offset": [
        1204,
        1213
      ],
      "op": "JUMP",
      "path": "39"
    },
    "787": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "788": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "790": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "791": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "DUP2",
      "path": "39"
    },
    "792": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "MUL",
      "path": "39"
    },
    "793": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "794": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "795": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "796": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "ADD",
      "path": "39"
    },
    "797": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "DUP2",
      "path": "39"
    },
    "798": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "ADD",
      "path": "39"
    },
    "799": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1204,
        1213
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "op": "SUB"
    },
    "808": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "809": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP2",
      "path": "39"
    },
    "810": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "AND",
      "path": "39"
    },
    "811": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP4",
      "path": "39"
    },
    "812": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "813": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP3",
      "path": "39"
    },
    "814": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "DUP3",
      "path": "39"
    },
    "815": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "39"
    },
    "816": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "817": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "818": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "819": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "820": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "822": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "823": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "824": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "ADD",
      "path": "39"
    },
    "825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "827": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1214
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "828": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "DUP4",
      "path": "39"
    },
    "829": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "830": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "DUP2",
      "path": "39"
    },
    "831": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "838": {
      "op": "SHL"
    },
    "839": {
      "op": "SUB"
    },
    "840": {
      "op": "NOT"
    },
    "841": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "842": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "DUP2",
      "path": "39"
    },
    "843": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "AND",
      "path": "39"
    },
    "844": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "845": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "DUP6",
      "path": "39"
    },
    "846": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "AND",
      "path": "39"
    },
    "847": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "848": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "849": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "850": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "OR",
      "path": "39"
    },
    "851": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "DUP3",
      "path": "39"
    },
    "852": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "853": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "854": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "855": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "856": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "ADD",
      "path": "39"
    },
    "857": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "861": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "862": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "ADD",
      "path": "39"
    },
    "863": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "DUP1",
      "path": "39"
    },
    "864": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "865": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "866": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "867": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "AND",
      "path": "39"
    },
    "868": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "869": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "AND",
      "path": "39"
    },
    "870": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "OR",
      "path": "39"
    },
    "871": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "872": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1189,
        1230
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "873": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 10
    },
    "874": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x372"
    },
    "877": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "DUP2",
      "path": "39"
    },
    "878": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x99C"
    },
    "881": {
      "fn": "PriceCalculator.addFeeds",
      "jump": "i",
      "offset": [
        1169,
        1172
      ],
      "op": "JUMP",
      "path": "39"
    },
    "882": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "883": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "884": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "POP",
      "path": "39"
    },
    "885": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1169,
        1172
      ],
      "op": "POP",
      "path": "39"
    },
    "886": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2DA"
    },
    "889": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "JUMP",
      "path": "39"
    },
    "890": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "891": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        1130,
        1241
      ],
      "op": "POP",
      "path": "39"
    },
    "892": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "POP",
      "path": "39"
    },
    "893": {
      "fn": "PriceCalculator.addFeeds",
      "offset": [
        961,
        1247
      ],
      "op": "POP",
      "path": "39"
    },
    "894": {
      "fn": "PriceCalculator.addFeeds",
      "jump": "o",
      "offset": [
        961,
        1247
      ],
      "op": "JUMP",
      "path": "39"
    },
    "895": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1908,
        2009
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x33"
    },
    "898": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "905": {
      "op": "SHL"
    },
    "906": {
      "op": "SUB"
    },
    "907": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "AND",
      "path": "0"
    },
    "908": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "3"
    },
    "909": {
      "offset": [
        1488,
        1511
      ],
      "op": "EQ",
      "path": "0"
    },
    "910": {
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A9"
    },
    "913": {
      "offset": [
        1480,
        1548
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "914": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "916": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "917": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "923": {
      "op": "SHL"
    },
    "924": {
      "offset": [
        1480,
        1548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "925": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "926": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "928": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "ADD",
      "path": "0"
    },
    "929": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "932": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "933": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93B"
    },
    "936": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [
        1480,
        1548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "937": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "938": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1972,
        2002
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x3B3"
    },
    "941": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1999,
        2000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "943": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1972,
        1990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "946": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "i",
      "offset": [
        1972,
        2002
      ],
      "op": "JUMP",
      "path": "0"
    },
    "947": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "offset": [
        1972,
        2002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "948": {
      "fn": "OwnableUpgradeable.renounceOwnership",
      "jump": "o",
      "offset": [
        1908,
        2009
      ],
      "op": "JUMP",
      "path": "0"
    },
    "949": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        879,
        955
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "950": {
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "952": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "953": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "956": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "957": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "DIV",
      "path": "1"
    },
    "958": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "960": {
      "branch": 29,
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2382
      ],
      "op": "AND",
      "path": "1"
    },
    "961": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D0"
    },
    "964": {
      "branch": 29,
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "965": {
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "967": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "968": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "970": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2405,
        2417
      ],
      "op": "AND",
      "path": "1"
    },
    "971": {
      "offset": [
        2404,
        2417
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "972": {
      "offset": [
        2369,
        2417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D4"
    },
    "975": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "976": {
      "branch": 30,
      "fn": "PriceCalculator.initialize",
      "offset": [
        2369,
        2417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "977": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3147,
        3151
      ],
      "op": "ADDRESS",
      "path": "1",
      "statement": 12
    },
    "978": {
      "op": "EXTCODESIZE"
    },
    "979": {
      "op": "ISZERO"
    },
    "980": {
      "offset": [
        2385,
        2401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "981": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x437"
    },
    "984": {
      "branch": 30,
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "985": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "987": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "988": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "992": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "994": {
      "op": "SHL"
    },
    "995": {
      "offset": [
        2361,
        2468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "996": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "999": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1001": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1002": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2361,
        2468
      ],
      "op": "ADD",
      "path": "1"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1008": {
      "op": "DUP3"
    },
    "1009": {
      "op": "ADD"
    },
    "1010": {
      "op": "MSTORE"
    },
    "1011": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1046": {
      "op": "DUP3"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1066": {
      "op": "SHL"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1069": {
      "op": "DUP3"
    },
    "1070": {
      "op": "ADD"
    },
    "1071": {
      "op": "MSTORE"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1074": {
      "op": "ADD"
    },
    "1075": {
      "offset": [
        2361,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "1078": {
      "op": "JUMP"
    },
    "1079": {
      "offset": [
        2361,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1080": {
      "offset": [
        2479,
        2498
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1082": {
      "offset": [
        2502,
        2515
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1083": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1086": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1087": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "DIV",
      "path": "1"
    },
    "1088": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1090": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2502,
        2515
      ],
      "op": "AND",
      "path": "1"
    },
    "1091": {
      "offset": [
        2501,
        2515
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1092": {
      "offset": [
        2525,
        2623
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1093": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1094": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x459"
    },
    "1097": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1098": {
      "offset": [
        2559,
        2572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1100": {
      "offset": [
        2559,
        2579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1101": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2559,
        2579
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1102": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "1105": {
      "op": "NOT"
    },
    "1106": {
      "offset": [
        2593,
        2612
      ],
      "op": "AND",
      "path": "1"
    },
    "1107": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x101"
    },
    "1110": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "OR",
      "path": "1"
    },
    "1111": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1112": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2593,
        2612
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1113": {
      "offset": [
        2525,
        2623
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1114": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        932,
        948
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 13,
      "value": "0x461"
    },
    "1117": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        932,
        946
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x672"
    },
    "1120": {
      "fn": "PriceCalculator.initialize",
      "jump": "i",
      "offset": [
        932,
        948
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1121": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        932,
        948
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1122": {
      "offset": [
        2649,
        2663
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1123": {
      "offset": [
        2645,
        2711
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1124": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2645,
        2711
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "1127": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1128": {
      "offset": [
        2695,
        2700
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1130": {
      "offset": [
        2679,
        2700
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1131": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1132": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1135": {
      "op": "NOT"
    },
    "1136": {
      "offset": [
        2679,
        2700
      ],
      "op": "AND",
      "path": "1"
    },
    "1137": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1138": {
      "fn": "PriceCalculator.initialize",
      "offset": [
        2679,
        2700
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1139": {
      "offset": [
        2645,
        2711
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1140": {
      "offset": [
        2080,
        2717
      ],
      "op": "POP",
      "path": "1"
    },
    "1141": {
      "fn": "PriceCalculator.initialize",
      "jump": "o",
      "offset": [
        879,
        955
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1142": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2158,
        2356
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1143": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x33"
    },
    "1145": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "OwnableUpgradeable.owner",
      "offset": [
        1348,
        1354
      ],
      "op": "AND",
      "path": "0"
    },
    "1155": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1156": {
      "offset": [
        1488,
        1511
      ],
      "op": "EQ",
      "path": "0"
    },
    "1157": {
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A0"
    },
    "1160": {
      "offset": [
        1480,
        1548
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1161": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1163": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1164": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1170": {
      "op": "SHL"
    },
    "1171": {
      "offset": [
        1480,
        1548
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1172": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1173": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1175": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "ADD",
      "path": "0"
    },
    "1176": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "1179": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1180": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93B"
    },
    "1183": {
      "fn": "ContextUpgradeable._msgSender",
      "jump": "i",
      "offset": [
        1480,
        1548
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1184": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        1480,
        1548
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "op": "SUB"
    },
    "1193": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2246,
        2268
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "1194": {
      "branch": 33,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2246,
        2268
      ],
      "op": "AND",
      "path": "0"
    },
    "1195": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x505"
    },
    "1198": {
      "branch": 33,
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1199": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1201": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1202": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1208": {
      "op": "SHL"
    },
    "1209": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1210": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1213": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1215": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1216": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "ADD",
      "path": "0"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1222": {
      "op": "DUP3"
    },
    "1223": {
      "op": "ADD"
    },
    "1224": {
      "op": "MSTORE"
    },
    "1225": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "ADD"
    },
    "1262": {
      "op": "MSTORE"
    },
    "1263": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1275": {
      "op": "DUP3"
    },
    "1276": {
      "op": "ADD"
    },
    "1277": {
      "op": "MSTORE"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "1284": {
      "op": "JUMP"
    },
    "1285": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2238,
        2311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1286": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2349
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0x473"
    },
    "1289": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2340,
        2348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1290": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "offset": [
        2321,
        2339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "1293": {
      "fn": "OwnableUpgradeable.transferOwnership",
      "jump": "i",
      "offset": [
        2321,
        2349
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1294": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1253,
        1548
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1295": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1297": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1298": {
      "op": "PUSH4",
      "value": "0x1C133591"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1305": {
      "op": "SHL"
    },
    "1306": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1307": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1314": {
      "op": "SHL"
    },
    "1315": {
      "op": "SUB"
    },
    "1316": {
      "op": "DUP4"
    },
    "1317": {
      "op": "DUP2"
    },
    "1318": {
      "op": "AND"
    },
    "1319": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1321": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1322": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "ADD",
      "path": "39"
    },
    "1323": {
      "op": "MSTORE"
    },
    "1324": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1357,
        1375
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1326": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1357,
        1375
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1327": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1357,
        1375
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1328": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1357,
        1375
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1329": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1436
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1330": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1436
      ],
      "op": "AND",
      "path": "39"
    },
    "1331": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1436
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1332": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1436
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x38266B22"
    },
    "1337": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1436
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1340": {
      "op": "ADD"
    },
    "1341": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "1343": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1345": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1346": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1347": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1348": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "SUB",
      "path": "39"
    },
    "1349": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1350": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1351": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "GAS",
      "path": "39"
    },
    "1352": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "1353": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1354": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1355": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1356": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x559"
    },
    "1359": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1360": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1361": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1363": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1364": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "1365": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1366": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1368": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1369": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1370": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "POP",
      "path": "39"
    },
    "1371": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "POP",
      "path": "39"
    },
    "1372": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "POP",
      "path": "39"
    },
    "1373": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "POP",
      "path": "39"
    },
    "1374": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1376": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1377": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1378": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1380": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "NOT",
      "path": "39"
    },
    "1381": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1383": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1384": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "ADD",
      "path": "39"
    },
    "1385": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "AND",
      "path": "39"
    },
    "1386": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1387": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "ADD",
      "path": "39"
    },
    "1388": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1389": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1391": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1392": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "POP",
      "path": "39"
    },
    "1393": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1394": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "ADD",
      "path": "39"
    },
    "1395": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1396": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x57D"
    },
    "1399": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1400": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1401": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x9B7"
    },
    "1404": {
      "fn": "PriceCalculator.oracleValueOf",
      "jump": "i",
      "offset": [
        1403,
        1450
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1405": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1403,
        1450
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1406": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1387,
        1450
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1407": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1387,
        1450
      ],
      "op": "POP",
      "path": "39"
    },
    "1408": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1541
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 16,
      "value": "0x5FF"
    },
    "1411": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1516,
        1528
      ],
      "op": "DUP5",
      "path": "39"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1418": {
      "op": "SHL"
    },
    "1419": {
      "op": "SUB"
    },
    "1420": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1538
      ],
      "op": "AND",
      "path": "39"
    },
    "1421": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1538
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x313CE567"
    },
    "1426": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1428": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1429": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1430": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFFFFFFFF"
    },
    "1435": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "AND",
      "path": "39"
    },
    "1436": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "1438": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "SHL",
      "path": "39"
    },
    "1439": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1440": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1441": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1443": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "ADD",
      "path": "39"
    },
    "1444": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "1446": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1448": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1449": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1450": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1451": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "SUB",
      "path": "39"
    },
    "1452": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1453": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1454": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "GAS",
      "path": "39"
    },
    "1455": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "STATICCALL",
      "path": "39"
    },
    "1456": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1457": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1458": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1459": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5C0"
    },
    "1462": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1463": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1464": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1466": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1467": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "1468": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1469": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1471": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1472": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1473": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "POP",
      "path": "39"
    },
    "1474": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "POP",
      "path": "39"
    },
    "1475": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "POP",
      "path": "39"
    },
    "1476": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "POP",
      "path": "39"
    },
    "1477": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1479": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1480": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "1481": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1483": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "NOT",
      "path": "39"
    },
    "1484": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "1486": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1487": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "ADD",
      "path": "39"
    },
    "1488": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "AND",
      "path": "39"
    },
    "1489": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1490": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "ADD",
      "path": "39"
    },
    "1491": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1492": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1494": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1495": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "POP",
      "path": "39"
    },
    "1496": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1497": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "ADD",
      "path": "39"
    },
    "1498": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1499": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5E4"
    },
    "1502": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "1503": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1504": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x9D0"
    },
    "1507": {
      "fn": "PriceCalculator.oracleValueOf",
      "jump": "i",
      "offset": [
        1501,
        1540
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1508": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1501,
        1540
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1509": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1495,
        1540
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5EF"
    },
    "1512": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1495,
        1540
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1513": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1495,
        1497
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xA"
    },
    "1515": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1495,
        1540
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xAD7"
    },
    "1518": {
      "fn": "PriceCalculator.oracleValueOf",
      "jump": "i",
      "offset": [
        1495,
        1540
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1519": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1495,
        1540
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1520": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1490
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5F9"
    },
    "1523": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1478
      ],
      "op": "DUP4",
      "path": "39"
    },
    "1524": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1483,
        1489
      ],
      "op": "DUP7",
      "path": "39"
    },
    "1525": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1482
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6A1"
    },
    "1528": {
      "fn": "PriceCalculator.oracleValueOf",
      "jump": "i",
      "offset": [
        1473,
        1490
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1529": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1490
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1530": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1494
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "1531": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1494
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6AD"
    },
    "1534": {
      "fn": "PriceCalculator.oracleValueOf",
      "jump": "i",
      "offset": [
        1473,
        1541
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1535": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1473,
        1541
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1536": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1460,
        1541
      ],
      "op": "SWAP6",
      "path": "39"
    },
    "1537": {
      "fn": "PriceCalculator.oracleValueOf",
      "offset": [
        1253,
        1548
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "1538": {
      "op": "POP"
    },
    "1539": {
      "op": "POP"
    },
    "1540": {
      "op": "POP"
    },
    "1541": {
      "op": "POP"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "fn": "PriceCalculator.oracleValueOf",
      "jump": "o",
      "offset": [
        1253,
        1548
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1544": {
      "fn": "Math.min",
      "offset": [
        461,
        565
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1545": {
      "fn": "Math.min",
      "offset": [
        519,
        526
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "1547": {
      "fn": "Math.min",
      "offset": [
        549,
        550
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 17
    },
    "1548": {
      "fn": "Math.min",
      "offset": [
        545,
        546
      ],
      "op": "DUP4",
      "path": "18"
    },
    "1549": {
      "branch": 32,
      "fn": "Math.min",
      "offset": [
        545,
        550
      ],
      "op": "LT",
      "path": "18"
    },
    "1550": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x617"
    },
    "1553": {
      "branch": 32,
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "1554": {
      "fn": "Math.min",
      "offset": [
        557,
        558
      ],
      "op": "DUP2",
      "path": "18"
    },
    "1555": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x619"
    },
    "1558": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1559": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1560": {
      "fn": "Math.min",
      "offset": [
        553,
        554
      ],
      "op": "DUP3",
      "path": "18"
    },
    "1561": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "1562": {
      "fn": "Math.min",
      "offset": [
        538,
        558
      ],
      "op": "SWAP4",
      "path": "18"
    },
    "1563": {
      "fn": "Math.min",
      "offset": [
        461,
        565
      ],
      "op": "SWAP3",
      "path": "18"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "fn": "Math.min",
      "jump": "o",
      "offset": [
        461,
        565
      ],
      "op": "JUMP",
      "path": "18"
    },
    "1568": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2510,
        2697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1569": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x33"
    },
    "1571": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1572": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "op": "SUB"
    },
    "1581": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 18
    },
    "1582": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1583": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "AND",
      "path": "0"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1590": {
      "op": "SHL"
    },
    "1591": {
      "op": "SUB"
    },
    "1592": {
      "op": "NOT"
    },
    "1593": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1594": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "AND",
      "path": "0"
    },
    "1595": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1596": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "OR",
      "path": "0"
    },
    "1597": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1598": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1599": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1600": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2650,
        2690
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x40"
    },
    "1602": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2650,
        2690
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1603": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1604": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "AND",
      "path": "0"
    },
    "1605": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1606": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2618,
        2635
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1607": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1608": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2602,
        2608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1609": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2650,
        2690
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1642": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2650,
        2690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1643": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2583,
        2599
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1645": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2583,
        2599
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1646": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2650,
        2690
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1647": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2573,
        2697
      ],
      "op": "POP",
      "path": "0"
    },
    "1648": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "offset": [
        2510,
        2697
      ],
      "op": "POP",
      "path": "0"
    },
    "1649": {
      "fn": "OwnableUpgradeable._transferOwnership",
      "jump": "o",
      "offset": [
        2510,
        2697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1650": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        988,
        1083
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1651": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1653": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1654": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1657": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1658": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "1659": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1661": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "1662": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x699"
    },
    "1665": {
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1666": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1668": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1669": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1677": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1678": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1680": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "1681": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "1684": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1685": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE6"
    },
    "1688": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1689": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1690": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1050,
        1076
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x3B3"
    },
    "1693": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "offset": [
        1050,
        1074
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B9"
    },
    "1696": {
      "fn": "OwnableUpgradeable.__Ownable_init",
      "jump": "i",
      "offset": [
        1050,
        1076
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1697": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1698": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1700": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 21,
      "value": "0x619"
    },
    "1703": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1704": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1705": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB31"
    },
    "1708": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1709": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1710": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1712": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 22,
      "value": "0x619"
    },
    "1715": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1716": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1717": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xB50"
    },
    "1720": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1721": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1089,
        1200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1722": {
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1724": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1725": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1728": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1729": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "DIV",
      "path": "1"
    },
    "1730": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1732": {
      "branch": 31,
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2952,
        2965
      ],
      "op": "AND",
      "path": "1"
    },
    "1733": {
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6E0"
    },
    "1736": {
      "branch": 31,
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1737": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1739": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "offset": [
        2944,
        3013
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1748": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1749": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1751": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "ADD",
      "path": "1"
    },
    "1752": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C0"
    },
    "1755": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1756": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAE6"
    },
    "1759": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1760": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        2944,
        3013
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1761": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1161,
        1193
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 23,
      "value": "0x3B3"
    },
    "1764": {
      "fn": "ContextUpgradeable._msgSender",
      "offset": [
        929,
        939
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1765": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "offset": [
        1161,
        1179
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x620"
    },
    "1768": {
      "fn": "OwnableUpgradeable.__Ownable_init_unchained",
      "jump": "i",
      "offset": [
        1161,
        1193
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1769": {
      "op": "JUMPDEST"
    },
    "1770": {
      "op": "DUP1"
    },
    "1771": {
      "op": "CALLDATALOAD"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1778": {
      "op": "SHL"
    },
    "1779": {
      "op": "SUB"
    },
    "1780": {
      "op": "DUP2"
    },
    "1781": {
      "op": "AND"
    },
    "1782": {
      "op": "DUP2"
    },
    "1783": {
      "op": "EQ"
    },
    "1784": {
      "op": "PUSH2",
      "value": "0x700"
    },
    "1787": {
      "op": "JUMPI"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1790": {
      "op": "DUP1"
    },
    "1791": {
      "op": "REVERT"
    },
    "1792": {
      "op": "JUMPDEST"
    },
    "1793": {
      "op": "SWAP2"
    },
    "1794": {
      "op": "SWAP1"
    },
    "1795": {
      "op": "POP"
    },
    "1796": {
      "jump": "o",
      "op": "JUMP"
    },
    "1797": {
      "op": "JUMPDEST"
    },
    "1798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1800": {
      "op": "DUP1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1803": {
      "op": "DUP4"
    },
    "1804": {
      "op": "DUP6"
    },
    "1805": {
      "op": "SUB"
    },
    "1806": {
      "op": "SLT"
    },
    "1807": {
      "op": "ISZERO"
    },
    "1808": {
      "op": "PUSH2",
      "value": "0x718"
    },
    "1811": {
      "op": "JUMPI"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1814": {
      "op": "DUP1"
    },
    "1815": {
      "op": "REVERT"
    },
    "1816": {
      "op": "JUMPDEST"
    },
    "1817": {
      "op": "PUSH2",
      "value": "0x721"
    },
    "1820": {
      "op": "DUP4"
    },
    "1821": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "1824": {
      "jump": "i",
      "op": "JUMP"
    },
    "1825": {
      "op": "JUMPDEST"
    },
    "1826": {
      "op": "SWAP5"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1829": {
      "op": "SWAP4"
    },
    "1830": {
      "op": "SWAP1"
    },
    "1831": {
      "op": "SWAP4"
    },
    "1832": {
      "op": "ADD"
    },
    "1833": {
      "op": "CALLDATALOAD"
    },
    "1834": {
      "op": "SWAP4"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "op": "POP"
    },
    "1838": {
      "jump": "o",
      "op": "JUMP"
    },
    "1839": {
      "op": "JUMPDEST"
    },
    "1840": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1847": {
      "op": "SHL"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1850": {
      "op": "MSTORE"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1860": {
      "op": "REVERT"
    },
    "1861": {
      "op": "JUMPDEST"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1864": {
      "op": "DUP1"
    },
    "1865": {
      "op": "MLOAD"
    },
    "1866": {
      "op": "SWAP1"
    },
    "1867": {
      "op": "DUP2"
    },
    "1868": {
      "op": "ADD"
    },
    "1869": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1878": {
      "op": "DUP2"
    },
    "1879": {
      "op": "GT"
    },
    "1880": {
      "op": "DUP3"
    },
    "1881": {
      "op": "DUP3"
    },
    "1882": {
      "op": "LT"
    },
    "1883": {
      "op": "OR"
    },
    "1884": {
      "op": "ISZERO"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x768"
    },
    "1888": {
      "op": "JUMPI"
    },
    "1889": {
      "op": "PUSH2",
      "value": "0x768"
    },
    "1892": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "1895": {
      "jump": "i",
      "op": "JUMP"
    },
    "1896": {
      "op": "JUMPDEST"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1899": {
      "op": "MSTORE"
    },
    "1900": {
      "op": "SWAP1"
    },
    "1901": {
      "jump": "o",
      "op": "JUMP"
    },
    "1902": {
      "op": "JUMPDEST"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1905": {
      "op": "MLOAD"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1908": {
      "op": "DUP3"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1912": {
      "op": "NOT"
    },
    "1913": {
      "op": "AND"
    },
    "1914": {
      "op": "DUP2"
    },
    "1915": {
      "op": "ADD"
    },
    "1916": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1925": {
      "op": "DUP2"
    },
    "1926": {
      "op": "GT"
    },
    "1927": {
      "op": "DUP3"
    },
    "1928": {
      "op": "DUP3"
    },
    "1929": {
      "op": "LT"
    },
    "1930": {
      "op": "OR"
    },
    "1931": {
      "op": "ISZERO"
    },
    "1932": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1935": {
      "op": "JUMPI"
    },
    "1936": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1939": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "1942": {
      "jump": "i",
      "op": "JUMP"
    },
    "1943": {
      "op": "JUMPDEST"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1946": {
      "op": "MSTORE"
    },
    "1947": {
      "op": "SWAP2"
    },
    "1948": {
      "op": "SWAP1"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "jump": "o",
      "op": "JUMP"
    },
    "1951": {
      "op": "JUMPDEST"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1954": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1963": {
      "op": "DUP3"
    },
    "1964": {
      "op": "GT"
    },
    "1965": {
      "op": "ISZERO"
    },
    "1966": {
      "op": "PUSH2",
      "value": "0x7B9"
    },
    "1969": {
      "op": "JUMPI"
    },
    "1970": {
      "op": "PUSH2",
      "value": "0x7B9"
    },
    "1973": {
      "op": "PUSH2",
      "value": "0x72F"
    },
    "1976": {
      "jump": "i",
      "op": "JUMP"
    },
    "1977": {
      "op": "JUMPDEST"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1981": {
      "op": "SHL"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1984": {
      "op": "ADD"
    },
    "1985": {
      "op": "SWAP1"
    },
    "1986": {
      "jump": "o",
      "op": "JUMP"
    },
    "1987": {
      "op": "JUMPDEST"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1990": {
      "op": "DUP3"
    },
    "1991": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1993": {
      "op": "DUP4"
    },
    "1994": {
      "op": "ADD"
    },
    "1995": {
      "op": "SLT"
    },
    "1996": {
      "op": "PUSH2",
      "value": "0x7D4"
    },
    "1999": {
      "op": "JUMPI"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2002": {
      "op": "DUP1"
    },
    "2003": {
      "op": "REVERT"
    },
    "2004": {
      "op": "JUMPDEST"
    },
    "2005": {
      "op": "DUP2"
    },
    "2006": {
      "op": "CALLDATALOAD"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2009": {
      "op": "PUSH2",
      "value": "0x7E9"
    },
    "2012": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "2015": {
      "op": "DUP4"
    },
    "2016": {
      "op": "PUSH2",
      "value": "0x79F"
    },
    "2019": {
      "jump": "i",
      "op": "JUMP"
    },
    "2020": {
      "op": "JUMPDEST"
    },
    "2021": {
      "op": "PUSH2",
      "value": "0x76E"
    },
    "2024": {
      "jump": "i",
      "op": "JUMP"
    },
    "2025": {
      "op": "JUMPDEST"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "DUP2"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "2031": {
      "op": "SWAP3"
    },
    "2032": {
      "op": "SWAP1"
    },
    "2033": {
      "op": "SWAP3"
    },
    "2034": {
      "op": "SHL"
    },
    "2035": {
      "op": "DUP5"
    },
    "2036": {
      "op": "ADD"
    },
    "2037": {
      "op": "DUP2"
    },
    "2038": {
      "op": "ADD"
    },
    "2039": {
      "op": "SWAP2"
    },
    "2040": {
      "op": "DUP2"
    },
    "2041": {
      "op": "DUP2"
    },
    "2042": {
      "op": "ADD"
    },
    "2043": {
      "op": "SWAP1"
    },
    "2044": {
      "op": "DUP7"
    },
    "2045": {
      "op": "DUP5"
    },
    "2046": {
      "op": "GT"
    },
    "2047": {
      "op": "ISZERO"
    },
    "2048": {
      "op": "PUSH2",
      "value": "0x808"
    },
    "2051": {
      "op": "JUMPI"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2054": {
      "op": "DUP1"
    },
    "2055": {
      "op": "REVERT"
    },
    "2056": {
      "op": "JUMPDEST"
    },
    "2057": {
      "op": "DUP3"
    },
    "2058": {
      "op": "DUP7"
    },
    "2059": {
      "op": "ADD"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "DUP5"
    },
    "2062": {
      "op": "DUP2"
    },
    "2063": {
      "op": "LT"
    },
    "2064": {
      "op": "ISZERO"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x855"
    },
    "2068": {
      "op": "JUMPI"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2071": {
      "op": "DUP2"
    },
    "2072": {
      "op": "DUP10"
    },
    "2073": {
      "op": "SUB"
    },
    "2074": {
      "op": "SLT"
    },
    "2075": {
      "op": "ISZERO"
    },
    "2076": {
      "op": "PUSH2",
      "value": "0x825"
    },
    "2079": {
      "op": "JUMPI"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2082": {
      "op": "DUP1"
    },
    "2083": {
      "op": "DUP2"
    },
    "2084": {
      "op": "REVERT"
    },
    "2085": {
      "op": "JUMPDEST"
    },
    "2086": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2089": {
      "op": "PUSH2",
      "value": "0x745"
    },
    "2092": {
      "jump": "i",
      "op": "JUMP"
    },
    "2093": {
      "op": "JUMPDEST"
    },
    "2094": {
      "op": "PUSH2",
      "value": "0x836"
    },
    "2097": {
      "op": "DUP3"
    },
    "2098": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "2101": {
      "jump": "i",
      "op": "JUMP"
    },
    "2102": {
      "op": "JUMPDEST"
    },
    "2103": {
      "op": "DUP2"
    },
    "2104": {
      "op": "MSTORE"
    },
    "2105": {
      "op": "PUSH2",
      "value": "0x843"
    },
    "2108": {
      "op": "DUP6"
    },
    "2109": {
      "op": "DUP4"
    },
    "2110": {
      "op": "ADD"
    },
    "2111": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "2114": {
      "jump": "i",
      "op": "JUMP"
    },
    "2115": {
      "op": "JUMPDEST"
    },
    "2116": {
      "op": "DUP2"
    },
    "2117": {
      "op": "DUP7"
    },
    "2118": {
      "op": "ADD"
    },
    "2119": {
      "op": "MSTORE"
    },
    "2120": {
      "op": "DUP4"
    },
    "2121": {
      "op": "MSTORE"
    },
    "2122": {
      "op": "SWAP2"
    },
    "2123": {
      "op": "DUP4"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "SWAP2"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2132": {
      "op": "JUMP"
    },
    "2133": {
      "op": "JUMPDEST"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "SWAP7"
    },
    "2136": {
      "op": "SWAP6"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "op": "POP"
    },
    "2141": {
      "op": "POP"
    },
    "2142": {
      "op": "POP"
    },
    "2143": {
      "jump": "o",
      "op": "JUMP"
    },
    "2144": {
      "op": "JUMPDEST"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2147": {
      "op": "DUP1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2150": {
      "op": "DUP4"
    },
    "2151": {
      "op": "DUP6"
    },
    "2152": {
      "op": "SUB"
    },
    "2153": {
      "op": "SLT"
    },
    "2154": {
      "op": "ISZERO"
    },
    "2155": {
      "op": "PUSH2",
      "value": "0x873"
    },
    "2158": {
      "op": "JUMPI"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2161": {
      "op": "DUP1"
    },
    "2162": {
      "op": "REVERT"
    },
    "2163": {
      "op": "JUMPDEST"
    },
    "2164": {
      "op": "DUP3"
    },
    "2165": {
      "op": "CALLDATALOAD"
    },
    "2166": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2175": {
      "op": "DUP1"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "GT"
    },
    "2178": {
      "op": "ISZERO"
    },
    "2179": {
      "op": "PUSH2",
      "value": "0x88B"
    },
    "2182": {
      "op": "JUMPI"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2185": {
      "op": "DUP1"
    },
    "2186": {
      "op": "REVERT"
    },
    "2187": {
      "op": "JUMPDEST"
    },
    "2188": {
      "op": "DUP2"
    },
    "2189": {
      "op": "DUP6"
    },
    "2190": {
      "op": "ADD"
    },
    "2191": {
      "op": "SWAP2"
    },
    "2192": {
      "op": "POP"
    },
    "2193": {
      "op": "DUP6"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2196": {
      "op": "DUP4"
    },
    "2197": {
      "op": "ADD"
    },
    "2198": {
      "op": "SLT"
    },
    "2199": {
      "op": "PUSH2",
      "value": "0x89F"
    },
    "2202": {
      "op": "JUMPI"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2205": {
      "op": "DUP1"
    },
    "2206": {
      "op": "REVERT"
    },
    "2207": {
      "op": "JUMPDEST"
    },
    "2208": {
      "op": "DUP2"
    },
    "2209": {
      "op": "CALLDATALOAD"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2212": {
      "op": "PUSH2",
      "value": "0x8AF"
    },
    "2215": {
      "op": "PUSH2",
      "value": "0x7E4"
    },
    "2218": {
      "op": "DUP4"
    },
    "2219": {
      "op": "PUSH2",
      "value": "0x79F"
    },
    "2222": {
      "jump": "i",
      "op": "JUMP"
    },
    "2223": {
      "op": "JUMPDEST"
    },
    "2224": {
      "op": "DUP3"
    },
    "2225": {
      "op": "DUP2"
    },
    "2226": {
      "op": "MSTORE"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "2229": {
      "op": "SWAP3"
    },
    "2230": {
      "op": "SWAP1"
    },
    "2231": {
      "op": "SWAP3"
    },
    "2232": {
      "op": "SHL"
    },
    "2233": {
      "op": "DUP5"
    },
    "2234": {
      "op": "ADD"
    },
    "2235": {
      "op": "DUP2"
    },
    "2236": {
      "op": "ADD"
    },
    "2237": {
      "op": "SWAP2"
    },
    "2238": {
      "op": "DUP2"
    },
    "2239": {
      "op": "DUP2"
    },
    "2240": {
      "op": "ADD"
    },
    "2241": {
      "op": "SWAP1"
    },
    "2242": {
      "op": "DUP10"
    },
    "2243": {
      "op": "DUP5"
    },
    "2244": {
      "op": "GT"
    },
    "2245": {
      "op": "ISZERO"
    },
    "2246": {
      "op": "PUSH2",
      "value": "0x8CE"
    },
    "2249": {
      "op": "JUMPI"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2252": {
      "op": "DUP1"
    },
    "2253": {
      "op": "REVERT"
    },
    "2254": {
      "op": "JUMPDEST"
    },
    "2255": {
      "op": "SWAP5"
    },
    "2256": {
      "op": "DUP3"
    },
    "2257": {
      "op": "ADD"
    },
    "2258": {
      "op": "SWAP5"
    },
    "2259": {
      "op": "JUMPDEST"
    },
    "2260": {
      "op": "DUP4"
    },
    "2261": {
      "op": "DUP7"
    },
    "2262": {
      "op": "LT"
    },
    "2263": {
      "op": "ISZERO"
    },
    "2264": {
      "op": "PUSH2",
      "value": "0x8F3"
    },
    "2267": {
      "op": "JUMPI"
    },
    "2268": {
      "op": "PUSH2",
      "value": "0x8E4"
    },
    "2271": {
      "op": "DUP7"
    },
    "2272": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "2275": {
      "jump": "i",
      "op": "JUMP"
    },
    "2276": {
      "op": "JUMPDEST"
    },
    "2277": {
      "op": "DUP3"
    },
    "2278": {
      "op": "MSTORE"
    },
    "2279": {
      "op": "SWAP5"
    },
    "2280": {
      "op": "DUP3"
    },
    "2281": {
      "op": "ADD"
    },
    "2282": {
      "op": "SWAP5"
    },
    "2283": {
      "op": "SWAP1"
    },
    "2284": {
      "op": "DUP3"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "SWAP1"
    },
    "2287": {
      "op": "PUSH2",
      "value": "0x8D3"
    },
    "2290": {
      "op": "JUMP"
    },
    "2291": {
      "op": "JUMPDEST"
    },
    "2292": {
      "op": "SWAP7"
    },
    "2293": {
      "op": "POP"
    },
    "2294": {
      "op": "POP"
    },
    "2295": {
      "op": "DUP7"
    },
    "2296": {
      "op": "ADD"
    },
    "2297": {
      "op": "CALLDATALOAD"
    },
    "2298": {
      "op": "SWAP3"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "POP"
    },
    "2301": {
      "op": "DUP1"
    },
    "2302": {
      "op": "DUP3"
    },
    "2303": {
      "op": "GT"
    },
    "2304": {
      "op": "ISZERO"
    },
    "2305": {
      "op": "PUSH2",
      "value": "0x909"
    },
    "2308": {
      "op": "JUMPI"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2311": {
      "op": "DUP1"
    },
    "2312": {
      "op": "REVERT"
    },
    "2313": {
      "op": "JUMPDEST"
    },
    "2314": {
      "op": "POP"
    },
    "2315": {
      "op": "PUSH2",
      "value": "0x916"
    },
    "2318": {
      "op": "DUP6"
    },
    "2319": {
      "op": "DUP3"
    },
    "2320": {
      "op": "DUP7"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "op": "PUSH2",
      "value": "0x7C3"
    },
    "2325": {
      "jump": "i",
      "op": "JUMP"
    },
    "2326": {
      "op": "JUMPDEST"
    },
    "2327": {
      "op": "SWAP2"
    },
    "2328": {
      "op": "POP"
    },
    "2329": {
      "op": "POP"
    },
    "2330": {
      "op": "SWAP3"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "op": "SWAP3"
    },
    "2333": {
      "op": "SWAP1"
    },
    "2334": {
      "op": "POP"
    },
    "2335": {
      "jump": "o",
      "op": "JUMP"
    },
    "2336": {
      "op": "JUMPDEST"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2341": {
      "op": "DUP3"
    },
    "2342": {
      "op": "DUP5"
    },
    "2343": {
      "op": "SUB"
    },
    "2344": {
      "op": "SLT"
    },
    "2345": {
      "op": "ISZERO"
    },
    "2346": {
      "op": "PUSH2",
      "value": "0x932"
    },
    "2349": {
      "op": "JUMPI"
    },
    "2350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2352": {
      "op": "DUP1"
    },
    "2353": {
      "op": "REVERT"
    },
    "2354": {
      "op": "JUMPDEST"
    },
    "2355": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "2358": {
      "op": "DUP3"
    },
    "2359": {
      "op": "PUSH2",
      "value": "0x6E9"
    },
    "2362": {
      "jump": "i",
      "op": "JUMP"
    },
    "2363": {
      "op": "JUMPDEST"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2366": {
      "op": "DUP1"
    },
    "2367": {
      "op": "DUP3"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "DUP2"
    },
    "2370": {
      "op": "DUP2"
    },
    "2371": {
      "op": "ADD"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2408": {
      "op": "DUP3"
    },
    "2409": {
      "op": "ADD"
    },
    "2410": {
      "op": "MSTORE"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2413": {
      "op": "ADD"
    },
    "2414": {
      "op": "SWAP1"
    },
    "2415": {
      "jump": "o",
      "op": "JUMP"
    },
    "2416": {
      "op": "JUMPDEST"
    },
    "2417": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2427": {
      "op": "MSTORE"
    },
    "2428": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2432": {
      "op": "MSTORE"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2437": {
      "op": "REVERT"
    },
    "2438": {
      "op": "JUMPDEST"
    },
    "2439": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2446": {
      "op": "SHL"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2454": {
      "op": "MSTORE"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2459": {
      "op": "REVERT"
    },
    "2460": {
      "op": "JUMPDEST"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2465": {
      "op": "NOT"
    },
    "2466": {
      "op": "DUP3"
    },
    "2467": {
      "op": "EQ"
    },
    "2468": {
      "op": "ISZERO"
    },
    "2469": {
      "op": "PUSH2",
      "value": "0x9B0"
    },
    "2472": {
      "op": "JUMPI"
    },
    "2473": {
      "op": "PUSH2",
      "value": "0x9B0"
    },
    "2476": {
      "op": "PUSH2",
      "value": "0x986"
    },
    "2479": {
      "jump": "i",
      "op": "JUMP"
    },
    "2480": {
      "op": "JUMPDEST"
    },
    "2481": {
      "op": "POP"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2484": {
      "op": "ADD"
    },
    "2485": {
      "op": "SWAP1"
    },
    "2486": {
      "jump": "o",
      "op": "JUMP"
    },
    "2487": {
      "op": "JUMPDEST"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2492": {
      "op": "DUP3"
    },
    "2493": {
      "op": "DUP5"
    },
    "2494": {
      "op": "SUB"
    },
    "2495": {
      "op": "SLT"
    },
    "2496": {
      "op": "ISZERO"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x9C9"
    },
    "2500": {
      "op": "JUMPI"
    },
    "2501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2503": {
      "op": "DUP1"
    },
    "2504": {
      "op": "REVERT"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "op": "MLOAD"
    },
    "2508": {
      "op": "SWAP2"
    },
    "2509": {
      "op": "SWAP1"
    },
    "2510": {
      "op": "POP"
    },
    "2511": {
      "jump": "o",
      "op": "JUMP"
    },
    "2512": {
      "op": "JUMPDEST"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2517": {
      "op": "DUP3"
    },
    "2518": {
      "op": "DUP5"
    },
    "2519": {
      "op": "SUB"
    },
    "2520": {
      "op": "SLT"
    },
    "2521": {
      "op": "ISZERO"
    },
    "2522": {
      "op": "PUSH2",
      "value": "0x9E2"
    },
    "2525": {
      "op": "JUMPI"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2528": {
      "op": "DUP1"
    },
    "2529": {
      "op": "REVERT"
    },
    "2530": {
      "op": "JUMPDEST"
    },
    "2531": {
      "op": "DUP2"
    },
    "2532": {
      "op": "MLOAD"
    },
    "2533": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2535": {
      "op": "DUP2"
    },
    "2536": {
      "op": "AND"
    },
    "2537": {
      "op": "DUP2"
    },
    "2538": {
      "op": "EQ"
    },
    "2539": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "2542": {
      "op": "JUMPI"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2545": {
      "op": "DUP1"
    },
    "2546": {
      "op": "REVERT"
    },
    "2547": {
      "op": "JUMPDEST"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2550": {
      "op": "DUP2"
    },
    "2551": {
      "op": "DUP2"
    },
    "2552": {
      "op": "JUMPDEST"
    },
    "2553": {
      "op": "DUP1"
    },
    "2554": {
      "op": "DUP6"
    },
    "2555": {
      "op": "GT"
    },
    "2556": {
      "op": "ISZERO"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0xA2E"
    },
    "2560": {
      "op": "JUMPI"
    },
    "2561": {
      "op": "DUP2"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2564": {
      "op": "NOT"
    },
    "2565": {
      "op": "DIV"
    },
    "2566": {
      "op": "DUP3"
    },
    "2567": {
      "op": "GT"
    },
    "2568": {
      "op": "ISZERO"
    },
    "2569": {
      "op": "PUSH2",
      "value": "0xA14"
    },
    "2572": {
      "op": "JUMPI"
    },
    "2573": {
      "op": "PUSH2",
      "value": "0xA14"
    },
    "2576": {
      "op": "PUSH2",
      "value": "0x986"
    },
    "2579": {
      "jump": "i",
      "op": "JUMP"
    },
    "2580": {
      "op": "JUMPDEST"
    },
    "2581": {
      "op": "DUP1"
    },
    "2582": {
      "op": "DUP6"
    },
    "2583": {
      "op": "AND"
    },
    "2584": {
      "op": "ISZERO"
    },
    "2585": {
      "op": "PUSH2",
      "value": "0xA21"
    },
    "2588": {
      "op": "JUMPI"
    },
    "2589": {
      "op": "SWAP2"
    },
    "2590": {
      "op": "DUP2"
    },
    "2591": {
      "op": "MUL"
    },
    "2592": {
      "op": "SWAP2"
    },
    "2593": {
      "op": "JUMPDEST"
    },
    "2594": {
      "op": "SWAP4"
    },
    "2595": {
      "op": "DUP5"
    },
    "2596": {
      "op": "SHR"
    },
    "2597": {
      "op": "SWAP4"
    },
    "2598": {
      "op": "SWAP1"
    },
    "2599": {
      "op": "DUP1"
    },
    "2600": {
      "op": "MUL"
    },
    "2601": {
      "op": "SWAP1"
    },
    "2602": {
      "op": "PUSH2",
      "value": "0x9F8"
    },
    "2605": {
      "op": "JUMP"
    },
    "2606": {
      "op": "JUMPDEST"
    },
    "2607": {
      "op": "POP"
    },
    "2608": {
      "op": "SWAP3"
    },
    "2609": {
      "op": "POP"
    },
    "2610": {
      "op": "SWAP3"
    },
    "2611": {
      "op": "SWAP1"
    },
    "2612": {
      "op": "POP"
    },
    "2613": {
      "jump": "o",
      "op": "JUMP"
    },
    "2614": {
      "op": "JUMPDEST"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2617": {
      "op": "DUP3"
    },
    "2618": {
      "op": "PUSH2",
      "value": "0xA45"
    },
    "2621": {
      "op": "JUMPI"
    },
    "2622": {
      "op": "POP"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2625": {
      "op": "PUSH2",
      "value": "0x26B"
    },
    "2628": {
      "op": "JUMP"
    },
    "2629": {
      "op": "JUMPDEST"
    },
    "2630": {
      "op": "DUP2"
    },
    "2631": {
      "op": "PUSH2",
      "value": "0xA52"
    },
    "2634": {
      "op": "JUMPI"
    },
    "2635": {
      "op": "POP"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2638": {
      "op": "PUSH2",
      "value": "0x26B"
    },
    "2641": {
      "op": "JUMP"
    },
    "2642": {
      "op": "JUMPDEST"
    },
    "2643": {
      "op": "DUP2"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "DUP2"
    },
    "2647": {
      "op": "EQ"
    },
    "2648": {
      "op": "PUSH2",
      "value": "0xA68"
    },
    "2651": {
      "op": "JUMPI"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2654": {
      "op": "DUP2"
    },
    "2655": {
      "op": "EQ"
    },
    "2656": {
      "op": "PUSH2",
      "value": "0xA72"
    },
    "2659": {
      "op": "JUMPI"
    },
    "2660": {
      "op": "PUSH2",
      "value": "0xA8E"
    },
    "2663": {
      "op": "JUMP"
    },
    "2664": {
      "op": "JUMPDEST"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "SWAP2"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "op": "PUSH2",
      "value": "0x26B"
    },
    "2673": {
      "op": "JUMP"
    },
    "2674": {
      "op": "JUMPDEST"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2677": {
      "op": "DUP5"
    },
    "2678": {
      "op": "GT"
    },
    "2679": {
      "op": "ISZERO"
    },
    "2680": {
      "op": "PUSH2",
      "value": "0xA83"
    },
    "2683": {
      "op": "JUMPI"
    },
    "2684": {
      "op": "PUSH2",
      "value": "0xA83"
    },
    "2687": {
      "op": "PUSH2",
      "value": "0x986"
    },
    "2690": {
      "jump": "i",
      "op": "JUMP"
    },
    "2691": {
      "op": "JUMPDEST"
    },
    "2692": {
      "op": "POP"
    },
    "2693": {
      "op": "POP"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "DUP3"
    },
    "2697": {
      "op": "SHL"
    },
    "2698": {
      "op": "PUSH2",
      "value": "0x26B"
    },
    "2701": {
      "op": "JUMP"
    },
    "2702": {
      "op": "JUMPDEST"
    },
    "2703": {
      "op": "POP"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2706": {
      "op": "DUP4"
    },
    "2707": {
      "op": "LT"
    },
    "2708": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "2711": {
      "op": "DUP4"
    },
    "2712": {
      "op": "LT"
    },
    "2713": {
      "op": "AND"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "2716": {
      "op": "DUP5"
    },
    "2717": {
      "op": "LT"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "2720": {
      "op": "DUP5"
    },
    "2721": {
      "op": "LT"
    },
    "2722": {
      "op": "AND"
    },
    "2723": {
      "op": "OR"
    },
    "2724": {
      "op": "ISZERO"
    },
    "2725": {
      "op": "PUSH2",
      "value": "0xAB1"
    },
    "2728": {
      "op": "JUMPI"
    },
    "2729": {
      "op": "POP"
    },
    "2730": {
      "op": "DUP2"
    },
    "2731": {
      "op": "DUP2"
    },
    "2732": {
      "op": "EXP"
    },
    "2733": {
      "op": "PUSH2",
      "value": "0x26B"
    },
    "2736": {
      "op": "JUMP"
    },
    "2737": {
      "op": "JUMPDEST"
    },
    "2738": {
      "op": "PUSH2",
      "value": "0xABB"
    },
    "2741": {
      "op": "DUP4"
    },
    "2742": {
      "op": "DUP4"
    },
    "2743": {
      "op": "PUSH2",
      "value": "0x9F3"
    },
    "2746": {
      "jump": "i",
      "op": "JUMP"
    },
    "2747": {
      "op": "JUMPDEST"
    },
    "2748": {
      "op": "DUP1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2751": {
      "op": "NOT"
    },
    "2752": {
      "op": "DIV"
    },
    "2753": {
      "op": "DUP3"
    },
    "2754": {
      "op": "GT"
    },
    "2755": {
      "op": "ISZERO"
    },
    "2756": {
      "op": "PUSH2",
      "value": "0xACF"
    },
    "2759": {
      "op": "JUMPI"
    },
    "2760": {
      "op": "PUSH2",
      "value": "0xACF"
    },
    "2763": {
      "op": "PUSH2",
      "value": "0x986"
    },
    "2766": {
      "jump": "i",
      "op": "JUMP"
    },
    "2767": {
      "op": "JUMPDEST"
    },
    "2768": {
      "op": "MUL"
    },
    "2769": {
      "op": "SWAP4"
    },
    "2770": {
      "op": "SWAP3"
    },
    "2771": {
      "op": "POP"
    },
    "2772": {
      "op": "POP"
    },
    "2773": {
      "op": "POP"
    },
    "2774": {
      "jump": "o",
      "op": "JUMP"
    },
    "2775": {
      "op": "JUMPDEST"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2778": {
      "op": "PUSH2",
      "value": "0x619"
    },
    "2781": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2783": {
      "op": "DUP5"
    },
    "2784": {
      "op": "AND"
    },
    "2785": {
      "op": "DUP4"
    },
    "2786": {
      "op": "PUSH2",
      "value": "0xA36"
    },
    "2789": {
      "jump": "i",
      "op": "JUMP"
    },
    "2790": {
      "op": "JUMPDEST"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2793": {
      "op": "DUP1"
    },
    "2794": {
      "op": "DUP3"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2798": {
      "op": "SWAP1"
    },
    "2799": {
      "op": "DUP3"
    },
    "2800": {
      "op": "ADD"
    },
    "2801": {
      "op": "MSTORE"
    },
    "2802": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2837": {
      "op": "DUP3"
    },
    "2838": {
      "op": "ADD"
    },
    "2839": {
      "op": "MSTORE"
    },
    "2840": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "2854": {
      "op": "SHL"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2857": {
      "op": "DUP3"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "op": "MSTORE"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2862": {
      "op": "ADD"
    },
    "2863": {
      "op": "SWAP1"
    },
    "2864": {
      "jump": "o",
      "op": "JUMP"
    },
    "2865": {
      "op": "JUMPDEST"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2868": {
      "op": "DUP2"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2871": {
      "op": "NOT"
    },
    "2872": {
      "op": "DIV"
    },
    "2873": {
      "op": "DUP4"
    },
    "2874": {
      "op": "GT"
    },
    "2875": {
      "op": "DUP3"
    },
    "2876": {
      "op": "ISZERO"
    },
    "2877": {
      "op": "ISZERO"
    },
    "2878": {
      "op": "AND"
    },
    "2879": {
      "op": "ISZERO"
    },
    "2880": {
      "op": "PUSH2",
      "value": "0xB4B"
    },
    "2883": {
      "op": "JUMPI"
    },
    "2884": {
      "op": "PUSH2",
      "value": "0xB4B"
    },
    "2887": {
      "op": "PUSH2",
      "value": "0x986"
    },
    "2890": {
      "jump": "i",
      "op": "JUMP"
    },
    "2891": {
      "op": "JUMPDEST"
    },
    "2892": {
      "op": "POP"
    },
    "2893": {
      "op": "MUL"
    },
    "2894": {
      "op": "SWAP1"
    },
    "2895": {
      "jump": "o",
      "op": "JUMP"
    },
    "2896": {
      "op": "JUMPDEST"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2899": {
      "op": "DUP3"
    },
    "2900": {
      "op": "PUSH2",
      "value": "0xB6D"
    },
    "2903": {
      "op": "JUMPI"
    },
    "2904": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2911": {
      "op": "SHL"
    },
    "2912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2919": {
      "op": "MSTORE"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2924": {
      "op": "REVERT"
    },
    "2925": {
      "op": "JUMPDEST"
    },
    "2926": {
      "op": "POP"
    },
    "2927": {
      "op": "DIV"
    },
    "2928": {
      "op": "SWAP1"
    },
    "2929": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "a2afe13d7fe813fd91459db02a63cb33c46c86a2",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\nimport '../interfaces/IPriceFeed.sol';\n\n// ALL decimal will scale to 1e18\ncontract PriceCalculator is Initializable, OwnableUpgradeable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    struct PriceFeed {\n        address oracleAddress;\n        address onChainFetcher;\n    }\n\n    mapping(address => PriceFeed) public tokenPriceFeed;\n\n    function initialize() external initializer {\n        __Ownable_init();\n    }\n\n    function addFeeds(address[] memory tokens, PriceFeed[] memory priceFeeds) external onlyOwner {\n        require(tokens.length == priceFeeds.length, \"bad_args\");\n\n        for (uint256 i = 0; i < tokens.length; i++ ) {\n            tokenPriceFeed[tokens[i]] = priceFeeds[i];\n        }\n    }\n\n    function oracleValueOf(address oracleAddress, address tokenAddress, uint amount) internal view returns (uint256 valueInUSD) {\n        uint256 price = IPriceFeed(oracleAddress).getData(tokenAddress);\n        valueInUSD = price.mul(amount).div(10 ** IERC20Metadata(tokenAddress).decimals());\n    }\n\n    function tokenPriceInUSD(address tokenAddress, uint amount) view external returns (uint256 price) {\n        PriceFeed storage feed = tokenPriceFeed[tokenAddress];\n\n        require(feed.oracleAddress != address(0) || feed.onChainFetcher != address(0), \"no_price_feed\");\n        uint256 pairPrice = 0;\n        uint256 oraclePrice = 0;\n\n        if (feed.onChainFetcher != address(0)) {\n            pairPrice = oracleValueOf(feed.onChainFetcher, tokenAddress, amount);\n        }\n\n        if (feed.oracleAddress != address(0)) {\n            oraclePrice = oracleValueOf(feed.oracleAddress, tokenAddress, amount);\n        }\n\n        if (feed.onChainFetcher == address(0)) {\n            return oraclePrice;\n        }\n\n        if (feed.oracleAddress == address(0)) {\n            return pairPrice;\n        }\n\n        return Math.min(oraclePrice, pairPrice);\n    }\n\n}\n\n",
  "sourceMap": "595:1815:39:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/priceOracle/PriceCalculator.sol",
  "type": "contract"
}