{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceCalculatorAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceCalculatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "19": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
    "24": "contracts/interfaces/IPriceCalculator.sol",
    "25": "contracts/interfaces/IPriceFeed.sol",
    "26": "contracts/interfaces/IUniv2LikePair.sol",
    "34": "contracts/libraries/HomoraMath.sol",
    "35": "contracts/priceOracle/LPPriceCalculator.sol"
  },
  "ast": {
    "absolutePath": "contracts/priceOracle/LPPriceCalculator.sol",
    "exportedSymbols": {
      "Address": [
        6651
      ],
      "HomoraMath": [
        2982
      ],
      "IERC20": [
        5097
      ],
      "IERC20Metadata": [
        5514
      ],
      "IPriceCalculator": [
        689
      ],
      "IPriceFeed": [
        699
      ],
      "IUniv2LikePair": [
        941
      ],
      "LPPriceCalculator": [
        3121
      ],
      "Math": [
        5826
      ],
      "SafeERC20": [
        5738
      ],
      "SafeMath": [
        5489
      ]
    },
    "id": 3122,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2984,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:35"
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2985,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 5098,
        "src": "57:56:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 2986,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 5739,
        "src": "114:65:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 2987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 5827,
        "src": "180:53:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2988,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 5490,
        "src": "234:57:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 2989,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 5515,
        "src": "292:75:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/HomoraMath.sol",
        "file": "../libraries/HomoraMath.sol",
        "id": 2990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 2983,
        "src": "368:37:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IUniv2LikePair.sol",
        "file": "../interfaces/IUniv2LikePair.sol",
        "id": 2991,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 942,
        "src": "406:42:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IPriceCalculator.sol",
        "file": "../interfaces/IPriceCalculator.sol",
        "id": 2992,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 690,
        "src": "449:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IPriceFeed.sol",
        "file": "../interfaces/IPriceFeed.sol",
        "id": 2993,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3122,
        "sourceUnit": 700,
        "src": "494:38:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2994,
              "name": "IPriceFeed",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 699,
              "src": "564:10:35"
            },
            "id": 2995,
            "nodeType": "InheritanceSpecifier",
            "src": "564:10:35"
          }
        ],
        "canonicalName": "LPPriceCalculator",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3121,
        "linearizedBaseContracts": [
          3121,
          699
        ],
        "name": "LPPriceCalculator",
        "nameLocation": "543:17:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2998,
            "libraryName": {
              "id": 2996,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5489,
              "src": "587:8:35"
            },
            "nodeType": "UsingForDirective",
            "src": "581:27:35",
            "typeName": {
              "id": 2997,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "600:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3001,
            "libraryName": {
              "id": 2999,
              "name": "HomoraMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2982,
              "src": "619:10:35"
            },
            "nodeType": "UsingForDirective",
            "src": "613:29:35",
            "typeName": {
              "id": 3000,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "634:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "efd99e45",
            "id": 3003,
            "mutability": "immutable",
            "name": "priceCalculatorAddress",
            "nameLocation": "673:22:35",
            "nodeType": "VariableDeclaration",
            "scope": 3121,
            "src": "648:47:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "648:7:35",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3012,
              "nodeType": "Block",
              "src": "747:65:35",
              "statements": [
                {
                  "expression": {
                    "id": 3010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3008,
                      "name": "priceCalculatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3003,
                      "src": "757:22:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3009,
                      "name": "_priceCalculatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3005,
                      "src": "782:23:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "757:48:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3011,
                  "nodeType": "ExpressionStatement",
                  "src": "757:48:35"
                }
              ]
            },
            "id": 3013,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3005,
                  "mutability": "mutable",
                  "name": "_priceCalculatorAddress",
                  "nameLocation": "722:23:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 3013,
                  "src": "714:31:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "713:33:35"
            },
            "returnParameters": {
              "id": 3007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:35"
            },
            "scope": 3121,
            "src": "702:110:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              698
            ],
            "body": {
              "id": 3119,
              "nodeType": "Block",
              "src": "890:664:35",
              "statements": [
                {
                  "assignments": [
                    3022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3022,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "908:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "900:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3021,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "900:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3028,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3024,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3015,
                            "src": "932:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3023,
                          "name": "IUniv2LikePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "917:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniv2LikePair_$941_$",
                            "typeString": "type(contract IUniv2LikePair)"
                          }
                        },
                        "id": 3025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:20:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniv2LikePair_$941",
                          "typeString": "contract IUniv2LikePair"
                        }
                      },
                      "id": 3026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 869,
                      "src": "917:27:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 3027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "900:46:35"
                },
                {
                  "assignments": [
                    3030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3030,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "964:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "956:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3029,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "956:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3036,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3032,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3015,
                            "src": "988:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3031,
                          "name": "IUniv2LikePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "973:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniv2LikePair_$941_$",
                            "typeString": "type(contract IUniv2LikePair)"
                          }
                        },
                        "id": 3033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "973:20:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniv2LikePair_$941",
                          "typeString": "contract IUniv2LikePair"
                        }
                      },
                      "id": 3034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 874,
                      "src": "973:27:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 3035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "973:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "956:46:35"
                },
                {
                  "assignments": [
                    3038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3038,
                      "mutability": "mutable",
                      "name": "totalSupply",
                      "nameLocation": "1017:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "1012:16:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3037,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1012:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3044,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3040,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3015,
                            "src": "1046:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3039,
                          "name": "IUniv2LikePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "1031:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniv2LikePair_$941_$",
                            "typeString": "type(contract IUniv2LikePair)"
                          }
                        },
                        "id": 3041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1031:20:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniv2LikePair_$941",
                          "typeString": "contract IUniv2LikePair"
                        }
                      },
                      "id": 3042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 737,
                      "src": "1031:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 3043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:34:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1012:53:35"
                },
                {
                  "assignments": [
                    3046,
                    3048,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3046,
                      "mutability": "mutable",
                      "name": "r0",
                      "nameLocation": "1081:2:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "1076:7:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3045,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1076:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3048,
                      "mutability": "mutable",
                      "name": "r1",
                      "nameLocation": "1090:2:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "1085:7:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3047,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1085:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3054,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3050,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3015,
                            "src": "1113:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3049,
                          "name": "IUniv2LikePair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 941,
                          "src": "1098:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniv2LikePair_$941_$",
                            "typeString": "type(contract IUniv2LikePair)"
                          }
                        },
                        "id": 3051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1098:20:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniv2LikePair_$941",
                          "typeString": "contract IUniv2LikePair"
                        }
                      },
                      "id": 3052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 883,
                      "src": "1098:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 3053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1098:34:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1075:57:35"
                },
                {
                  "assignments": [
                    3056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3056,
                      "mutability": "mutable",
                      "name": "sqrtK",
                      "nameLocation": "1148:5:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "1143:10:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3055,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1143:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3067,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3065,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "1189:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3061,
                                "name": "r1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3048,
                                "src": "1179:2:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3059,
                                "name": "r0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3046,
                                "src": "1172:2:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5383,
                              "src": "1172:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1172:10:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 3057,
                            "name": "HomoraMath",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2982,
                            "src": "1156:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_HomoraMath_$2982_$",
                              "typeString": "type(library HomoraMath)"
                            }
                          },
                          "id": 3058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrt",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2981,
                          "src": "1156:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1156:27:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fdiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2781,
                      "src": "1156:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1156:45:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1143:58:35"
                },
                {
                  "assignments": [
                    3069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3069,
                      "mutability": "mutable",
                      "name": "px0",
                      "nameLocation": "1230:3:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "1225:8:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3068,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1225:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3077,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3074,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3022,
                        "src": "1293:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 3075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1301:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3071,
                            "name": "priceCalculatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3003,
                            "src": "1253:22:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3070,
                          "name": "IPriceCalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "1236:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPriceCalculator_$689_$",
                            "typeString": "type(contract IPriceCalculator)"
                          }
                        },
                        "id": 3072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1236:40:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPriceCalculator_$689",
                          "typeString": "contract IPriceCalculator"
                        }
                      },
                      "id": 3073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPriceInUSD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 688,
                      "src": "1236:56:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 3076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1236:70:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1225:81:35"
                },
                {
                  "assignments": [
                    3079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3079,
                      "mutability": "mutable",
                      "name": "px1",
                      "nameLocation": "1321:3:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "1316:8:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3078,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1316:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3087,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3084,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3030,
                        "src": "1384:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 3085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1392:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3081,
                            "name": "priceCalculatorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3003,
                            "src": "1344:22:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3080,
                          "name": "IPriceCalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "1327:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPriceCalculator_$689_$",
                            "typeString": "type(contract IPriceCalculator)"
                          }
                        },
                        "id": 3082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1327:40:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPriceCalculator_$689",
                          "typeString": "contract IPriceCalculator"
                        }
                      },
                      "id": 3083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenPriceInUSD",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 688,
                      "src": "1327:56:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 3086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:70:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:81:35"
                },
                {
                  "assignments": [
                    3089
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3089,
                      "mutability": "mutable",
                      "name": "fairPriceInUSD",
                      "nameLocation": "1412:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 3119,
                      "src": "1407:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3088,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1407:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3116,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_72057594037927936_by_1",
                          "typeString": "int_const 72057594037927936"
                        },
                        "id": 3114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 3112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1509:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3536",
                          "id": 3113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1512:2:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_56_by_1",
                            "typeString": "int_const 56"
                          },
                          "value": "56"
                        },
                        "src": "1509:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_72057594037927936_by_1",
                          "typeString": "int_const 72057594037927936"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_72057594037927936_by_1",
                          "typeString": "int_const 72057594037927936"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 3108,
                                "name": "px1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3079,
                                "src": "1499:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3106,
                                "name": "HomoraMath",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2982,
                                "src": "1483:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_HomoraMath_$2982_$",
                                  "typeString": "type(library HomoraMath)"
                                }
                              },
                              "id": 3107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sqrt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2981,
                              "src": "1483:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1483:20:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_72057594037927936_by_1",
                                  "typeString": "int_const 72057594037927936"
                                },
                                "id": 3103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 3101,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1472:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3536",
                                  "id": 3102,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1475:2:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_56_by_1",
                                    "typeString": "int_const 56"
                                  },
                                  "value": "56"
                                },
                                "src": "1472:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_72057594037927936_by_1",
                                  "typeString": "int_const 72057594037927936"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_72057594037927936_by_1",
                                  "typeString": "int_const 72057594037927936"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3097,
                                        "name": "px0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3069,
                                        "src": "1462:3:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3095,
                                        "name": "HomoraMath",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2982,
                                        "src": "1446:10:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_HomoraMath_$2982_$",
                                          "typeString": "type(library HomoraMath)"
                                        }
                                      },
                                      "id": 3096,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sqrt",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2981,
                                      "src": "1446:15:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3098,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1446:20:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "32",
                                        "id": 3092,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1439:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3090,
                                        "name": "sqrtK",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3056,
                                        "src": "1429:5:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3091,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5383,
                                      "src": "1429:9:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 3093,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1429:12:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3094,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5383,
                                  "src": "1429:16:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 3099,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1429:38:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5398,
                              "src": "1429:42:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 3104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1429:49:35",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5383,
                          "src": "1429:53:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1429:75:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 3111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5398,
                      "src": "1429:79:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 3115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:86:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1407:108:35"
                },
                {
                  "expression": {
                    "id": 3117,
                    "name": "fairPriceInUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3089,
                    "src": "1533:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3020,
                  "id": 3118,
                  "nodeType": "Return",
                  "src": "1526:21:35"
                }
              ]
            },
            "functionSelector": "38266b22",
            "id": 3120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nameLocation": "827:7:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3017,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "863:8:35"
            },
            "parameters": {
              "id": 3016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "843:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 3120,
                  "src": "835:12:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "834:14:35"
            },
            "returnParameters": {
              "id": 3020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3019,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3120,
                  "src": "881:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3018,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:9:35"
            },
            "scope": 3121,
            "src": "818:736:35",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3122,
        "src": "534:1022:35",
        "usedErrors": []
      }
    ],
    "src": "32:1525:35"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516107c13803806107c183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107296100986000396000818160660152818161029a015261033801526107296000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806338266b221461003b578063efd99e4514610061575b600080fd5b61004e6100493660046105c5565b6100a0565b6040519081526020015b60405180910390f35b6100887f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610058565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010591906105e2565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b91906105e2565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d191906105ff565b9050600080866001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610634565b506001600160701b03918216935016905060006102678461026161025c86866103f5565b610408565b90610586565b604051630534333f60e11b81526001600160a01b038881166004830152670de0b6b3a764000060248301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690630a68667e90604401602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030591906105ff565b604051630534333f60e11b81526001600160a01b038881166004830152670de0b6b3a764000060248301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690630a68667e90604401602060405180830381865afa15801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a391906105ff565b905060006103e6600160381b6103e06103bb85610408565b6103da600160381b6103e06103cf8a610408565b6103da8c60026103f5565b906103f5565b906105a1565b9b9a5050505050505050505050565b6000610401828461069a565b9392505050565b60008161041757506000919050565b816001600160801b82106104305760809190911c9060401b5b68010000000000000000821061044b5760409190911c9060201b5b64010000000082106104625760209190911c9060101b5b6201000082106104775760109190911c9060081b5b610100821061048b5760089190911c9060041b5b6010821061049e5760049190911c9060021b5b600882106104aa5760011b5b60016104b682866106b9565b6104c090836106db565b901c905060016104d082866106b9565b6104da90836106db565b901c905060016104ea82866106b9565b6104f490836106db565b901c9050600161050482866106b9565b61050e90836106db565b901c9050600161051e82866106b9565b61052890836106db565b901c9050600161053882866106b9565b61054290836106db565b901c9050600161055282866106b9565b61055c90836106db565b901c9050600061056c82866106b9565b905080821061057b578061057d565b815b95945050505050565b60008161059784600160701b6103f5565b61040191906106b9565b600061040182846106b9565b6001600160a01b03811681146105c257600080fd5b50565b6000602082840312156105d757600080fd5b8135610401816105ad565b6000602082840312156105f457600080fd5b8151610401816105ad565b60006020828403121561061157600080fd5b5051919050565b80516001600160701b038116811461062f57600080fd5b919050565b60008060006060848603121561064957600080fd5b61065284610618565b925061066060208501610618565b9150604084015163ffffffff8116811461067957600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106b4576106b4610684565b500290565b6000826106d657634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156106ee576106ee610684565b50019056fea2646970667358221220d4702779a8c161899274f98d26fac92db263d0858c6c0d23621251d042e8449f64736f6c634300080c0033",
  "bytecodeSha1": "21e4d16afafc05f9e226b515a802ce1ac35b7bdb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "LPPriceCalculator",
  "coverageMap": {
    "branches": {
      "19": {},
      "24": {},
      "25": {},
      "26": {},
      "34": {
        "HomoraMath.sqrt": {
          "25": [
            827,
            833,
            false
          ],
          "26": [
            899,
            940,
            false
          ],
          "27": [
            1013,
            1038,
            false
          ],
          "28": [
            1109,
            1126,
            false
          ],
          "29": [
            1197,
            1210,
            false
          ],
          "30": [
            1280,
            1291,
            false
          ],
          "31": [
            1360,
            1370,
            false
          ],
          "32": [
            1439,
            1448,
            false
          ],
          "33": [
            1772,
            1778,
            true
          ]
        }
      },
      "35": {}
    },
    "statements": {
      "19": {
        "SafeMath.div": {
          "24": [
            3913,
            3925
          ]
        },
        "SafeMath.mul": {
          "0": [
            3528,
            3540
          ]
        }
      },
      "24": {},
      "25": {},
      "26": {},
      "34": {
        "HomoraMath.fdiv": {
          "23": [
            481,
            509
          ]
        },
        "HomoraMath.sqrt": {
          "1": [
            835,
            843
          ],
          "2": [
            956,
            966
          ],
          "3": [
            980,
            988
          ],
          "4": [
            1054,
            1063
          ],
          "5": [
            1077,
            1085
          ],
          "6": [
            1142,
            1151
          ],
          "7": [
            1165,
            1173
          ],
          "8": [
            1226,
            1235
          ],
          "9": [
            1249,
            1256
          ],
          "10": [
            1307,
            1315
          ],
          "11": [
            1329,
            1336
          ],
          "12": [
            1386,
            1394
          ],
          "13": [
            1408,
            1415
          ],
          "14": [
            1464,
            1471
          ],
          "15": [
            1492,
            1512
          ],
          "16": [
            1522,
            1542
          ],
          "17": [
            1552,
            1572
          ],
          "18": [
            1582,
            1602
          ],
          "19": [
            1612,
            1632
          ],
          "20": [
            1642,
            1662
          ],
          "21": [
            1672,
            1692
          ],
          "22": [
            1764,
            1788
          ]
        }
      },
      "35": {}
    }
  },
  "dependencies": [
    "HomoraMath",
    "IPriceCalculator",
    "IPriceFeed",
    "IUniv2LikePair",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806338266b221461003b578063efd99e4514610061575b600080fd5b61004e6100493660046105c5565b6100a0565b6040519081526020015b60405180910390f35b6100887f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610058565b600080826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010591906105e2565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610147573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016b91906105e2565b90506000846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d191906105ff565b9050600080866001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610634565b506001600160701b03918216935016905060006102678461026161025c86866103f5565b610408565b90610586565b604051630534333f60e11b81526001600160a01b038881166004830152670de0b6b3a764000060248301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690630a68667e90604401602060405180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030591906105ff565b604051630534333f60e11b81526001600160a01b038881166004830152670de0b6b3a764000060248301529192506000917f00000000000000000000000000000000000000000000000000000000000000001690630a68667e90604401602060405180830381865afa15801561037f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a391906105ff565b905060006103e6600160381b6103e06103bb85610408565b6103da600160381b6103e06103cf8a610408565b6103da8c60026103f5565b906103f5565b906105a1565b9b9a5050505050505050505050565b6000610401828461069a565b9392505050565b60008161041757506000919050565b816001600160801b82106104305760809190911c9060401b5b68010000000000000000821061044b5760409190911c9060201b5b64010000000082106104625760209190911c9060101b5b6201000082106104775760109190911c9060081b5b610100821061048b5760089190911c9060041b5b6010821061049e5760049190911c9060021b5b600882106104aa5760011b5b60016104b682866106b9565b6104c090836106db565b901c905060016104d082866106b9565b6104da90836106db565b901c905060016104ea82866106b9565b6104f490836106db565b901c9050600161050482866106b9565b61050e90836106db565b901c9050600161051e82866106b9565b61052890836106db565b901c9050600161053882866106b9565b61054290836106db565b901c9050600161055282866106b9565b61055c90836106db565b901c9050600061056c82866106b9565b905080821061057b578061057d565b815b95945050505050565b60008161059784600160701b6103f5565b61040191906106b9565b600061040182846106b9565b6001600160a01b03811681146105c257600080fd5b50565b6000602082840312156105d757600080fd5b8135610401816105ad565b6000602082840312156105f457600080fd5b8151610401816105ad565b60006020828403121561061157600080fd5b5051919050565b80516001600160701b038116811461062f57600080fd5b919050565b60008060006060848603121561064957600080fd5b61065284610618565b925061066060208501610618565b9150604084015163ffffffff8116811461067957600080fd5b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106b4576106b4610684565b500290565b6000826106d657634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156106ee576106ee610684565b50019056fea2646970667358221220d4702779a8c161899274f98d26fac92db263d0858c6c0d23621251d042e8449f64736f6c634300080c0033",
  "deployedSourceMap": "534:1022:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:736;;;;;;:::i;:::-;;:::i;:::-;;;548:25:40;;;536:2;521:18;818:736:35;;;;;;;;648:47;;;;;;;;-1:-1:-1;;;;;748:32:40;;;730:51;;718:2;703:18;648:47:35;584:203:40;818:736:35;881:7;900:14;932:4;-1:-1:-1;;;;;917:27:35;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;900:46;;956:14;988:4;-1:-1:-1;;;;;973:27:35;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;956:46;;1012:16;1046:4;-1:-1:-1;;;;;1031:32:35;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1012:53;;1076:7;1085;1113:4;-1:-1:-1;;;;;1098:32:35;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1075:57:35;;;;-1:-1:-1;1075:57:35;;-1:-1:-1;1143:10:35;1156:45;1189:11;1156:27;1172:10;1075:57;;1172:6;:10::i;:::-;1156:15;:27::i;:::-;:32;;:45::i;:::-;1236:70;;-1:-1:-1;;;1236:70:35;;-1:-1:-1;;;;;2103:32:40;;;1236:70:35;;;2085:51:40;1301:4:35;2152:18:40;;;2145:34;1143:58:35;;-1:-1:-1;1225:8:35;;1253:22;1236:56;;;;2058:18:40;;1236:70:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1327;;-1:-1:-1;;;1327:70:35;;-1:-1:-1;;;;;2103:32:40;;;1327:70:35;;;2085:51:40;1392:4:35;2152:18:40;;;2145:34;1225:81:35;;-1:-1:-1;1316:8:35;;1344:22;1327:56;;;;2058:18:40;;1327:70:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1316:81;;1407:19;1429:86;-1:-1:-1;;;1429:75:35;1483:20;1499:3;1483:15;:20::i;:::-;1429:49;-1:-1:-1;;;1429:38:35;1446:20;1462:3;1446:15;:20::i;:::-;1429:12;:5;1439:1;1429:9;:12::i;:::-;:16;;:38::i;:::-;:42;;:49::i;:86::-;1407:108;818:736;-1:-1:-1;;;;;;;;;;;818:736:35:o;3451:96:19:-;3509:7;3535:5;3539:1;3535;:5;:::i;:::-;3528:12;3451:96;-1:-1:-1;;;3451:96:19:o;762:1033:34:-;807:4;827:6;823:20;;-1:-1:-1;842:1:34;;762:1033;-1:-1:-1;762:1033:34:o;823:20::-;863:1;883;-1:-1:-1;;;899:41:34;;895:104;;963:3;956:10;;;;;986:2;980:8;895:104;1019:19;1013:2;:25;1009:87;;1061:2;1054:9;;;;;1083:2;1077:8;1009:87;1115:11;1109:2;:17;1105:79;;1149:2;1142:9;;;;;1171:2;1165:8;1105:79;1203:7;1197:2;:13;1193:74;;1233:2;1226:9;;;;;1255:1;1249:7;1193:74;1286:5;1280:2;:11;1276:71;;1314:1;1307:8;;;;;1335:1;1329:7;1276:71;1366:4;1360:2;:10;1356:70;;1393:1;1386:8;;;;;1414:1;1408:7;1356:70;1445:3;1439:2;:9;1435:47;;1470:1;1464:7;1435:47;1511:1;1501:5;1505:1;1501;:5;:::i;:::-;1497:9;;:1;:9;:::i;:::-;1496:16;;;-1:-1:-1;1541:1:34;1531:5;1496:16;1531:1;:5;:::i;:::-;1527:9;;:1;:9;:::i;:::-;1526:16;;;-1:-1:-1;1571:1:34;1561:5;1526:16;1561:1;:5;:::i;:::-;1557:9;;:1;:9;:::i;:::-;1556:16;;;-1:-1:-1;1601:1:34;1591:5;1556:16;1591:1;:5;:::i;:::-;1587:9;;:1;:9;:::i;:::-;1586:16;;;-1:-1:-1;1631:1:34;1621:5;1586:16;1621:1;:5;:::i;:::-;1617:9;;:1;:9;:::i;:::-;1616:16;;;-1:-1:-1;1661:1:34;1651:5;1616:16;1651:1;:5;:::i;:::-;1647:9;;:1;:9;:::i;:::-;1646:16;;;-1:-1:-1;1691:1:34;1681:5;1646:16;1681:1;:5;:::i;:::-;1677:9;;:1;:9;:::i;:::-;1676:16;;;-1:-1:-1;1739:7:34;1749:5;1676:16;1749:1;:5;:::i;:::-;1739:15;;1776:2;1772:1;:6;:15;;1785:2;1772:15;;;1781:1;1772:15;1764:24;762:1033;-1:-1:-1;;;;;762:1033:34:o;408:108::-;465:4;506:3;488:15;:3;-1:-1:-1;;;488:7:34;:15::i;:::-;:21;;;;:::i;3836:96:19:-;3894:7;3920:5;3924:1;3920;:5;:::i;14:131:40:-;-1:-1:-1;;;;;89:31:40;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;792:251::-;862:6;915:2;903:9;894:7;890:23;886:32;883:52;;;931:1;928;921:12;883:52;963:9;957:16;982:31;1007:5;982:31;:::i;1048:184::-;1118:6;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;-1:-1:-1;1210:16:40;;1048:184;-1:-1:-1;1048:184:40:o;1237:188::-;1316:13;;-1:-1:-1;;;;;1358:42:40;;1348:53;;1338:81;;1415:1;1412;1405:12;1338:81;1237:188;;;:::o;1430:450::-;1517:6;1525;1533;1586:2;1574:9;1565:7;1561:23;1557:32;1554:52;;;1602:1;1599;1592:12;1554:52;1625:40;1655:9;1625:40;:::i;:::-;1615:50;;1684:49;1729:2;1718:9;1714:18;1684:49;:::i;:::-;1674:59;;1776:2;1765:9;1761:18;1755:25;1820:10;1813:5;1809:22;1802:5;1799:33;1789:61;;1846:1;1843;1836:12;1789:61;1869:5;1859:15;;;1430:450;;;;;:::o;2190:127::-;2251:10;2246:3;2242:20;2239:1;2232:31;2282:4;2279:1;2272:15;2306:4;2303:1;2296:15;2322:168;2362:7;2428:1;2424;2420:6;2416:14;2413:1;2410:21;2405:1;2398:9;2391:17;2387:45;2384:71;;;2435:18;;:::i;:::-;-1:-1:-1;2475:9:40;;2322:168::o;2495:217::-;2535:1;2561;2551:132;;2605:10;2600:3;2596:20;2593:1;2586:31;2640:4;2637:1;2630:15;2668:4;2665:1;2658:15;2551:132;-1:-1:-1;2697:9:40;;2495:217::o;2717:128::-;2757:3;2788:1;2784:6;2781:1;2778:13;2775:39;;;2794:18;;:::i;:::-;-1:-1:-1;2830:9:40;;2717:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    534,
    1556
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38266B22 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xEFD99E45 EQ PUSH2 0x61 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x58 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x214 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x634 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP2 DUP3 AND SWAP4 POP AND SWAP1 POP PUSH1 0x0 PUSH2 0x267 DUP5 PUSH2 0x261 PUSH2 0x25C DUP7 DUP7 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST SWAP1 PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x534333F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xA68667E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x534333F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0xA68667E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x37F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E6 PUSH1 0x1 PUSH1 0x38 SHL PUSH2 0x3E0 PUSH2 0x3BB DUP6 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x3DA PUSH1 0x1 PUSH1 0x38 SHL PUSH2 0x3E0 PUSH2 0x3CF DUP11 PUSH2 0x408 JUMP JUMPDEST PUSH2 0x3DA DUP13 PUSH1 0x2 PUSH2 0x3F5 JUMP JUMPDEST SWAP1 PUSH2 0x3F5 JUMP JUMPDEST SWAP1 PUSH2 0x5A1 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x401 DUP3 DUP5 PUSH2 0x69A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x417 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL DUP3 LT PUSH2 0x430 JUMPI PUSH1 0x80 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x40 SHL JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x44B JUMPI PUSH1 0x40 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x20 SHL JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x462 JUMPI PUSH1 0x20 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x10 SHL JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x477 JUMPI PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x8 SHL JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x48B JUMPI PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x4 SHL JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x49E JUMPI PUSH1 0x4 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 SHL JUMPDEST PUSH1 0x8 DUP3 LT PUSH2 0x4AA JUMPI PUSH1 0x1 SHL JUMPDEST PUSH1 0x1 PUSH2 0x4B6 DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x4C0 SWAP1 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP1 SHR SWAP1 POP PUSH1 0x1 PUSH2 0x4D0 DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x4DA SWAP1 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP1 SHR SWAP1 POP PUSH1 0x1 PUSH2 0x4EA DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x4F4 SWAP1 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP1 SHR SWAP1 POP PUSH1 0x1 PUSH2 0x504 DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x50E SWAP1 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP1 SHR SWAP1 POP PUSH1 0x1 PUSH2 0x51E DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x528 SWAP1 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP1 SHR SWAP1 POP PUSH1 0x1 PUSH2 0x538 DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x542 SWAP1 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP1 SHR SWAP1 POP PUSH1 0x1 PUSH2 0x552 DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x55C SWAP1 DUP4 PUSH2 0x6DB JUMP JUMPDEST SWAP1 SHR SWAP1 POP PUSH1 0x0 PUSH2 0x56C DUP3 DUP7 PUSH2 0x6B9 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT PUSH2 0x57B JUMPI DUP1 PUSH2 0x57D JUMP JUMPDEST DUP2 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x597 DUP5 PUSH1 0x1 PUSH1 0x70 SHL PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x401 DUP3 DUP5 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x401 DUP2 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x401 DUP2 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x649 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x652 DUP5 PUSH2 0x618 JUMP JUMPDEST SWAP3 POP PUSH2 0x660 PUSH1 0x20 DUP6 ADD PUSH2 0x618 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x6B4 PUSH2 0x684 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x6EE JUMPI PUSH2 0x6EE PUSH2 0x684 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 PUSH17 0x2779A8C161899274F98D26FAC92DB263D0 DUP6 DUP13 PUSH13 0xD23621251D042E8449F64736F PUSH13 0x634300080C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        534,
        1556
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "5": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "CALLVALUE",
      "path": "35"
    },
    "6": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "DUP1",
      "path": "35"
    },
    "7": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "8": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "12": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "DUP1",
      "path": "35"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "REVERT",
      "path": "35"
    },
    "16": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "17": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "POP",
      "path": "35"
    },
    "18": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "21": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "LT",
      "path": "35"
    },
    "22": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "26": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "CALLDATALOAD",
      "path": "35"
    },
    "29": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "SHR",
      "path": "35"
    },
    "32": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "DUP1",
      "path": "35"
    },
    "33": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x38266B22"
    },
    "38": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "EQ",
      "path": "35"
    },
    "39": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "43": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "DUP1",
      "path": "35"
    },
    "44": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xEFD99E45"
    },
    "49": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "EQ",
      "path": "35"
    },
    "50": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x61"
    },
    "53": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "54": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "55": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "DUP1",
      "path": "35"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        534,
        1556
      ],
      "op": "REVERT",
      "path": "35"
    },
    "59": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "60": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x4E"
    },
    "63": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x49"
    },
    "66": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "67": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "69": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5C5"
    },
    "72": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        818,
        1554
      ],
      "op": "JUMP",
      "path": "35"
    },
    "73": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "74": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xA0"
    },
    "77": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        818,
        1554
      ],
      "op": "JUMP",
      "path": "35"
    },
    "78": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "79": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "81": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "82": {
      "op": "SWAP1"
    },
    "83": {
      "op": "DUP2"
    },
    "84": {
      "op": "MSTORE"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "87": {
      "op": "ADD"
    },
    "88": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "89": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "91": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "92": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "DUP1",
      "path": "35"
    },
    "93": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "94": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "SUB",
      "path": "35"
    },
    "95": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "96": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "RETURN",
      "path": "35"
    },
    "97": {
      "offset": [
        648,
        695
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "98": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        648,
        695
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x88"
    },
    "101": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        648,
        695
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x0"
    },
    "134": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        648,
        695
      ],
      "op": "DUP2",
      "path": "35"
    },
    "135": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        648,
        695
      ],
      "op": "JUMP",
      "path": "35"
    },
    "136": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        648,
        695
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "137": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        648,
        695
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "139": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        648,
        695
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "146": {
      "op": "SHL"
    },
    "147": {
      "op": "SUB"
    },
    "148": {
      "op": "SWAP1"
    },
    "149": {
      "op": "SWAP2"
    },
    "150": {
      "op": "AND"
    },
    "151": {
      "op": "DUP2"
    },
    "152": {
      "op": "MSTORE"
    },
    "153": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "155": {
      "op": "ADD"
    },
    "156": {
      "offset": [
        648,
        695
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x58"
    },
    "159": {
      "op": "JUMP"
    },
    "160": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "161": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        881,
        888
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "163": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        900,
        914
      ],
      "op": "DUP1",
      "path": "35"
    },
    "164": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        932,
        936
      ],
      "op": "DUP3",
      "path": "35"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "171": {
      "op": "SHL"
    },
    "172": {
      "op": "SUB"
    },
    "173": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        944
      ],
      "op": "AND",
      "path": "35"
    },
    "174": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        944
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xDFE1681"
    },
    "179": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "181": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "182": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP2",
      "path": "35"
    },
    "183": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xFFFFFFFF"
    },
    "188": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "AND",
      "path": "35"
    },
    "189": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xE0"
    },
    "191": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "SHL",
      "path": "35"
    },
    "192": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP2",
      "path": "35"
    },
    "193": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "194": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "196": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "ADD",
      "path": "35"
    },
    "197": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "199": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "201": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "202": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP1",
      "path": "35"
    },
    "203": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP4",
      "path": "35"
    },
    "204": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "SUB",
      "path": "35"
    },
    "205": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP2",
      "path": "35"
    },
    "206": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP7",
      "path": "35"
    },
    "207": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "GAS",
      "path": "35"
    },
    "208": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "STATICCALL",
      "path": "35"
    },
    "209": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "210": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP1",
      "path": "35"
    },
    "211": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "212": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0xE1"
    },
    "215": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "216": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "217": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "219": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP1",
      "path": "35"
    },
    "220": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "221": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "222": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "224": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "REVERT",
      "path": "35"
    },
    "225": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "226": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "POP",
      "path": "35"
    },
    "227": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "POP",
      "path": "35"
    },
    "228": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "POP",
      "path": "35"
    },
    "229": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "POP",
      "path": "35"
    },
    "230": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "232": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "233": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "234": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "236": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "NOT",
      "path": "35"
    },
    "237": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "239": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP3",
      "path": "35"
    },
    "240": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "ADD",
      "path": "35"
    },
    "241": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "AND",
      "path": "35"
    },
    "242": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP3",
      "path": "35"
    },
    "243": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "ADD",
      "path": "35"
    },
    "244": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP1",
      "path": "35"
    },
    "245": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "247": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "248": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "POP",
      "path": "35"
    },
    "249": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "DUP2",
      "path": "35"
    },
    "250": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "ADD",
      "path": "35"
    },
    "251": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "252": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x105"
    },
    "255": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "256": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "257": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5E2"
    },
    "260": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        917,
        946
      ],
      "op": "JUMP",
      "path": "35"
    },
    "261": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        917,
        946
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "262": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        900,
        946
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "263": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        900,
        946
      ],
      "op": "POP",
      "path": "35"
    },
    "264": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        956,
        970
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "266": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        988,
        992
      ],
      "op": "DUP4",
      "path": "35"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "op": "SUB"
    },
    "275": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1000
      ],
      "op": "AND",
      "path": "35"
    },
    "276": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1000
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xD21220A7"
    },
    "281": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "283": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "284": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "35"
    },
    "285": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xFFFFFFFF"
    },
    "290": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "35"
    },
    "291": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xE0"
    },
    "293": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "SHL",
      "path": "35"
    },
    "294": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "35"
    },
    "295": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "296": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "298": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "ADD",
      "path": "35"
    },
    "299": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "301": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "303": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "304": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP1",
      "path": "35"
    },
    "305": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP4",
      "path": "35"
    },
    "306": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "SUB",
      "path": "35"
    },
    "307": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "35"
    },
    "308": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP7",
      "path": "35"
    },
    "309": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "GAS",
      "path": "35"
    },
    "310": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "STATICCALL",
      "path": "35"
    },
    "311": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "312": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP1",
      "path": "35"
    },
    "313": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "314": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x147"
    },
    "317": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "318": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "319": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "321": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP1",
      "path": "35"
    },
    "322": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "323": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "324": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "326": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "REVERT",
      "path": "35"
    },
    "327": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "328": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "POP",
      "path": "35"
    },
    "329": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "POP",
      "path": "35"
    },
    "330": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "POP",
      "path": "35"
    },
    "331": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "POP",
      "path": "35"
    },
    "332": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "334": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "335": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "336": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "338": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "NOT",
      "path": "35"
    },
    "339": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "341": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP3",
      "path": "35"
    },
    "342": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "ADD",
      "path": "35"
    },
    "343": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "AND",
      "path": "35"
    },
    "344": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP3",
      "path": "35"
    },
    "345": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "ADD",
      "path": "35"
    },
    "346": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP1",
      "path": "35"
    },
    "347": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "349": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "350": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "POP",
      "path": "35"
    },
    "351": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "DUP2",
      "path": "35"
    },
    "352": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "ADD",
      "path": "35"
    },
    "353": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "354": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x16B"
    },
    "357": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "358": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "359": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5E2"
    },
    "362": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        973,
        1002
      ],
      "op": "JUMP",
      "path": "35"
    },
    "363": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        973,
        1002
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "364": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        956,
        1002
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "365": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        956,
        1002
      ],
      "op": "POP",
      "path": "35"
    },
    "366": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1012,
        1028
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "368": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1046,
        1050
      ],
      "op": "DUP5",
      "path": "35"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "375": {
      "op": "SHL"
    },
    "376": {
      "op": "SUB"
    },
    "377": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1063
      ],
      "op": "AND",
      "path": "35"
    },
    "378": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1063
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x18160DDD"
    },
    "383": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "385": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "386": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP2",
      "path": "35"
    },
    "387": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xFFFFFFFF"
    },
    "392": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "AND",
      "path": "35"
    },
    "393": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xE0"
    },
    "395": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "SHL",
      "path": "35"
    },
    "396": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP2",
      "path": "35"
    },
    "397": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "398": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "400": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "ADD",
      "path": "35"
    },
    "401": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "403": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "405": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "406": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP1",
      "path": "35"
    },
    "407": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP4",
      "path": "35"
    },
    "408": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "SUB",
      "path": "35"
    },
    "409": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP2",
      "path": "35"
    },
    "410": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP7",
      "path": "35"
    },
    "411": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "GAS",
      "path": "35"
    },
    "412": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "STATICCALL",
      "path": "35"
    },
    "413": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "414": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP1",
      "path": "35"
    },
    "415": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "416": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1AD"
    },
    "419": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "420": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "421": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "423": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP1",
      "path": "35"
    },
    "424": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "425": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "426": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "428": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "REVERT",
      "path": "35"
    },
    "429": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "430": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "POP",
      "path": "35"
    },
    "431": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "POP",
      "path": "35"
    },
    "432": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "POP",
      "path": "35"
    },
    "433": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "POP",
      "path": "35"
    },
    "434": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "436": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "437": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "438": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "440": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "NOT",
      "path": "35"
    },
    "441": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "443": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP3",
      "path": "35"
    },
    "444": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "ADD",
      "path": "35"
    },
    "445": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "AND",
      "path": "35"
    },
    "446": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP3",
      "path": "35"
    },
    "447": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "ADD",
      "path": "35"
    },
    "448": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP1",
      "path": "35"
    },
    "449": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "451": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "452": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "POP",
      "path": "35"
    },
    "453": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "DUP2",
      "path": "35"
    },
    "454": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "ADD",
      "path": "35"
    },
    "455": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "456": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x1D1"
    },
    "459": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "460": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "461": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5FF"
    },
    "464": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1031,
        1065
      ],
      "op": "JUMP",
      "path": "35"
    },
    "465": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1031,
        1065
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "466": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1012,
        1065
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "467": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1012,
        1065
      ],
      "op": "POP",
      "path": "35"
    },
    "468": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1076,
        1083
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "470": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1085,
        1092
      ],
      "op": "DUP1",
      "path": "35"
    },
    "471": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1113,
        1117
      ],
      "op": "DUP7",
      "path": "35"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "op": "SUB"
    },
    "480": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1130
      ],
      "op": "AND",
      "path": "35"
    },
    "481": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1130
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0x902F1AC"
    },
    "486": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "488": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "489": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP2",
      "path": "35"
    },
    "490": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xFFFFFFFF"
    },
    "495": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "AND",
      "path": "35"
    },
    "496": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xE0"
    },
    "498": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "SHL",
      "path": "35"
    },
    "499": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP2",
      "path": "35"
    },
    "500": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "501": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "503": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "ADD",
      "path": "35"
    },
    "504": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x60"
    },
    "506": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "508": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "509": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP1",
      "path": "35"
    },
    "510": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP4",
      "path": "35"
    },
    "511": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "SUB",
      "path": "35"
    },
    "512": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP2",
      "path": "35"
    },
    "513": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP7",
      "path": "35"
    },
    "514": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "GAS",
      "path": "35"
    },
    "515": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "STATICCALL",
      "path": "35"
    },
    "516": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "517": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP1",
      "path": "35"
    },
    "518": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "519": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x214"
    },
    "522": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "523": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "524": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "526": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP1",
      "path": "35"
    },
    "527": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "528": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "529": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "531": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "REVERT",
      "path": "35"
    },
    "532": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "533": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "POP",
      "path": "35"
    },
    "534": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "POP",
      "path": "35"
    },
    "535": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "POP",
      "path": "35"
    },
    "536": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "POP",
      "path": "35"
    },
    "537": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "539": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "540": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "541": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "543": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "NOT",
      "path": "35"
    },
    "544": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "546": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP3",
      "path": "35"
    },
    "547": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "ADD",
      "path": "35"
    },
    "548": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "AND",
      "path": "35"
    },
    "549": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP3",
      "path": "35"
    },
    "550": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "ADD",
      "path": "35"
    },
    "551": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP1",
      "path": "35"
    },
    "552": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "554": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "555": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "POP",
      "path": "35"
    },
    "556": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "DUP2",
      "path": "35"
    },
    "557": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "ADD",
      "path": "35"
    },
    "558": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "559": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x238"
    },
    "562": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "563": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "564": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x634"
    },
    "567": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1098,
        1132
      ],
      "op": "JUMP",
      "path": "35"
    },
    "568": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1098,
        1132
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "op": "SUB"
    },
    "578": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "579": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "DUP3",
      "path": "35"
    },
    "580": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "AND",
      "path": "35"
    },
    "581": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "SWAP4",
      "path": "35"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "AND",
      "path": "35"
    },
    "584": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "585": {
      "op": "POP"
    },
    "586": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1143,
        1153
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "588": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1156,
        1201
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x267"
    },
    "591": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1189,
        1200
      ],
      "op": "DUP5",
      "path": "35"
    },
    "592": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1156,
        1183
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x261"
    },
    "595": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1172,
        1182
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x25C"
    },
    "598": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "DUP7",
      "path": "35"
    },
    "599": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1075,
        1132
      ],
      "op": "DUP7",
      "path": "35"
    },
    "600": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1172,
        1178
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3F5"
    },
    "603": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1172,
        1182
      ],
      "op": "JUMP",
      "path": "35"
    },
    "604": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1172,
        1182
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "605": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1156,
        1171
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x408"
    },
    "608": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1156,
        1183
      ],
      "op": "JUMP",
      "path": "35"
    },
    "609": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1156,
        1183
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "610": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1156,
        1188
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "611": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1156,
        1188
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x586"
    },
    "614": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1156,
        1201
      ],
      "op": "JUMP",
      "path": "35"
    },
    "615": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1156,
        1201
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "616": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "618": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "619": {
      "op": "PUSH4",
      "value": "0x534333F"
    },
    "624": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "626": {
      "op": "SHL"
    },
    "627": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP2",
      "path": "35"
    },
    "628": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "635": {
      "op": "SHL"
    },
    "636": {
      "op": "SUB"
    },
    "637": {
      "op": "DUP9"
    },
    "638": {
      "op": "DUP2"
    },
    "639": {
      "op": "AND"
    },
    "640": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "642": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP4",
      "path": "35"
    },
    "643": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "ADD",
      "path": "35"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1301,
        1305
      ],
      "op": "PUSH8",
      "path": "35",
      "value": "0xDE0B6B3A7640000"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "656": {
      "op": "DUP4"
    },
    "657": {
      "op": "ADD"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1143,
        1201
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "660": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1143,
        1201
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1225,
        1233
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "664": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1225,
        1233
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "665": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1253,
        1275
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x0"
    },
    "698": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1292
      ],
      "op": "AND",
      "path": "35"
    },
    "699": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1292
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "700": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1292
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xA68667E"
    },
    "705": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1292
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "706": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "708": {
      "op": "ADD"
    },
    "709": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "711": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "713": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "714": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP1",
      "path": "35"
    },
    "715": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP4",
      "path": "35"
    },
    "716": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "SUB",
      "path": "35"
    },
    "717": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP2",
      "path": "35"
    },
    "718": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP7",
      "path": "35"
    },
    "719": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "GAS",
      "path": "35"
    },
    "720": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "STATICCALL",
      "path": "35"
    },
    "721": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "722": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP1",
      "path": "35"
    },
    "723": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "724": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x2E1"
    },
    "727": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "728": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "729": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "731": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP1",
      "path": "35"
    },
    "732": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "733": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "734": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "736": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "REVERT",
      "path": "35"
    },
    "737": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "738": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "POP",
      "path": "35"
    },
    "739": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "POP",
      "path": "35"
    },
    "740": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "POP",
      "path": "35"
    },
    "741": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "POP",
      "path": "35"
    },
    "742": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "744": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "745": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "746": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "748": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "NOT",
      "path": "35"
    },
    "749": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "751": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP3",
      "path": "35"
    },
    "752": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "ADD",
      "path": "35"
    },
    "753": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "AND",
      "path": "35"
    },
    "754": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP3",
      "path": "35"
    },
    "755": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "ADD",
      "path": "35"
    },
    "756": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP1",
      "path": "35"
    },
    "757": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "759": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "760": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "POP",
      "path": "35"
    },
    "761": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "DUP2",
      "path": "35"
    },
    "762": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "ADD",
      "path": "35"
    },
    "763": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "764": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x305"
    },
    "767": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "768": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "769": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5FF"
    },
    "772": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1236,
        1306
      ],
      "op": "JUMP",
      "path": "35"
    },
    "773": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1236,
        1306
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "774": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "776": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "777": {
      "op": "PUSH4",
      "value": "0x534333F"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP2",
      "path": "35"
    },
    "786": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "793": {
      "op": "SHL"
    },
    "794": {
      "op": "SUB"
    },
    "795": {
      "op": "DUP9"
    },
    "796": {
      "op": "DUP2"
    },
    "797": {
      "op": "AND"
    },
    "798": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "800": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP4",
      "path": "35"
    },
    "801": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "ADD",
      "path": "35"
    },
    "802": {
      "op": "MSTORE"
    },
    "803": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1392,
        1396
      ],
      "op": "PUSH8",
      "path": "35",
      "value": "0xDE0B6B3A7640000"
    },
    "812": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "814": {
      "op": "DUP4"
    },
    "815": {
      "op": "ADD"
    },
    "816": {
      "op": "MSTORE"
    },
    "817": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1225,
        1306
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "818": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1225,
        1306
      ],
      "op": "SWAP3",
      "path": "35"
    },
    "819": {
      "op": "POP"
    },
    "820": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1316,
        1324
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "822": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1316,
        1324
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "823": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1344,
        1366
      ],
      "op": "PUSH32",
      "path": "35",
      "value": "0x0"
    },
    "856": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1383
      ],
      "op": "AND",
      "path": "35"
    },
    "857": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1383
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "858": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1383
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xA68667E"
    },
    "863": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1383
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "866": {
      "op": "ADD"
    },
    "867": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x20"
    },
    "869": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "871": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "872": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP1",
      "path": "35"
    },
    "873": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP4",
      "path": "35"
    },
    "874": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "SUB",
      "path": "35"
    },
    "875": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP2",
      "path": "35"
    },
    "876": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP7",
      "path": "35"
    },
    "877": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "GAS",
      "path": "35"
    },
    "878": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "STATICCALL",
      "path": "35"
    },
    "879": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "880": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP1",
      "path": "35"
    },
    "881": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "882": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x37F"
    },
    "885": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "886": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "887": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "889": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP1",
      "path": "35"
    },
    "890": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "RETURNDATACOPY",
      "path": "35"
    },
    "891": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "892": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "894": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "REVERT",
      "path": "35"
    },
    "895": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "896": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "POP",
      "path": "35"
    },
    "897": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "POP",
      "path": "35"
    },
    "898": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "POP",
      "path": "35"
    },
    "899": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "POP",
      "path": "35"
    },
    "900": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "902": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "903": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "RETURNDATASIZE",
      "path": "35"
    },
    "904": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "906": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "NOT",
      "path": "35"
    },
    "907": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x1F"
    },
    "909": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP3",
      "path": "35"
    },
    "910": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "ADD",
      "path": "35"
    },
    "911": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "AND",
      "path": "35"
    },
    "912": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP3",
      "path": "35"
    },
    "913": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "ADD",
      "path": "35"
    },
    "914": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP1",
      "path": "35"
    },
    "915": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "917": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "918": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "POP",
      "path": "35"
    },
    "919": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "DUP2",
      "path": "35"
    },
    "920": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "ADD",
      "path": "35"
    },
    "921": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "922": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3A3"
    },
    "925": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "926": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "927": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5FF"
    },
    "930": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1327,
        1397
      ],
      "op": "JUMP",
      "path": "35"
    },
    "931": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1327,
        1397
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "932": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1316,
        1397
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "933": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1316,
        1397
      ],
      "op": "POP",
      "path": "35"
    },
    "934": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1407,
        1426
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "936": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1515
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3E6"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1504
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3E0"
    },
    "947": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1483,
        1503
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3BB"
    },
    "950": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1499,
        1502
      ],
      "op": "DUP6",
      "path": "35"
    },
    "951": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1483,
        1498
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x408"
    },
    "954": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1483,
        1503
      ],
      "op": "JUMP",
      "path": "35"
    },
    "955": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1483,
        1503
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "956": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1478
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3DA"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "963": {
      "op": "SHL"
    },
    "964": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1467
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3E0"
    },
    "967": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1446,
        1466
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3CF"
    },
    "970": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1462,
        1465
      ],
      "op": "DUP11",
      "path": "35"
    },
    "971": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1446,
        1461
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x408"
    },
    "974": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1446,
        1466
      ],
      "op": "JUMP",
      "path": "35"
    },
    "975": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1446,
        1466
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "976": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1441
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3DA"
    },
    "979": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1434
      ],
      "op": "DUP13",
      "path": "35"
    },
    "980": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1439,
        1440
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2"
    },
    "982": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1438
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3F5"
    },
    "985": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1429,
        1441
      ],
      "op": "JUMP",
      "path": "35"
    },
    "986": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1441
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "987": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1445
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "988": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1445
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x3F5"
    },
    "991": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1429,
        1467
      ],
      "op": "JUMP",
      "path": "35"
    },
    "992": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1467
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "993": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1471
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "994": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1471
      ],
      "op": "PUSH2",
      "path": "35",
      "value": "0x5A1"
    },
    "997": {
      "fn": "LPPriceCalculator.getData",
      "jump": "i",
      "offset": [
        1429,
        1478
      ],
      "op": "JUMP",
      "path": "35"
    },
    "998": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1429,
        1515
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "999": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        1407,
        1515
      ],
      "op": "SWAP12",
      "path": "35"
    },
    "1000": {
      "fn": "LPPriceCalculator.getData",
      "offset": [
        818,
        1554
      ],
      "op": "SWAP11",
      "path": "35"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "op": "POP"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "op": "POP"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "POP"
    },
    "1010": {
      "op": "POP"
    },
    "1011": {
      "op": "POP"
    },
    "1012": {
      "fn": "LPPriceCalculator.getData",
      "jump": "o",
      "offset": [
        818,
        1554
      ],
      "op": "JUMP",
      "path": "35"
    },
    "1013": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1014": {
      "fn": "SafeMath.mul",
      "offset": [
        3509,
        3516
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1016": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 0,
      "value": "0x401"
    },
    "1019": {
      "fn": "SafeMath.mul",
      "offset": [
        3539,
        3540
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1020": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3536
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1021": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x69A"
    },
    "1024": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1025": {
      "fn": "SafeMath.mul",
      "offset": [
        3535,
        3540
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1026": {
      "fn": "SafeMath.mul",
      "offset": [
        3528,
        3540
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "1027": {
      "fn": "SafeMath.mul",
      "offset": [
        3451,
        3547
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "1028": {
      "op": "POP"
    },
    "1029": {
      "op": "POP"
    },
    "1030": {
      "op": "POP"
    },
    "1031": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3451,
        3547
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1032": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        762,
        1795
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1033": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        807,
        811
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1035": {
      "branch": 25,
      "fn": "HomoraMath.sqrt",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1036": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        823,
        843
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x417"
    },
    "1039": {
      "branch": 25,
      "fn": "HomoraMath.sqrt",
      "offset": [
        823,
        843
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        842,
        843
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 1,
      "value": "0x0"
    },
    "1043": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        842,
        843
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1044": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        762,
        1795
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1045": {
      "op": "POP"
    },
    "1046": {
      "fn": "HomoraMath.sqrt",
      "jump": "o",
      "offset": [
        762,
        1795
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1047": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        823,
        843
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1048": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        863,
        864
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1049": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        883,
        884
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        899,
        940
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1057": {
      "branch": 26,
      "fn": "HomoraMath.sqrt",
      "offset": [
        899,
        940
      ],
      "op": "LT",
      "path": "34"
    },
    "1058": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        895,
        999
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x430"
    },
    "1061": {
      "branch": 26,
      "fn": "HomoraMath.sqrt",
      "offset": [
        895,
        999
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1062": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        963,
        966
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 2,
      "value": "0x80"
    },
    "1064": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        956,
        966
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1065": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        956,
        966
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1066": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        956,
        966
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1067": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        956,
        966
      ],
      "op": "SHR",
      "path": "34"
    },
    "1068": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        956,
        966
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1069": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        986,
        988
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 3,
      "value": "0x40"
    },
    "1071": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        980,
        988
      ],
      "op": "SHL",
      "path": "34"
    },
    "1072": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        895,
        999
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1073": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1019,
        1038
      ],
      "op": "PUSH9",
      "path": "34",
      "value": "0x10000000000000000"
    },
    "1083": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1013,
        1015
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1084": {
      "branch": 27,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1013,
        1038
      ],
      "op": "LT",
      "path": "34"
    },
    "1085": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1009,
        1096
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x44B"
    },
    "1088": {
      "branch": 27,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1009,
        1096
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1089": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1061,
        1063
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 4,
      "value": "0x40"
    },
    "1091": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1054,
        1063
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1092": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1054,
        1063
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1093": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1054,
        1063
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1094": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1054,
        1063
      ],
      "op": "SHR",
      "path": "34"
    },
    "1095": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1054,
        1063
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1096": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1083,
        1085
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 5,
      "value": "0x20"
    },
    "1098": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1077,
        1085
      ],
      "op": "SHL",
      "path": "34"
    },
    "1099": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1009,
        1096
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1100": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1115,
        1126
      ],
      "op": "PUSH5",
      "path": "34",
      "value": "0x100000000"
    },
    "1106": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1109,
        1111
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1107": {
      "branch": 28,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1109,
        1126
      ],
      "op": "LT",
      "path": "34"
    },
    "1108": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1105,
        1184
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x462"
    },
    "1111": {
      "branch": 28,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1105,
        1184
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1112": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1149,
        1151
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 6,
      "value": "0x20"
    },
    "1114": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1142,
        1151
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1115": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1142,
        1151
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1116": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1142,
        1151
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1117": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1142,
        1151
      ],
      "op": "SHR",
      "path": "34"
    },
    "1118": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1142,
        1151
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1119": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1171,
        1173
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 7,
      "value": "0x10"
    },
    "1121": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1165,
        1173
      ],
      "op": "SHL",
      "path": "34"
    },
    "1122": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1105,
        1184
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1123": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1203,
        1210
      ],
      "op": "PUSH3",
      "path": "34",
      "value": "0x10000"
    },
    "1127": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1197,
        1199
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1128": {
      "branch": 29,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1197,
        1210
      ],
      "op": "LT",
      "path": "34"
    },
    "1129": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1193,
        1267
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x477"
    },
    "1132": {
      "branch": 29,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1193,
        1267
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1133": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1233,
        1235
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 8,
      "value": "0x10"
    },
    "1135": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1226,
        1235
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1136": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1226,
        1235
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1137": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1226,
        1235
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1138": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1226,
        1235
      ],
      "op": "SHR",
      "path": "34"
    },
    "1139": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1226,
        1235
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1140": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1255,
        1256
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 9,
      "value": "0x8"
    },
    "1142": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1249,
        1256
      ],
      "op": "SHL",
      "path": "34"
    },
    "1143": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1193,
        1267
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1144": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1286,
        1291
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x100"
    },
    "1147": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1280,
        1282
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1148": {
      "branch": 30,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1280,
        1291
      ],
      "op": "LT",
      "path": "34"
    },
    "1149": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1276,
        1347
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x48B"
    },
    "1152": {
      "branch": 30,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1276,
        1347
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1153": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1314,
        1315
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 10,
      "value": "0x8"
    },
    "1155": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1307,
        1315
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1156": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1307,
        1315
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1157": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1307,
        1315
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1158": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1307,
        1315
      ],
      "op": "SHR",
      "path": "34"
    },
    "1159": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1307,
        1315
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1160": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1335,
        1336
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 11,
      "value": "0x4"
    },
    "1162": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1329,
        1336
      ],
      "op": "SHL",
      "path": "34"
    },
    "1163": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1276,
        1347
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1164": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1366,
        1370
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x10"
    },
    "1166": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1360,
        1362
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1167": {
      "branch": 31,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1360,
        1370
      ],
      "op": "LT",
      "path": "34"
    },
    "1168": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1356,
        1426
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x49E"
    },
    "1171": {
      "branch": 31,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1356,
        1426
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1172": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1393,
        1394
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 12,
      "value": "0x4"
    },
    "1174": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1386,
        1394
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1175": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1386,
        1394
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1176": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1386,
        1394
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1177": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1386,
        1394
      ],
      "op": "SHR",
      "path": "34"
    },
    "1178": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1386,
        1394
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1179": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1414,
        1415
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 13,
      "value": "0x2"
    },
    "1181": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1408,
        1415
      ],
      "op": "SHL",
      "path": "34"
    },
    "1182": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1356,
        1426
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1183": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1445,
        1448
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x8"
    },
    "1185": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1439,
        1441
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1186": {
      "branch": 32,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1439,
        1448
      ],
      "op": "LT",
      "path": "34"
    },
    "1187": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1435,
        1482
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4AA"
    },
    "1190": {
      "branch": 32,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1435,
        1482
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1191": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1470,
        1471
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 14,
      "value": "0x1"
    },
    "1193": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1464,
        1471
      ],
      "op": "SHL",
      "path": "34"
    },
    "1194": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1435,
        1482
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1195": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1511,
        1512
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 15,
      "value": "0x1"
    },
    "1197": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1501,
        1506
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4B6"
    },
    "1200": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1505,
        1506
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1201": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1501,
        1502
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1202": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1501,
        1506
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1205": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1501,
        1506
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1206": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1501,
        1506
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1207": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1497,
        1506
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4C0"
    },
    "1210": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1497,
        1506
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1211": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1497,
        1498
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1212": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1497,
        1506
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6DB"
    },
    "1215": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1497,
        1506
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1216": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1497,
        1506
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1217": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1496,
        1512
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1218": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1496,
        1512
      ],
      "op": "SHR",
      "path": "34"
    },
    "1219": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1496,
        1512
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1541,
        1542
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 16,
      "value": "0x1"
    },
    "1223": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1531,
        1536
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4D0"
    },
    "1226": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1496,
        1512
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1227": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1531,
        1532
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1228": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1531,
        1536
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1231": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1531,
        1536
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1232": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1531,
        1536
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1233": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1527,
        1536
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4DA"
    },
    "1236": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1527,
        1536
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1237": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1527,
        1528
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1238": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1527,
        1536
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6DB"
    },
    "1241": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1527,
        1536
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1242": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1527,
        1536
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1243": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1526,
        1542
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1244": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1526,
        1542
      ],
      "op": "SHR",
      "path": "34"
    },
    "1245": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1526,
        1542
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1571,
        1572
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 17,
      "value": "0x1"
    },
    "1249": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1561,
        1566
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4EA"
    },
    "1252": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1526,
        1542
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1253": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1561,
        1562
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1254": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1561,
        1566
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1257": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1561,
        1566
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1258": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1561,
        1566
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1259": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1557,
        1566
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x4F4"
    },
    "1262": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1557,
        1566
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1263": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1557,
        1558
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1264": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1557,
        1566
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6DB"
    },
    "1267": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1557,
        1566
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1268": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1557,
        1566
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1269": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1556,
        1572
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1270": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1556,
        1572
      ],
      "op": "SHR",
      "path": "34"
    },
    "1271": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1556,
        1572
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1272": {
      "op": "POP"
    },
    "1273": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1601,
        1602
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 18,
      "value": "0x1"
    },
    "1275": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1591,
        1596
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x504"
    },
    "1278": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1556,
        1572
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1279": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1591,
        1592
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1280": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1591,
        1596
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1283": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1591,
        1596
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1284": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1591,
        1596
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1285": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1587,
        1596
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x50E"
    },
    "1288": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1587,
        1596
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1289": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1587,
        1588
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1290": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1587,
        1596
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6DB"
    },
    "1293": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1587,
        1596
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1294": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1587,
        1596
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1295": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1586,
        1602
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1296": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1586,
        1602
      ],
      "op": "SHR",
      "path": "34"
    },
    "1297": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1586,
        1602
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1298": {
      "op": "POP"
    },
    "1299": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1631,
        1632
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 19,
      "value": "0x1"
    },
    "1301": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1621,
        1626
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x51E"
    },
    "1304": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1586,
        1602
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1305": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1621,
        1622
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1306": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1621,
        1626
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1309": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1621,
        1626
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1310": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1621,
        1626
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1311": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1617,
        1626
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x528"
    },
    "1314": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1617,
        1626
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1315": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1617,
        1618
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1316": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1617,
        1626
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6DB"
    },
    "1319": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1617,
        1626
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1320": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1617,
        1626
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1321": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1616,
        1632
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1322": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1616,
        1632
      ],
      "op": "SHR",
      "path": "34"
    },
    "1323": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1616,
        1632
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1661,
        1662
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 20,
      "value": "0x1"
    },
    "1327": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1651,
        1656
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x538"
    },
    "1330": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1616,
        1632
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1331": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1651,
        1652
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1332": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1651,
        1656
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1335": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1651,
        1656
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1336": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1651,
        1656
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1337": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1647,
        1656
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x542"
    },
    "1340": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1647,
        1656
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1341": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1647,
        1648
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1342": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1647,
        1656
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6DB"
    },
    "1345": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1647,
        1656
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1346": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1647,
        1656
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1347": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1646,
        1662
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1348": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1646,
        1662
      ],
      "op": "SHR",
      "path": "34"
    },
    "1349": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1646,
        1662
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1350": {
      "op": "POP"
    },
    "1351": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1691,
        1692
      ],
      "op": "PUSH1",
      "path": "34",
      "statement": 21,
      "value": "0x1"
    },
    "1353": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1681,
        1686
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x552"
    },
    "1356": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1646,
        1662
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1357": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1681,
        1682
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1358": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1681,
        1686
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1361": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1681,
        1686
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1362": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1681,
        1686
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1363": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1677,
        1686
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x55C"
    },
    "1366": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1677,
        1686
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1367": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1677,
        1678
      ],
      "op": "DUP4",
      "path": "34"
    },
    "1368": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1677,
        1686
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6DB"
    },
    "1371": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1677,
        1686
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1372": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1677,
        1686
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1373": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1676,
        1692
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1374": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1676,
        1692
      ],
      "op": "SHR",
      "path": "34"
    },
    "1375": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1676,
        1692
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1376": {
      "op": "POP"
    },
    "1377": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1739,
        1746
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1379": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1749,
        1754
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x56C"
    },
    "1382": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1676,
        1692
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1383": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1749,
        1750
      ],
      "op": "DUP7",
      "path": "34"
    },
    "1384": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1749,
        1754
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1387": {
      "fn": "HomoraMath.sqrt",
      "jump": "i",
      "offset": [
        1749,
        1754
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1388": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1749,
        1754
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1389": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1739,
        1754
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1390": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1739,
        1754
      ],
      "op": "POP",
      "path": "34"
    },
    "1391": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1776,
        1778
      ],
      "op": "DUP1",
      "path": "34",
      "statement": 22
    },
    "1392": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1773
      ],
      "op": "DUP3",
      "path": "34"
    },
    "1393": {
      "branch": 33,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1778
      ],
      "op": "LT",
      "path": "34"
    },
    "1394": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1787
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x57B"
    },
    "1397": {
      "branch": 33,
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1787
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "1398": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1785,
        1787
      ],
      "op": "DUP1",
      "path": "34"
    },
    "1399": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1787
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x57D"
    },
    "1402": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1787
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1403": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1787
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1404": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1781,
        1782
      ],
      "op": "DUP2",
      "path": "34"
    },
    "1405": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1772,
        1787
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1406": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        1764,
        1788
      ],
      "op": "SWAP6",
      "path": "34"
    },
    "1407": {
      "fn": "HomoraMath.sqrt",
      "offset": [
        762,
        1795
      ],
      "op": "SWAP5",
      "path": "34"
    },
    "1408": {
      "op": "POP"
    },
    "1409": {
      "op": "POP"
    },
    "1410": {
      "op": "POP"
    },
    "1411": {
      "op": "POP"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "fn": "HomoraMath.sqrt",
      "jump": "o",
      "offset": [
        762,
        1795
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1414": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        408,
        516
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1415": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        465,
        469
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "1417": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        506,
        509
      ],
      "op": "DUP2",
      "path": "34",
      "statement": 23
    },
    "1418": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        503
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x597"
    },
    "1421": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        491
      ],
      "op": "DUP5",
      "path": "34"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1426": {
      "op": "SHL"
    },
    "1427": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        495
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3F5"
    },
    "1430": {
      "fn": "HomoraMath.fdiv",
      "jump": "i",
      "offset": [
        488,
        503
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1431": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        503
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "1432": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        509
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x401"
    },
    "1435": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        509
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "1436": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        509
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "1437": {
      "fn": "HomoraMath.fdiv",
      "offset": [
        488,
        509
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x6B9"
    },
    "1440": {
      "fn": "HomoraMath.fdiv",
      "jump": "i",
      "offset": [
        488,
        509
      ],
      "op": "JUMP",
      "path": "34"
    },
    "1441": {
      "fn": "SafeMath.div",
      "offset": [
        3836,
        3932
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1442": {
      "fn": "SafeMath.div",
      "offset": [
        3894,
        3901
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1444": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "19",
      "statement": 24,
      "value": "0x401"
    },
    "1447": {
      "fn": "SafeMath.div",
      "offset": [
        3924,
        3925
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1448": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3921
      ],
      "op": "DUP5",
      "path": "19"
    },
    "1449": {
      "fn": "SafeMath.div",
      "offset": [
        3920,
        3925
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x6B9"
    },
    "1452": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3920,
        3925
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "SUB"
    },
    "1462": {
      "op": "DUP2"
    },
    "1463": {
      "op": "AND"
    },
    "1464": {
      "op": "DUP2"
    },
    "1465": {
      "op": "EQ"
    },
    "1466": {
      "op": "PUSH2",
      "value": "0x5C2"
    },
    "1469": {
      "op": "JUMPI"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1472": {
      "op": "DUP1"
    },
    "1473": {
      "op": "REVERT"
    },
    "1474": {
      "op": "JUMPDEST"
    },
    "1475": {
      "op": "POP"
    },
    "1476": {
      "jump": "o",
      "op": "JUMP"
    },
    "1477": {
      "op": "JUMPDEST"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1482": {
      "op": "DUP3"
    },
    "1483": {
      "op": "DUP5"
    },
    "1484": {
      "op": "SUB"
    },
    "1485": {
      "op": "SLT"
    },
    "1486": {
      "op": "ISZERO"
    },
    "1487": {
      "op": "PUSH2",
      "value": "0x5D7"
    },
    "1490": {
      "op": "JUMPI"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1493": {
      "op": "DUP1"
    },
    "1494": {
      "op": "REVERT"
    },
    "1495": {
      "op": "JUMPDEST"
    },
    "1496": {
      "op": "DUP2"
    },
    "1497": {
      "op": "CALLDATALOAD"
    },
    "1498": {
      "op": "PUSH2",
      "value": "0x401"
    },
    "1501": {
      "op": "DUP2"
    },
    "1502": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1505": {
      "jump": "i",
      "op": "JUMP"
    },
    "1506": {
      "op": "JUMPDEST"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1511": {
      "op": "DUP3"
    },
    "1512": {
      "op": "DUP5"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "op": "SLT"
    },
    "1515": {
      "op": "ISZERO"
    },
    "1516": {
      "op": "PUSH2",
      "value": "0x5F4"
    },
    "1519": {
      "op": "JUMPI"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1522": {
      "op": "DUP1"
    },
    "1523": {
      "op": "REVERT"
    },
    "1524": {
      "op": "JUMPDEST"
    },
    "1525": {
      "op": "DUP2"
    },
    "1526": {
      "op": "MLOAD"
    },
    "1527": {
      "op": "PUSH2",
      "value": "0x401"
    },
    "1530": {
      "op": "DUP2"
    },
    "1531": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1534": {
      "jump": "i",
      "op": "JUMP"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1540": {
      "op": "DUP3"
    },
    "1541": {
      "op": "DUP5"
    },
    "1542": {
      "op": "SUB"
    },
    "1543": {
      "op": "SLT"
    },
    "1544": {
      "op": "ISZERO"
    },
    "1545": {
      "op": "PUSH2",
      "value": "0x611"
    },
    "1548": {
      "op": "JUMPI"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1551": {
      "op": "DUP1"
    },
    "1552": {
      "op": "REVERT"
    },
    "1553": {
      "op": "JUMPDEST"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "op": "MLOAD"
    },
    "1556": {
      "op": "SWAP2"
    },
    "1557": {
      "op": "SWAP1"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "jump": "o",
      "op": "JUMP"
    },
    "1560": {
      "op": "JUMPDEST"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "MLOAD"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "1569": {
      "op": "SHL"
    },
    "1570": {
      "op": "SUB"
    },
    "1571": {
      "op": "DUP2"
    },
    "1572": {
      "op": "AND"
    },
    "1573": {
      "op": "DUP2"
    },
    "1574": {
      "op": "EQ"
    },
    "1575": {
      "op": "PUSH2",
      "value": "0x62F"
    },
    "1578": {
      "op": "JUMPI"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1581": {
      "op": "DUP1"
    },
    "1582": {
      "op": "REVERT"
    },
    "1583": {
      "op": "JUMPDEST"
    },
    "1584": {
      "op": "SWAP2"
    },
    "1585": {
      "op": "SWAP1"
    },
    "1586": {
      "op": "POP"
    },
    "1587": {
      "jump": "o",
      "op": "JUMP"
    },
    "1588": {
      "op": "JUMPDEST"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1591": {
      "op": "DUP1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1596": {
      "op": "DUP5"
    },
    "1597": {
      "op": "DUP7"
    },
    "1598": {
      "op": "SUB"
    },
    "1599": {
      "op": "SLT"
    },
    "1600": {
      "op": "ISZERO"
    },
    "1601": {
      "op": "PUSH2",
      "value": "0x649"
    },
    "1604": {
      "op": "JUMPI"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1607": {
      "op": "DUP1"
    },
    "1608": {
      "op": "REVERT"
    },
    "1609": {
      "op": "JUMPDEST"
    },
    "1610": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1613": {
      "op": "DUP5"
    },
    "1614": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1617": {
      "jump": "i",
      "op": "JUMP"
    },
    "1618": {
      "op": "JUMPDEST"
    },
    "1619": {
      "op": "SWAP3"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "PUSH2",
      "value": "0x660"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1626": {
      "op": "DUP6"
    },
    "1627": {
      "op": "ADD"
    },
    "1628": {
      "op": "PUSH2",
      "value": "0x618"
    },
    "1631": {
      "jump": "i",
      "op": "JUMP"
    },
    "1632": {
      "op": "JUMPDEST"
    },
    "1633": {
      "op": "SWAP2"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1637": {
      "op": "DUP5"
    },
    "1638": {
      "op": "ADD"
    },
    "1639": {
      "op": "MLOAD"
    },
    "1640": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "1645": {
      "op": "DUP2"
    },
    "1646": {
      "op": "AND"
    },
    "1647": {
      "op": "DUP2"
    },
    "1648": {
      "op": "EQ"
    },
    "1649": {
      "op": "PUSH2",
      "value": "0x679"
    },
    "1652": {
      "op": "JUMPI"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1655": {
      "op": "DUP1"
    },
    "1656": {
      "op": "REVERT"
    },
    "1657": {
      "op": "JUMPDEST"
    },
    "1658": {
      "op": "DUP1"
    },
    "1659": {
      "op": "SWAP2"
    },
    "1660": {
      "op": "POP"
    },
    "1661": {
      "op": "POP"
    },
    "1662": {
      "op": "SWAP3"
    },
    "1663": {
      "op": "POP"
    },
    "1664": {
      "op": "SWAP3"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "op": "SWAP3"
    },
    "1667": {
      "jump": "o",
      "op": "JUMP"
    },
    "1668": {
      "op": "JUMPDEST"
    },
    "1669": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1676": {
      "op": "SHL"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1679": {
      "op": "MSTORE"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1689": {
      "op": "REVERT"
    },
    "1690": {
      "op": "JUMPDEST"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1693": {
      "op": "DUP2"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1696": {
      "op": "NOT"
    },
    "1697": {
      "op": "DIV"
    },
    "1698": {
      "op": "DUP4"
    },
    "1699": {
      "op": "GT"
    },
    "1700": {
      "op": "DUP3"
    },
    "1701": {
      "op": "ISZERO"
    },
    "1702": {
      "op": "ISZERO"
    },
    "1703": {
      "op": "AND"
    },
    "1704": {
      "op": "ISZERO"
    },
    "1705": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "1708": {
      "op": "JUMPI"
    },
    "1709": {
      "op": "PUSH2",
      "value": "0x6B4"
    },
    "1712": {
      "op": "PUSH2",
      "value": "0x684"
    },
    "1715": {
      "jump": "i",
      "op": "JUMP"
    },
    "1716": {
      "op": "JUMPDEST"
    },
    "1717": {
      "op": "POP"
    },
    "1718": {
      "op": "MUL"
    },
    "1719": {
      "op": "SWAP1"
    },
    "1720": {
      "jump": "o",
      "op": "JUMP"
    },
    "1721": {
      "op": "JUMPDEST"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1724": {
      "op": "DUP3"
    },
    "1725": {
      "op": "PUSH2",
      "value": "0x6D6"
    },
    "1728": {
      "op": "JUMPI"
    },
    "1729": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1744": {
      "op": "MSTORE"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1749": {
      "op": "REVERT"
    },
    "1750": {
      "op": "JUMPDEST"
    },
    "1751": {
      "op": "POP"
    },
    "1752": {
      "op": "DIV"
    },
    "1753": {
      "op": "SWAP1"
    },
    "1754": {
      "jump": "o",
      "op": "JUMP"
    },
    "1755": {
      "op": "JUMPDEST"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1758": {
      "op": "DUP3"
    },
    "1759": {
      "op": "NOT"
    },
    "1760": {
      "op": "DUP3"
    },
    "1761": {
      "op": "GT"
    },
    "1762": {
      "op": "ISZERO"
    },
    "1763": {
      "op": "PUSH2",
      "value": "0x6EE"
    },
    "1766": {
      "op": "JUMPI"
    },
    "1767": {
      "op": "PUSH2",
      "value": "0x6EE"
    },
    "1770": {
      "op": "PUSH2",
      "value": "0x684"
    },
    "1773": {
      "jump": "i",
      "op": "JUMP"
    },
    "1774": {
      "op": "JUMPDEST"
    },
    "1775": {
      "op": "POP"
    },
    "1776": {
      "op": "ADD"
    },
    "1777": {
      "op": "SWAP1"
    },
    "1778": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "89ddd3232d2dca895f7f1da9195bed80e4c847e3",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport '../libraries/HomoraMath.sol';\nimport '../interfaces/IUniv2LikePair.sol';\nimport '../interfaces/IPriceCalculator.sol';\nimport '../interfaces/IPriceFeed.sol';\n\ncontract LPPriceCalculator is IPriceFeed {\n    using SafeMath for uint256;\n    using HomoraMath for uint256;\n\n    address public immutable priceCalculatorAddress;\n\n    constructor(address _priceCalculatorAddress) {\n        priceCalculatorAddress = _priceCalculatorAddress;\n    }\n\n    function getData(address pair) external view override returns (uint256) {\n        address token0 = IUniv2LikePair(pair).token0();\n        address token1 = IUniv2LikePair(pair).token1();\n        uint totalSupply = IUniv2LikePair(pair).totalSupply();\n        (uint r0, uint r1, ) = IUniv2LikePair(pair).getReserves();\n\n        uint sqrtK = HomoraMath.sqrt(r0.mul(r1)).fdiv(totalSupply);  // in 2**112\n        uint px0 = IPriceCalculator(priceCalculatorAddress).tokenPriceInUSD(token0, 1e18);\n        uint px1 = IPriceCalculator(priceCalculatorAddress).tokenPriceInUSD(token1, 1e18);\n        uint fairPriceInUSD = sqrtK.mul(2).mul(HomoraMath.sqrt(px0)).div(2**56).mul(HomoraMath.sqrt(px1)).div(2**56);\n\n        return fairPriceInUSD;\n    }\n}\n",
  "sourceMap": "534:1022:35:-:0;;;702:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;757:48:35;;;534:1022;;14:290:40;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:40;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:40:o;:::-;534:1022:35;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/priceOracle/LPPriceCalculator.sol",
  "type": "contract"
}