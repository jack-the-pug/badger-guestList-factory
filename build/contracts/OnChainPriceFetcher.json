{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_CURVE_ROUTER",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_SOLIDLY_ROUTER",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_QUOTE_USD_TOKEN",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CURVE_ROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTE_USD_DECIMAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTE_USD_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SOLIDLY_ROUTER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        }
      ],
      "name": "getCurveQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getData",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "priceInUSD",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        }
      ],
      "name": "getSolidlyQuote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fromToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toToken",
          "type": "address"
        }
      ],
      "name": "getUniV2Quote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "router",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        }
      ],
      "name": "updatePairRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "11": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "14": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "18": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
    "22": "contracts/interfaces/IBaseV1Router01.sol",
    "23": "contracts/interfaces/ICurveRouter.sol",
    "25": "contracts/interfaces/IPriceFeed.sol",
    "27": "contracts/interfaces/IUniv2LikeRouter01.sol",
    "38": "contracts/priceOracle/OnChainPriceFetcher.sol",
    "8": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/priceOracle/OnChainPriceFetcher.sol",
    "exportedSymbols": {
      "Context": [
        6746
      ],
      "IBaseV1Router01": [
        647
      ],
      "ICurveRouter": [
        677
      ],
      "IERC20": [
        5097
      ],
      "IERC20Metadata": [
        5514
      ],
      "IPriceFeed": [
        699
      ],
      "IUniv2LikeRouter01": [
        1249
      ],
      "Math": [
        5826
      ],
      "OnChainPriceFetcher": [
        4259
      ],
      "Ownable": [
        6240
      ],
      "route": [
        588
      ]
    },
    "id": 4260,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3807,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:38"
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3808,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4260,
        "sourceUnit": 6241,
        "src": "57:52:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 3809,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4260,
        "sourceUnit": 5515,
        "src": "110:75:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/qqsun/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 3810,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4260,
        "sourceUnit": 5827,
        "src": "186:53:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IPriceFeed.sol",
        "file": "../interfaces/IPriceFeed.sol",
        "id": 3811,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4260,
        "sourceUnit": 700,
        "src": "241:38:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IBaseV1Router01.sol",
        "file": "../interfaces/IBaseV1Router01.sol",
        "id": 3812,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4260,
        "sourceUnit": 648,
        "src": "280:43:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/IUniv2LikeRouter01.sol",
        "file": "../interfaces/IUniv2LikeRouter01.sol",
        "id": 3813,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4260,
        "sourceUnit": 1250,
        "src": "324:46:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/interfaces/ICurveRouter.sol",
        "file": "../interfaces/ICurveRouter.sol",
        "id": 3814,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4260,
        "sourceUnit": 678,
        "src": "371:40:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3815,
              "name": "IPriceFeed",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 699,
              "src": "445:10:38"
            },
            "id": 3816,
            "nodeType": "InheritanceSpecifier",
            "src": "445:10:38"
          },
          {
            "baseName": {
              "id": 3817,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6240,
              "src": "457:7:38"
            },
            "id": 3818,
            "nodeType": "InheritanceSpecifier",
            "src": "457:7:38"
          }
        ],
        "canonicalName": "OnChainPriceFetcher",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4259,
        "linearizedBaseContracts": [
          4259,
          6240,
          6746,
          699
        ],
        "name": "OnChainPriceFetcher",
        "nameLocation": "422:19:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "OnChainPriceFetcher.TokenPairInfo",
            "id": 3824,
            "members": [
              {
                "constant": false,
                "id": 3820,
                "mutability": "mutable",
                "name": "router",
                "nameLocation": "529:6:38",
                "nodeType": "VariableDeclaration",
                "scope": 3824,
                "src": "521:14:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3819,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "521:7:38",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3823,
                "mutability": "mutable",
                "name": "path",
                "nameLocation": "576:4:38",
                "nodeType": "VariableDeclaration",
                "scope": 3824,
                "src": "566:14:38",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 3821,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3822,
                  "nodeType": "ArrayTypeName",
                  "src": "566:9:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                    "typeString": "address[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenPairInfo",
            "nameLocation": "479:13:38",
            "nodeType": "StructDefinition",
            "scope": 4259,
            "src": "472:115:38",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e49b30da",
            "id": 3826,
            "mutability": "immutable",
            "name": "CURVE_ROUTER",
            "nameLocation": "618:12:38",
            "nodeType": "VariableDeclaration",
            "scope": 4259,
            "src": "593:37:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3825,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "593:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18645b43",
            "id": 3828,
            "mutability": "immutable",
            "name": "SOLIDLY_ROUTER",
            "nameLocation": "661:14:38",
            "nodeType": "VariableDeclaration",
            "scope": 4259,
            "src": "636:39:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3827,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "636:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3367fd2d",
            "id": 3830,
            "mutability": "immutable",
            "name": "QUOTE_USD_TOKEN",
            "nameLocation": "738:15:38",
            "nodeType": "VariableDeclaration",
            "scope": 4259,
            "src": "713:40:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3829,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bfe8933d",
            "id": 3832,
            "mutability": "immutable",
            "name": "QUOTE_USD_DECIMAL",
            "nameLocation": "784:17:38",
            "nodeType": "VariableDeclaration",
            "scope": 4259,
            "src": "759:42:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3831,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "759:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 3833,
              "nodeType": "StructuredDocumentation",
              "src": "808:34:38",
              "text": "@notice Info of each TokenPair"
            },
            "functionSelector": "7309142b",
            "id": 3838,
            "mutability": "mutable",
            "name": "pairRouter",
            "nameLocation": "885:10:38",
            "nodeType": "VariableDeclaration",
            "scope": 4259,
            "src": "847:48:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenPairInfo_$3824_storage_$",
              "typeString": "mapping(uint256 => struct OnChainPriceFetcher.TokenPairInfo)"
            },
            "typeName": {
              "id": 3837,
              "keyType": {
                "id": 3834,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "855:4:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "847:30:38",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenPairInfo_$3824_storage_$",
                "typeString": "mapping(uint256 => struct OnChainPriceFetcher.TokenPairInfo)"
              },
              "valueType": {
                "id": 3836,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3835,
                  "name": "TokenPairInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3824,
                  "src": "863:13:38"
                },
                "referencedDeclaration": 3824,
                "src": "863:13:38",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                  "typeString": "struct OnChainPriceFetcher.TokenPairInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3867,
              "nodeType": "Block",
              "src": "988:205:38",
              "statements": [
                {
                  "expression": {
                    "id": 3849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3847,
                      "name": "CURVE_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3826,
                      "src": "998:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3848,
                      "name": "_CURVE_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3840,
                      "src": "1013:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "998:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3850,
                  "nodeType": "ExpressionStatement",
                  "src": "998:28:38"
                },
                {
                  "expression": {
                    "id": 3853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3851,
                      "name": "SOLIDLY_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3828,
                      "src": "1036:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3852,
                      "name": "_SOLIDLY_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3842,
                      "src": "1053:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1036:32:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3854,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:32:38"
                },
                {
                  "expression": {
                    "id": 3857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3855,
                      "name": "QUOTE_USD_TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3830,
                      "src": "1078:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3856,
                      "name": "_QUOTE_USD_TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3844,
                      "src": "1096:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1078:34:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3858,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:34:38"
                },
                {
                  "expression": {
                    "id": 3865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3859,
                      "name": "QUOTE_USD_DECIMAL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3832,
                      "src": "1123:17:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3861,
                              "name": "_QUOTE_USD_TOKEN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3844,
                              "src": "1158:16:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3860,
                            "name": "IERC20Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5514,
                            "src": "1143:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$5514_$",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 3862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1143:32:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$5514",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 3863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5513,
                        "src": "1143:41:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 3864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1143:43:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1123:63:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3866,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:63:38"
                }
              ]
            },
            "id": 3868,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3840,
                  "mutability": "mutable",
                  "name": "_CURVE_ROUTER",
                  "nameLocation": "922:13:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3868,
                  "src": "914:21:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3842,
                  "mutability": "mutable",
                  "name": "_SOLIDLY_ROUTER",
                  "nameLocation": "945:15:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3868,
                  "src": "937:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3844,
                  "mutability": "mutable",
                  "name": "_QUOTE_USD_TOKEN",
                  "nameLocation": "970:16:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3868,
                  "src": "962:24:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "913:74:38"
            },
            "returnParameters": {
              "id": 3846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:38"
            },
            "scope": 4259,
            "src": "902:291:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              698
            ],
            "body": {
              "id": 3944,
              "nodeType": "Block",
              "src": "1273:664:38",
              "statements": [
                {
                  "assignments": [
                    3876
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3876,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1291:6:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3944,
                      "src": "1283:14:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3875,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1283:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3884,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 3877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1300:2:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3879,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3870,
                              "src": "1321:5:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3878,
                            "name": "IERC20Metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5514,
                            "src": "1306:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$5514_$",
                              "typeString": "type(contract IERC20Metadata)"
                            }
                          },
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1306:21:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$5514",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 3881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decimals",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5513,
                        "src": "1306:30:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                          "typeString": "function () view external returns (uint8)"
                        }
                      },
                      "id": 3882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1306:32:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1300:38:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1283:55:38"
                },
                {
                  "assignments": [
                    3886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3886,
                      "mutability": "mutable",
                      "name": "solidlyQuote",
                      "nameLocation": "1381:12:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3944,
                      "src": "1373:20:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3885,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1373:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3892,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3888,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "1412:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3889,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "1419:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3890,
                        "name": "QUOTE_USD_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3830,
                        "src": "1427:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3887,
                      "name": "getSolidlyQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4025,
                      "src": "1396:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 3891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:47:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1373:70:38"
                },
                {
                  "assignments": [
                    3894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3894,
                      "mutability": "mutable",
                      "name": "curveQuote",
                      "nameLocation": "1484:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3944,
                      "src": "1476:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3893,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1476:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3900,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3896,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "1511:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3897,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "1518:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3898,
                        "name": "QUOTE_USD_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3830,
                        "src": "1526:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3895,
                      "name": "getCurveQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4061,
                      "src": "1497:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) view returns (uint256)"
                      }
                    },
                    "id": 3899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1497:45:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1476:66:38"
                },
                {
                  "expression": {
                    "id": 3907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3901,
                      "name": "priceInUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3873,
                      "src": "1553:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3904,
                          "name": "curveQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3894,
                          "src": "1575:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 3905,
                          "name": "solidlyQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3886,
                          "src": "1587:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 3902,
                          "name": "Math",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5826,
                          "src": "1566:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Math_$5826_$",
                            "typeString": "type(library Math)"
                          }
                        },
                        "id": 3903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5759,
                        "src": "1566:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1566:34:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1553:47:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3908,
                  "nodeType": "ExpressionStatement",
                  "src": "1553:47:38"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 3936,
                        "nodeType": "Block",
                        "src": "1695:156:38",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3918,
                                "name": "uniV2Quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3916,
                                "src": "1713:10:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3919,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1726:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1713:14:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 3935,
                            "nodeType": "IfStatement",
                            "src": "1709:132:38",
                            "trueBody": {
                              "id": 3934,
                              "nodeType": "Block",
                              "src": "1729:112:38",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 3932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 3921,
                                      "name": "priceInUSD",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3873,
                                      "src": "1747:10:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3924,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 3922,
                                          "name": "priceInUSD",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3873,
                                          "src": "1760:10:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 3923,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "1773:1:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "1760:14:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "id": 3930,
                                        "name": "uniV2Quote",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3916,
                                        "src": "1816:10:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 3931,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "1760:66:38",
                                      "trueExpression": {
                                        "arguments": [
                                          {
                                            "id": 3927,
                                            "name": "priceInUSD",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3873,
                                            "src": "1790:10:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 3928,
                                            "name": "uniV2Quote",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3916,
                                            "src": "1802:10:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 3925,
                                            "name": "Math",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5826,
                                            "src": "1777:4:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_Math_$5826_$",
                                              "typeString": "type(library Math)"
                                            }
                                          },
                                          "id": 3926,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "average",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5800,
                                          "src": "1777:12:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 3929,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1777:36:38",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1747:79:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 3933,
                                  "nodeType": "ExpressionStatement",
                                  "src": "1747:79:38"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 3937,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 3917,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 3916,
                            "mutability": "mutable",
                            "name": "uniV2Quote",
                            "nameLocation": "1683:10:38",
                            "nodeType": "VariableDeclaration",
                            "scope": 3937,
                            "src": "1675:18:38",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3915,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1675:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1674:20:38"
                      },
                      "src": "1666:185:38"
                    },
                    {
                      "block": {
                        "id": 3941,
                        "nodeType": "Block",
                        "src": "1873:58:38",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 3942,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 3940,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 3939,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 3942,
                            "src": "1859:12:38",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 3938,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1859:5:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "1858:14:38"
                      },
                      "src": "1852:79:38"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 3911,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3870,
                        "src": "1634:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3912,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3876,
                        "src": "1641:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3913,
                        "name": "QUOTE_USD_TOKEN",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3830,
                        "src": "1649:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3909,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1615:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OnChainPriceFetcher_$4259",
                          "typeString": "contract OnChainPriceFetcher"
                        }
                      },
                      "id": 3910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getUniV2Quote",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3989,
                      "src": "1615:18:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) view external returns (uint256)"
                      }
                    },
                    "id": 3914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1615:50:38",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3943,
                  "nodeType": "TryStatement",
                  "src": "1611:320:38"
                }
              ]
            },
            "functionSelector": "38266b22",
            "id": 3945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getData",
            "nameLocation": "1208:7:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3870,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1224:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3945,
                  "src": "1216:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1216:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1215:15:38"
            },
            "returnParameters": {
              "id": 3874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3873,
                  "mutability": "mutable",
                  "name": "priceInUSD",
                  "nameLocation": "1261:10:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3945,
                  "src": "1253:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1252:20:38"
            },
            "scope": 4259,
            "src": "1199:738:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3988,
              "nodeType": "Block",
              "src": "2047:249:38",
              "statements": [
                {
                  "assignments": [
                    3957,
                    3960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3957,
                      "mutability": "mutable",
                      "name": "router",
                      "nameLocation": "2066:6:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3988,
                      "src": "2058:14:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3956,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2058:7:38",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3960,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "2091:4:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3988,
                      "src": "2074:21:38",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2074:7:38",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3959,
                        "nodeType": "ArrayTypeName",
                        "src": "2074:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3965,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3962,
                        "name": "fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3947,
                        "src": "2116:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3963,
                        "name": "toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3951,
                        "src": "2126:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3961,
                      "name": "getRouterAndPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4258,
                      "src": "2099:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address,address) view returns (address,address[] memory)"
                      }
                    },
                    "id": 3964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:35:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$",
                      "typeString": "tuple(address,address[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2057:77:38"
                },
                {
                  "assignments": [
                    3970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3970,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nameLocation": "2162:7:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 3988,
                      "src": "2145:24:38",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 3968,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2145:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3969,
                        "nodeType": "ArrayTypeName",
                        "src": "2145:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3978,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3975,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3949,
                        "src": "2213:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3976,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3960,
                        "src": "2221:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3972,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3957,
                            "src": "2191:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3971,
                          "name": "IUniv2LikeRouter01",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1249,
                          "src": "2172:18:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniv2LikeRouter01_$1249_$",
                            "typeString": "type(contract IUniv2LikeRouter01)"
                          }
                        },
                        "id": 3973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2172:26:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniv2LikeRouter01_$1249",
                          "typeString": "contract IUniv2LikeRouter01"
                        }
                      },
                      "id": 3974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountsOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1237,
                      "src": "2172:40:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                      }
                    },
                    "id": 3977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2172:54:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2145:81:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 3980,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3970,
                          "src": "2261:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 3985,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3981,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3970,
                              "src": "2269:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 3982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2269:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 3983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2286:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2269:18:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2261:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3979,
                      "name": "scalePriceTo1e18",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4095,
                      "src": "2244:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 3986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2244:45:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3955,
                  "id": 3987,
                  "nodeType": "Return",
                  "src": "2237:52:38"
                }
              ]
            },
            "functionSelector": "251506d9",
            "id": 3989,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUniV2Quote",
            "nameLocation": "1952:13:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3947,
                  "mutability": "mutable",
                  "name": "fromToken",
                  "nameLocation": "1974:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3989,
                  "src": "1966:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3949,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1993:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3989,
                  "src": "1985:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3951,
                  "mutability": "mutable",
                  "name": "toToken",
                  "nameLocation": "2009:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 3989,
                  "src": "2001:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1965:52:38"
            },
            "returnParameters": {
              "id": 3955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3954,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3989,
                  "src": "2038:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2038:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2037:9:38"
            },
            "scope": 4259,
            "src": "1943:353:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4024,
              "nodeType": "Block",
              "src": "2408:216:38",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4000,
                      "name": "SOLIDLY_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3828,
                      "src": "2422:14:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2448:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2440:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4001,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2440:10:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2422:28:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4008,
                  "nodeType": "IfStatement",
                  "src": "2418:42:38",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 4006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2459:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 3999,
                    "id": 4007,
                    "nodeType": "Return",
                    "src": "2452:8:38"
                  }
                },
                {
                  "assignments": [
                    4010,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4010,
                      "mutability": "mutable",
                      "name": "solidlyQuote",
                      "nameLocation": "2480:12:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4024,
                      "src": "2472:20:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4009,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2472:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 4019,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4015,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3993,
                        "src": "2542:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4016,
                        "name": "fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3991,
                        "src": "2550:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4017,
                        "name": "toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3995,
                        "src": "2561:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4012,
                            "name": "SOLIDLY_ROUTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3828,
                            "src": "2513:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4011,
                          "name": "IBaseV1Router01",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "2497:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBaseV1Router01_$647_$",
                            "typeString": "type(contract IBaseV1Router01)"
                          }
                        },
                        "id": 4013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2497:31:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBaseV1Router01_$647",
                          "typeString": "contract IBaseV1Router01"
                        }
                      },
                      "id": 4014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 601,
                      "src": "2497:44:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$_t_bool_$",
                        "typeString": "function (uint256,address,address) view external returns (uint256,bool)"
                      }
                    },
                    "id": 4018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:72:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2471:98:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4021,
                        "name": "solidlyQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4010,
                        "src": "2604:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4020,
                      "name": "scalePriceTo1e18",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4095,
                      "src": "2587:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 4022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2587:30:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3999,
                  "id": 4023,
                  "nodeType": "Return",
                  "src": "2580:37:38"
                }
              ]
            },
            "functionSelector": "f0b19cc4",
            "id": 4025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSolidlyQuote",
            "nameLocation": "2311:15:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3991,
                  "mutability": "mutable",
                  "name": "fromToken",
                  "nameLocation": "2335:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4025,
                  "src": "2327:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3993,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2354:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4025,
                  "src": "2346:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3995,
                  "mutability": "mutable",
                  "name": "toToken",
                  "nameLocation": "2370:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4025,
                  "src": "2362:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2362:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2326:52:38"
            },
            "returnParameters": {
              "id": 3999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3998,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4025,
                  "src": "2399:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3997,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2399:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2398:9:38"
            },
            "scope": 4259,
            "src": "2302:322:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4060,
              "nodeType": "Block",
              "src": "2734:207:38",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4036,
                      "name": "CURVE_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3826,
                      "src": "2748:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 4039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2772:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 4038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2764:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 4037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2764:7:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2764:10:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2748:26:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4044,
                  "nodeType": "IfStatement",
                  "src": "2744:40:38",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 4042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2783:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 4035,
                    "id": 4043,
                    "nodeType": "Return",
                    "src": "2776:8:38"
                  }
                },
                {
                  "assignments": [
                    null,
                    4046
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 4046,
                      "mutability": "mutable",
                      "name": "curveQuote",
                      "nameLocation": "2806:10:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4060,
                      "src": "2798:18:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4045,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2798:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4055,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4051,
                        "name": "fromToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4027,
                        "src": "2861:9:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4052,
                        "name": "toToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4031,
                        "src": "2872:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4053,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4029,
                        "src": "2881:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4048,
                            "name": "CURVE_ROUTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3826,
                            "src": "2833:12:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4047,
                          "name": "ICurveRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "2820:12:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICurveRouter_$677_$",
                            "typeString": "type(contract ICurveRouter)"
                          }
                        },
                        "id": 4049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2820:26:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICurveRouter_$677",
                          "typeString": "contract ICurveRouter"
                        }
                      },
                      "id": 4050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get_best_rate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 663,
                      "src": "2820:40:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_address_$_t_uint256_$",
                        "typeString": "function (address,address,uint256) view external returns (address,uint256)"
                      }
                    },
                    "id": 4054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2820:68:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2795:93:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4057,
                        "name": "curveQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4046,
                        "src": "2923:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4056,
                      "name": "scalePriceTo1e18",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4095,
                      "src": "2906:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 4058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:28:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4035,
                  "id": 4059,
                  "nodeType": "Return",
                  "src": "2899:35:38"
                }
              ]
            },
            "functionSelector": "73f356dd",
            "id": 4061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurveQuote",
            "nameLocation": "2639:13:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4027,
                  "mutability": "mutable",
                  "name": "fromToken",
                  "nameLocation": "2661:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4061,
                  "src": "2653:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2653:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4029,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2680:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4061,
                  "src": "2672:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2672:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4031,
                  "mutability": "mutable",
                  "name": "toToken",
                  "nameLocation": "2696:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4061,
                  "src": "2688:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2652:52:38"
            },
            "returnParameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4061,
                  "src": "2725:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2724:9:38"
            },
            "scope": 4259,
            "src": "2630:311:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4094,
              "nodeType": "Block",
              "src": "3022:197:38",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4068,
                      "name": "QUOTE_USD_DECIMAL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3832,
                      "src": "3036:17:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 4069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3057:2:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "3036:23:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4092,
                    "nodeType": "Block",
                    "src": "3140:73:38",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4082,
                            "name": "rawPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4063,
                            "src": "3161:8:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 4083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3173:2:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4086,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 4084,
                                        "name": "QUOTE_USD_DECIMAL",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3832,
                                        "src": "3178:17:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "3138",
                                        "id": 4085,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3198:2:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_18_by_1",
                                          "typeString": "int_const 18"
                                        },
                                        "value": "18"
                                      },
                                      "src": "3178:22:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4087,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3177:24:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3173:28:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4089,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3172:30:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3161:41:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4067,
                        "id": 4091,
                        "nodeType": "Return",
                        "src": "3154:48:38"
                      }
                    ]
                  },
                  "id": 4093,
                  "nodeType": "IfStatement",
                  "src": "3032:181:38",
                  "trueBody": {
                    "id": 4081,
                    "nodeType": "Block",
                    "src": "3061:73:38",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4071,
                            "name": "rawPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4063,
                            "src": "3082:8:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 4072,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3094:2:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4075,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3138",
                                        "id": 4073,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3099:2:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_18_by_1",
                                          "typeString": "int_const 18"
                                        },
                                        "value": "18"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 4074,
                                        "name": "QUOTE_USD_DECIMAL",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3832,
                                        "src": "3104:17:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3099:22:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4076,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3098:24:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3094:28:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4078,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3093:30:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3082:41:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4067,
                        "id": 4080,
                        "nodeType": "Return",
                        "src": "3075:48:38"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 4095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "scalePriceTo1e18",
            "nameLocation": "2956:16:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4063,
                  "mutability": "mutable",
                  "name": "rawPrice",
                  "nameLocation": "2981:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4095,
                  "src": "2973:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2972:18:38"
            },
            "returnParameters": {
              "id": 4067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4066,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4095,
                  "src": "3013:7:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3012:9:38"
            },
            "scope": 4259,
            "src": "2947:272:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4149,
              "nodeType": "Block",
              "src": "3473:220:38",
              "statements": [
                {
                  "assignments": [
                    4106
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4106,
                      "mutability": "mutable",
                      "name": "pairKey",
                      "nameLocation": "3488:7:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4149,
                      "src": "3483:12:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4105,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3483:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4129,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 4111,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4100,
                                "src": "3511:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 4113,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 4112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3516:1:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3511:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3503:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4109,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "3503:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3503:16:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3498:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 4107,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3498:4:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3498:22:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 4120,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4100,
                                "src": "3536:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 4125,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4121,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4100,
                                    "src": "3541:4:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 4122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3541:11:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 4123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3555:1:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "3541:15:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3536:21:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3528:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4118,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "3528:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3528:30:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3523:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 4116,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3523:4:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3523:36:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3498:61:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3483:76:38"
                },
                {
                  "assignments": [
                    4132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4132,
                      "mutability": "mutable",
                      "name": "pairInfo",
                      "nameLocation": "3591:8:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4149,
                      "src": "3569:30:38",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                        "typeString": "struct OnChainPriceFetcher.TokenPairInfo"
                      },
                      "typeName": {
                        "id": 4131,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4130,
                          "name": "TokenPairInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3824,
                          "src": "3569:13:38"
                        },
                        "referencedDeclaration": 3824,
                        "src": "3569:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                          "typeString": "struct OnChainPriceFetcher.TokenPairInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4136,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4133,
                      "name": "pairRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3838,
                      "src": "3602:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenPairInfo_$3824_storage_$",
                        "typeString": "mapping(uint256 => struct OnChainPriceFetcher.TokenPairInfo storage ref)"
                      }
                    },
                    "id": 4135,
                    "indexExpression": {
                      "id": 4134,
                      "name": "pairKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4106,
                      "src": "3613:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3602:19:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage",
                      "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3569:52:38"
                },
                {
                  "expression": {
                    "id": 4141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4137,
                        "name": "pairInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "3632:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                          "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                        }
                      },
                      "id": 4139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "router",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3820,
                      "src": "3632:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4140,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4097,
                      "src": "3650:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3632:24:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4142,
                  "nodeType": "ExpressionStatement",
                  "src": "3632:24:38"
                },
                {
                  "expression": {
                    "id": 4147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 4143,
                        "name": "pairInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4132,
                        "src": "3666:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                          "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                        }
                      },
                      "id": 4145,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "path",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3823,
                      "src": "3666:13:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4146,
                      "name": "path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4100,
                      "src": "3682:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                        "typeString": "address[] calldata"
                      }
                    },
                    "src": "3666:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 4148,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:20:38"
                }
              ]
            },
            "functionSelector": "e35bef2f",
            "id": 4150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4103,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4102,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6182,
                  "src": "3463:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3463:9:38"
              }
            ],
            "name": "updatePairRouter",
            "nameLocation": "3396:16:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4097,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "3421:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "3413:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3413:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4100,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "3448:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4150,
                  "src": "3429:23:38",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4098,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3429:7:38",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4099,
                    "nodeType": "ArrayTypeName",
                    "src": "3429:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3412:41:38"
            },
            "returnParameters": {
              "id": 4104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3473:0:38"
            },
            "scope": 4259,
            "src": "3387:306:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4257,
              "nodeType": "Block",
              "src": "3985:573:38",
              "statements": [
                {
                  "assignments": [
                    4163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4163,
                      "mutability": "mutable",
                      "name": "pairKey",
                      "nameLocation": "4000:7:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4257,
                      "src": "3995:12:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4162,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3995:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4179,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4168,
                              "name": "fromToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4152,
                              "src": "4023:9:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4015:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4166,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4015:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4015:18:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4010:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 4164,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4010:4:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4010:24:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 4175,
                              "name": "toToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4154,
                              "src": "4050:7:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4042:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint160_$",
                              "typeString": "type(uint160)"
                            },
                            "typeName": {
                              "id": 4173,
                              "name": "uint160",
                              "nodeType": "ElementaryTypeName",
                              "src": "4042:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4042:16:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        ],
                        "id": 4172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4037:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 4171,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4037:4:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4037:22:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4010:49:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3995:64:38"
                },
                {
                  "assignments": [
                    4182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4182,
                      "mutability": "mutable",
                      "name": "pairInfo",
                      "nameLocation": "4091:8:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4257,
                      "src": "4069:30:38",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                        "typeString": "struct OnChainPriceFetcher.TokenPairInfo"
                      },
                      "typeName": {
                        "id": 4181,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4180,
                          "name": "TokenPairInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3824,
                          "src": "4069:13:38"
                        },
                        "referencedDeclaration": 3824,
                        "src": "4069:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                          "typeString": "struct OnChainPriceFetcher.TokenPairInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4186,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4183,
                      "name": "pairRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3838,
                      "src": "4102:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenPairInfo_$3824_storage_$",
                        "typeString": "mapping(uint256 => struct OnChainPriceFetcher.TokenPairInfo storage ref)"
                      }
                    },
                    "id": 4185,
                    "indexExpression": {
                      "id": 4184,
                      "name": "pairKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4163,
                      "src": "4113:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4102:19:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage",
                      "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4069:52:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4188,
                            "name": "pairInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4182,
                            "src": "4140:8:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                              "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                            }
                          },
                          "id": 4189,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "router",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3820,
                          "src": "4140:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4167:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4159:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4159:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4159:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4140:29:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "726f75746572206e6f7420736574",
                        "id": 4195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4171:16:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65b3736299c5e37ae4ed363b2977becef129b428827b46bb15bd7120032cca68",
                          "typeString": "literal_string \"router not set\""
                        },
                        "value": "router not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65b3736299c5e37ae4ed363b2977becef129b428827b46bb15bd7120032cca68",
                          "typeString": "literal_string \"router not set\""
                        }
                      ],
                      "id": 4187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4132:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4132:56:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4197,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:56:38"
                },
                {
                  "expression": {
                    "id": 4201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4198,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4157,
                      "src": "4199:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4199,
                        "name": "pairInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4182,
                        "src": "4208:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                          "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                        }
                      },
                      "id": 4200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "router",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3820,
                      "src": "4208:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4199:24:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4202,
                  "nodeType": "ExpressionStatement",
                  "src": "4199:24:38"
                },
                {
                  "expression": {
                    "id": 4211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4203,
                      "name": "path",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4160,
                      "src": "4234:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 4207,
                              "name": "pairInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4182,
                              "src": "4255:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                                "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                              }
                            },
                            "id": 4208,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "path",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3823,
                            "src": "4255:13:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 4209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4255:20:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4241:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4204,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4245:7:38",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4205,
                          "nodeType": "ArrayTypeName",
                          "src": "4245:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 4210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4241:35:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "4234:42:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 4212,
                  "nodeType": "ExpressionStatement",
                  "src": "4234:42:38"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "expression": {
                          "id": 4213,
                          "name": "pairInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4182,
                          "src": "4290:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                            "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                          }
                        },
                        "id": 4214,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3823,
                        "src": "4290:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 4216,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 4215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4304:1:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4290:16:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 4217,
                      "name": "fromToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4152,
                      "src": "4310:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4290:29:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4255,
                    "nodeType": "Block",
                    "src": "4372:180:38",
                    "statements": [
                      {
                        "body": {
                          "id": 4253,
                          "nodeType": "Block",
                          "src": "4446:96:38",
                          "statements": [
                            {
                              "expression": {
                                "id": 4251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 4237,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4160,
                                    "src": "4464:4:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 4239,
                                  "indexExpression": {
                                    "id": 4238,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4226,
                                    "src": "4469:5:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4464:11:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "baseExpression": {
                                        "expression": {
                                          "id": 4240,
                                          "name": "pairInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4182,
                                          "src": "4479:8:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                                            "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                                          }
                                        },
                                        "id": 4241,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "path",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3823,
                                        "src": "4479:13:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 4249,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4248,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 4246,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "expression": {
                                                "id": 4242,
                                                "name": "pairInfo",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4182,
                                                "src": "4493:8:38",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                                                  "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                                                }
                                              },
                                              "id": 4243,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "path",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 3823,
                                              "src": "4493:13:38",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            "id": 4244,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "4493:20:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 4245,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4516:1:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "4493:24:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 4247,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4226,
                                          "src": "4520:5:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4493:32:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4479:47:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "id": 4250,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4478:49:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4464:63:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4252,
                              "nodeType": "ExpressionStatement",
                              "src": "4464:63:38"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4229,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4226,
                            "src": "4407:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 4230,
                                "name": "pairInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4182,
                                "src": "4415:8:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                                  "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                                }
                              },
                              "id": 4231,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "path",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3823,
                              "src": "4415:13:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4415:20:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4407:28:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4254,
                        "initializationExpression": {
                          "assignments": [
                            4226
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4226,
                              "mutability": "mutable",
                              "name": "index",
                              "nameLocation": "4396:5:38",
                              "nodeType": "VariableDeclaration",
                              "scope": 4254,
                              "src": "4391:10:38",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4225,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4391:4:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4228,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4404:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4391:14:38"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 4235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4437:7:38",
                            "subExpression": {
                              "id": 4234,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4226,
                              "src": "4437:5:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4236,
                          "nodeType": "ExpressionStatement",
                          "src": "4437:7:38"
                        },
                        "nodeType": "ForStatement",
                        "src": "4386:156:38"
                      }
                    ]
                  },
                  "id": 4256,
                  "nodeType": "IfStatement",
                  "src": "4286:266:38",
                  "trueBody": {
                    "id": 4224,
                    "nodeType": "Block",
                    "src": "4321:45:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 4222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4219,
                            "name": "path",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4160,
                            "src": "4335:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4220,
                              "name": "pairInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4182,
                              "src": "4342:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenPairInfo_$3824_storage_ptr",
                                "typeString": "struct OnChainPriceFetcher.TokenPairInfo storage pointer"
                              }
                            },
                            "id": 4221,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "path",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3823,
                            "src": "4342:13:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "src": "4335:20:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 4223,
                        "nodeType": "ExpressionStatement",
                        "src": "4335:20:38"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 4258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRouterAndPath",
            "nameLocation": "3870:16:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4152,
                  "mutability": "mutable",
                  "name": "fromToken",
                  "nameLocation": "3895:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4258,
                  "src": "3887:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3887:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4154,
                  "mutability": "mutable",
                  "name": "toToken",
                  "nameLocation": "3914:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4258,
                  "src": "3906:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3906:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3886:36:38"
            },
            "returnParameters": {
              "id": 4161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4157,
                  "mutability": "mutable",
                  "name": "router",
                  "nameLocation": "3954:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4258,
                  "src": "3946:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3946:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4160,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "3979:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4258,
                  "src": "3962:21:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4158,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3962:7:38",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 4159,
                    "nodeType": "ArrayTypeName",
                    "src": "3962:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3945:39:38"
            },
            "scope": 4259,
            "src": "3861:697:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4260,
        "src": "413:4147:38",
        "usedErrors": []
      }
    ],
    "src": "32:4528:38"
  },
  "bytecode": "6101006040523480156200001257600080fd5b50604051620013583803806200135883398101604081905262000035916200013a565b6200004033620000cd565b6001600160a01b0380841660805282811660a052811660c08190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd919062000184565b60ff1660e05250620001b0915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200013557600080fd5b919050565b6000806000606084860312156200015057600080fd5b6200015b846200011d565b92506200016b602085016200011d565b91506200017b604085016200011d565b90509250925092565b6000602082840312156200019757600080fd5b815160ff81168114620001a957600080fd5b9392505050565b60805160a05160c05160e0516111296200022f600039600081816101cf01528181610a8501528181610aae0152610af601526000818161013e01528181610392015281816103c1015261041701526000818160d9015281816106f8015261075d0152600081816102090152818161052b015261059001526111296000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806373f356dd1161008c578063e35bef2f11610066578063e35bef2f146101f1578063e49b30da14610204578063f0b19cc41461022b578063f2fde38b1461023e57600080fd5b806373f356dd146101a65780638da5cb5b146101b9578063bfe8933d146101ca57600080fd5b806318645b43146100d4578063251506d9146101185780633367fd2d1461013957806338266b2214610160578063715018a6146101735780637309142b1461017d575b600080fd5b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61012b610126366004610c3e565b610251565b60405190815260200161010f565b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b61012b61016e366004610c80565b610317565b61017b6104e8565b005b6100fb61018b366004610c9d565b6001602052600090815260409020546001600160a01b031681565b61012b6101b4366004610c3e565b610527565b6000546001600160a01b03166100fb565b61012b7f000000000000000000000000000000000000000000000000000000000000000081565b61017b6101ff366004610cb6565b610611565b6100fb7f000000000000000000000000000000000000000000000000000000000000000081565b61012b610239366004610c3e565b6106f4565b61017b61024c366004610c80565b6107d5565b60008060006102608685610870565b915091506000826001600160a01b031663d06ca61f87846040518363ffffffff1660e01b8152600401610294929190610d3e565b600060405180830381865afa1580156102b1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102d99190810190610dab565b905061030a81600183516102ed9190610e7f565b815181106102fd576102fd610e96565b6020026020010151610a7f565b93505050505b9392505050565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037c9190610eac565b61038790600a610fb3565b905060006103b684837f00000000000000000000000000000000000000000000000000000000000000006106f4565b905060006103e585847f0000000000000000000000000000000000000000000000000000000000000000610527565b90506103f18183610b2f565b60405163251506d960e01b81526001600160a01b038088166004830152602482018690527f0000000000000000000000000000000000000000000000000000000000000000166044820152909450309063251506d990606401602060405180830381865afa925050508015610483575060408051601f3d908101601f1916820190925261048091810190610fc2565b60015b6104bd573d8080156104b1576040519150601f19603f3d011682016040523d82523d6000602084013e6104b6565b606091505b50506104e0565b80156104de57600085116104d157806104db565b6104db8582610b46565b94505b505b505050919050565b6000546001600160a01b0316331461051b5760405162461bcd60e51b815260040161051290610fdb565b60405180910390fd5b6105256000610b61565b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661055f57506000610310565b604051634e21df7560e01b81526001600160a01b0385811660048301528381166024830152604482018590526000917f000000000000000000000000000000000000000000000000000000000000000090911690634e21df75906064016040805180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190611010565b91505061060881610a7f565b95945050505050565b6000546001600160a01b0316331461063b5760405162461bcd60e51b815260040161051290610fdb565b6000828261064a600182610e7f565b81811061065957610659610e96565b905060200201602081019061066e9190610c80565b6001600160a01b03168383600081811061068a5761068a610e96565b905060200201602081019061069f9190610c80565b6001600160a01b03166106b2919061103e565b600081815260016020819052604090912080546001600160a01b0319166001600160a01b0388161781559192506106ec9082018585610bb1565b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661072c57506000610310565b604051635e1e632560e01b8152600481018490526001600160a01b03858116602483015283811660448301526000917f000000000000000000000000000000000000000000000000000000000000000090911690635e1e6325906064016040805180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190611056565b50905061060881610a7f565b6000546001600160a01b031633146107ff5760405162461bcd60e51b815260040161051290610fdb565b6001600160a01b0381166108645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610512565b61086d81610b61565b50565b600060608161088b6001600160a01b0380861690871661103e565b60008181526001602052604090208054919250906001600160a01b03166108e55760405162461bcd60e51b815260206004820152600e60248201526d1c9bdd5d195c881b9bdd081cd95d60921b6044820152606401610512565b805460018201546001600160a01b03909116945067ffffffffffffffff81111561091157610911610d95565b60405190808252806020026020018201604052801561093a578160200160208202803683370190505b509250856001600160a01b03168160010160008154811061095d5761095d610e96565b6000918252602090912001546001600160a01b031614156109dc57806001018054806020026020016040519081016040528092919081815260200182805480156109d057602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109b2575b50505050509250610a76565b60005b6001820154811015610a74576001808301805490918391610a009190610e7f565b610a0a9190610e7f565b81548110610a1a57610a1a610e96565b9060005260206000200160009054906101000a90046001600160a01b0316848281518110610a4a57610a4a610e96565b6001600160a01b039092166020928302919091019091015280610a6c8161108b565b9150506109df565b505b50509250929050565b600060127f000000000000000000000000000000000000000000000000000000000000000011610aef57610ad47f00000000000000000000000000000000000000000000000000000000000000006012610e7f565b610adf90600a6110a6565b610ae990836110b2565b92915050565b610b1a60127f0000000000000000000000000000000000000000000000000000000000000000610e7f565b610b2590600a6110a6565b610ae990836110d1565b600081831015610b3f5781610310565b5090919050565b6000610b5560028484186110d1565b6103109084841661103e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610c04579160200282015b82811115610c045781546001600160a01b0319166001600160a01b03843516178255602090920191600190910190610bd1565b50610c10929150610c14565b5090565b5b80821115610c105760008155600101610c15565b6001600160a01b038116811461086d57600080fd5b600080600060608486031215610c5357600080fd5b8335610c5e81610c29565b9250602084013591506040840135610c7581610c29565b809150509250925092565b600060208284031215610c9257600080fd5b813561031081610c29565b600060208284031215610caf57600080fd5b5035919050565b600080600060408486031215610ccb57600080fd5b8335610cd681610c29565b9250602084013567ffffffffffffffff80821115610cf357600080fd5b818601915086601f830112610d0757600080fd5b813581811115610d1657600080fd5b8760208260051b8501011115610d2b57600080fd5b6020830194508093505050509250925092565b6000604082018483526020604081850152818551808452606086019150828701935060005b81811015610d885784516001600160a01b031683529383019391830191600101610d63565b5090979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610dbe57600080fd5b825167ffffffffffffffff80821115610dd657600080fd5b818501915085601f830112610dea57600080fd5b815181811115610dfc57610dfc610d95565b8060051b604051601f19603f83011681018181108582111715610e2157610e21610d95565b604052918252848201925083810185019188831115610e3f57600080fd5b938501935b82851015610e5d57845184529385019392850192610e44565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e9157610e91610e69565b500390565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610ebe57600080fd5b815160ff8116811461031057600080fd5b600181815b80851115610f0a578160001904821115610ef057610ef0610e69565b80851615610efd57918102915b93841c9390800290610ed4565b509250929050565b600082610f2157506001610ae9565b81610f2e57506000610ae9565b8160018114610f445760028114610f4e57610f6a565b6001915050610ae9565b60ff841115610f5f57610f5f610e69565b50506001821b610ae9565b5060208310610133831016604e8410600b8410161715610f8d575081810a610ae9565b610f978383610ecf565b8060001904821115610fab57610fab610e69565b029392505050565b600061031060ff841683610f12565b600060208284031215610fd457600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000806040838503121561102357600080fd5b825161102e81610c29565b6020939093015192949293505050565b6000821982111561105157611051610e69565b500190565b6000806040838503121561106957600080fd5b825191506020830151801515811461108057600080fd5b809150509250929050565b600060001982141561109f5761109f610e69565b5060010190565b60006103108383610f12565b60008160001904831182151516156110cc576110cc610e69565b500290565b6000826110ee57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207a3d2fcfbc43e82f75e2771596ebc95e65b78c32daca688ef830b7f0a198382564736f6c634300080c0033",
  "bytecodeSha1": "eb27bb452ebc373d0bd44b86a4d3a5b49b1f6a48",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "OnChainPriceFetcher",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "14": {},
      "18": {
        "Math.max": {
          "32": [
            369,
            375,
            true
          ]
        }
      },
      "22": {},
      "23": {},
      "25": {},
      "27": {},
      "38": {
        "OnChainPriceFetcher.getCurveQuote": {
          "28": [
            2748,
            2774,
            false
          ]
        },
        "OnChainPriceFetcher.getData": {
          "26": [
            1713,
            1727,
            false
          ],
          "27": [
            1760,
            1774,
            true
          ]
        },
        "OnChainPriceFetcher.getRouterAndPath": {
          "30": [
            4290,
            4319,
            false
          ]
        },
        "OnChainPriceFetcher.getSolidlyQuote": {
          "29": [
            2422,
            2450,
            false
          ]
        },
        "OnChainPriceFetcher.scalePriceTo1e18": {
          "31": [
            3036,
            3059,
            false
          ]
        }
      },
      "8": {
        "Ownable.transferOwnership": {
          "33": [
            2006,
            2028,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {},
      "11": {},
      "14": {
        "Context._msgSender": {
          "4": [
            712,
            729
          ]
        }
      },
      "18": {
        "Math.average": {
          "23": [
            796,
            824
          ]
        },
        "Math.max": {
          "22": [
            362,
            383
          ]
        }
      },
      "22": {},
      "23": {},
      "25": {},
      "27": {},
      "38": {
        "OnChainPriceFetcher.getCurveQuote": {
          "6": [
            2776,
            2784
          ],
          "7": [
            2899,
            2934
          ]
        },
        "OnChainPriceFetcher.getData": {
          "2": [
            1553,
            1600
          ],
          "3": [
            1747,
            1826
          ]
        },
        "OnChainPriceFetcher.getRouterAndPath": {
          "14": [
            4132,
            4188
          ],
          "15": [
            4199,
            4223
          ],
          "16": [
            4234,
            4276
          ],
          "17": [
            4335,
            4355
          ],
          "18": [
            4464,
            4527
          ],
          "19": [
            4437,
            4444
          ]
        },
        "OnChainPriceFetcher.getSolidlyQuote": {
          "10": [
            2452,
            2460
          ],
          "11": [
            2580,
            2617
          ]
        },
        "OnChainPriceFetcher.getUniV2Quote": {
          "1": [
            2237,
            2289
          ]
        },
        "OnChainPriceFetcher.scalePriceTo1e18": {
          "20": [
            3075,
            3123
          ],
          "21": [
            3154,
            3202
          ]
        },
        "OnChainPriceFetcher.updatePairRouter": {
          "8": [
            3632,
            3656
          ],
          "9": [
            3666,
            3686
          ]
        }
      },
      "8": {
        "Ownable._transferOwnership": {
          "24": [
            2378,
            2395
          ],
          "25": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            1998,
            2071
          ],
          "13": [
            2081,
            2109
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "IBaseV1Router01",
    "ICurveRouter",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "IPriceFeed",
    "IUniv2LikeRouter01",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "413:4147:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;636:39;;;;;;;;-1:-1:-1;;;;;178:32:40;;;160:51;;148:2;133:18;636:39:38;;;;;;;;1943:353;;;;;;:::i;:::-;;:::i;:::-;;;965:25:40;;;953:2;938:18;1943:353:38;819:177:40;713:40:38;;;;;1199:738;;;;;;:::i;:::-;;:::i;1668:101:8:-;;;:::i;:::-;;847:48:38;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;847:48:38;;;2630:311;;;;;;:::i;:::-;;:::i;1036:85:8:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;1036:85;;759:42:38;;;;;3387:306;;;;;;:::i;:::-;;:::i;593:37::-;;;;;2302:322;;;;;;:::i;:::-;;:::i;1918:198:8:-;;;;;;:::i;:::-;;:::i;1943:353:38:-;2038:7;2058:14;2074:21;2099:35;2116:9;2126:7;2099:16;:35::i;:::-;2057:77;;;;2145:24;2191:6;-1:-1:-1;;;;;2172:40:38;;2213:6;2221:4;2172:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2172:54:38;;;;;;;;;;;;:::i;:::-;2145:81;;2244:45;2261:7;2286:1;2269:7;:14;:18;;;;:::i;:::-;2261:27;;;;;;;;:::i;:::-;;;;;;;2244:16;:45::i;:::-;2237:52;;;;;1943:353;;;;;;:::o;1199:738::-;1253:18;1283:14;1321:5;-1:-1:-1;;;;;1306:30:38;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1300:38;;:2;:38;:::i;:::-;1283:55;;1373:20;1396:47;1412:5;1419:6;1427:15;1396;:47::i;:::-;1373:70;;1476:18;1497:45;1511:5;1518:6;1526:15;1497:13;:45::i;:::-;1476:66;;1566:34;1575:10;1587:12;1566:8;:34::i;:::-;1615:50;;-1:-1:-1;;;1615:50:38;;-1:-1:-1;;;;;6482:15:40;;;1615:50:38;;;6464:34:40;6514:18;;;6507:34;;;1649:15:38;6577::40;6557:18;;;6550:43;1553:47:38;;-1:-1:-1;1615:4:38;;:18;;6399::40;;1615:50:38;;;;;;;;;;;;;;;;;;-1:-1:-1;1615:50:38;;;;;;;;-1:-1:-1;;1615:50:38;;;;;;;;;;;;:::i;:::-;;;1611:320;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1852:79;1611:320;;;1713:14;;1709:132;;1773:1;1760:10;:14;:66;;1816:10;1760:66;;;1777:36;1790:10;1802;1777:12;:36::i;:::-;1747:79;;1709:132;1666:185;1611:320;1273:664;;;1199:738;;;:::o;1668:101:8:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:14;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2630:311:38:-;2725:7;2748:12;-1:-1:-1;;;;;2748:26:38;2744:40;;-1:-1:-1;2783:1:38;2776:8;;2744:40;2820:68;;-1:-1:-1;;;2820:68:38;;-1:-1:-1;;;;;7412:15:40;;;2820:68:38;;;7394:34:40;7464:15;;;7444:18;;;7437:43;7496:18;;;7489:34;;;2798:18:38;;2833:12;2820:40;;;;;;7329:18:40;;2820:68:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2795:93;;;2906:28;2923:10;2906:16;:28::i;:::-;2899:35;2630:311;-1:-1:-1;;;;;2630:311:38:o;3387:306::-;1082:7:8;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:14;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;3483:12:38::1;3536:4:::0;;3541:15:::1;3555:1;3536:4:::0;3541:15:::1;:::i;:::-;3536:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3523:36:38::1;3511:4;;3516:1;3511:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3498:22:38::1;:61;;;;:::i;:::-;3569:30;3602:19:::0;;;:10:::1;:19;::::0;;;;;;;3632:24;;-1:-1:-1;;;;;;3632:24:38::1;-1:-1:-1::0;;;;;3632:24:38;::::1;;::::0;;3602:19;;-1:-1:-1;3666:20:38::1;::::0;:13;::::1;3682:4:::0;;3666:20:::1;:::i;:::-;;3473:220;;3387:306:::0;;;:::o;2302:322::-;2399:7;2422:14;-1:-1:-1;;;;;2422:28:38;2418:42;;-1:-1:-1;2459:1:38;2452:8;;2418:42;2497:72;;-1:-1:-1;;;2497:72:38;;;;;8186:25:40;;;-1:-1:-1;;;;;8285:15:40;;;8265:18;;;8258:43;8337:15;;;8317:18;;;8310:43;2472:20:38;;2513:14;2497:44;;;;;;8159:18:40;;2497:72:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2471:98;;;2587:30;2604:12;2587:16;:30::i;1918:198:8:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:8;719:10:14;1248:23:8;1240:68;;;;-1:-1:-1;;;1240:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:8;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:8;;8909:2:40;1998:73:8::1;::::0;::::1;8891:21:40::0;8948:2;8928:18;;;8921:30;8987:34;8967:18;;;8960:62;-1:-1:-1;;;9038:18:40;;;9031:36;9084:19;;1998:73:8::1;8707:402:40::0;1998:73:8::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;3861:697:38:-;3946:14;3962:21;3946:14;4010:49;-1:-1:-1;;;;;4037:22:38;;;;4010:24;;:49;:::i;:::-;4069:30;4102:19;;;:10;:19;;;;;4140:15;;3995:64;;-1:-1:-1;4102:19:38;-1:-1:-1;;;;;4140:15:38;4132:56;;;;-1:-1:-1;;;4132:56:38;;9316:2:40;4132:56:38;;;9298:21:40;9355:2;9335:18;;;9328:30;-1:-1:-1;;;9374:18:40;;;9367:44;9428:18;;4132:56:38;9114:338:40;4132:56:38;4208:15;;;4255:13;;:20;-1:-1:-1;;;;;4208:15:38;;;;-1:-1:-1;4241:35:38;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4241:35:38;;4234:42;;4310:9;-1:-1:-1;;;;;4290:29:38;:8;:13;;4304:1;4290:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4290:16:38;:29;4286:266;;;4342:8;:13;;4335:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4335:20:38;;;;;;;;;;;;;;;;;;;;;;;4286:266;;;4391:10;4386:156;4415:13;;;:20;4407:28;;4386:156;;;4479:13;;;;4493:20;;4479:13;;4520:5;;4493:24;;4479:13;4493:24;:::i;:::-;:32;;;;:::i;:::-;4479:47;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4479:47:38;4464:4;4469:5;4464:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4464:63:38;;;:11;;;;;;;;;;;:63;4437:7;;;;:::i;:::-;;;;4386:156;;;;4286:266;3985:573;;3861:697;;;;;:::o;2947:272::-;3013:7;3057:2;3036:17;:23;3032:181;;3099:22;3104:17;3099:2;:22;:::i;:::-;3094:28;;:2;:28;:::i;:::-;3082:41;;:8;:41;:::i;:::-;3075:48;2947:272;-1:-1:-1;;2947:272:38:o;3032:181::-;3178:22;3198:2;3178:17;:22;:::i;:::-;3173:28;;:2;:28;:::i;:::-;3161:41;;:8;:41;:::i;285:105:18:-;343:7;374:1;369;:6;;:14;;382:1;369:14;;;-1:-1:-1;378:1:18;;362:21;-1:-1:-1;285:105:18:o;678:153::-;740:7;813:11;823:1;814:5;;;813:11;:::i;:::-;803:21;;804:5;;;803:21;:::i;2270:187:8:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;222:131:40;-1:-1:-1;;;;;297:31:40;;287:42;;277:70;;343:1;340;333:12;358:456;435:6;443;451;504:2;492:9;483:7;479:23;475:32;472:52;;;520:1;517;510:12;472:52;559:9;546:23;578:31;603:5;578:31;:::i;:::-;628:5;-1:-1:-1;680:2:40;665:18;;652:32;;-1:-1:-1;736:2:40;721:18;;708:32;749:33;708:32;749:33;:::i;:::-;801:7;791:17;;;358:456;;;;;:::o;1001:247::-;1060:6;1113:2;1101:9;1092:7;1088:23;1084:32;1081:52;;;1129:1;1126;1119:12;1081:52;1168:9;1155:23;1187:31;1212:5;1187:31;:::i;1253:180::-;1312:6;1365:2;1353:9;1344:7;1340:23;1336:32;1333:52;;;1381:1;1378;1371:12;1333:52;-1:-1:-1;1404:23:40;;1253:180;-1:-1:-1;1253:180:40:o;1438:750::-;1533:6;1541;1549;1602:2;1590:9;1581:7;1577:23;1573:32;1570:52;;;1618:1;1615;1608:12;1570:52;1657:9;1644:23;1676:31;1701:5;1676:31;:::i;:::-;1726:5;-1:-1:-1;1782:2:40;1767:18;;1754:32;1805:18;1835:14;;;1832:34;;;1862:1;1859;1852:12;1832:34;1900:6;1889:9;1885:22;1875:32;;1945:7;1938:4;1934:2;1930:13;1926:27;1916:55;;1967:1;1964;1957:12;1916:55;2007:2;1994:16;2033:2;2025:6;2022:14;2019:34;;;2049:1;2046;2039:12;2019:34;2102:7;2097:2;2087:6;2084:1;2080:14;2076:2;2072:23;2068:32;2065:45;2062:65;;;2123:1;2120;2113:12;2062:65;2154:2;2150;2146:11;2136:21;;2176:6;2166:16;;;;;1438:750;;;;;:::o;2193:729::-;2363:4;2411:2;2400:9;2396:18;2441:6;2430:9;2423:25;2467:2;2505;2500;2489:9;2485:18;2478:30;2528:6;2563;2557:13;2594:6;2586;2579:22;2632:2;2621:9;2617:18;2610:25;;2670:2;2662:6;2658:15;2644:29;;2691:1;2701:195;2715:6;2712:1;2709:13;2701:195;;;2780:13;;-1:-1:-1;;;;;2776:39:40;2764:52;;2871:15;;;;2836:12;;;;2812:1;2730:9;2701:195;;;-1:-1:-1;2913:3:40;;2193:729;-1:-1:-1;;;;;;;2193:729:40:o;2927:127::-;2988:10;2983:3;2979:20;2976:1;2969:31;3019:4;3016:1;3009:15;3043:4;3040:1;3033:15;3059:1105;3154:6;3185:2;3228;3216:9;3207:7;3203:23;3199:32;3196:52;;;3244:1;3241;3234:12;3196:52;3277:9;3271:16;3306:18;3347:2;3339:6;3336:14;3333:34;;;3363:1;3360;3353:12;3333:34;3401:6;3390:9;3386:22;3376:32;;3446:7;3439:4;3435:2;3431:13;3427:27;3417:55;;3468:1;3465;3458:12;3417:55;3497:2;3491:9;3519:2;3515;3512:10;3509:36;;;3525:18;;:::i;:::-;3571:2;3568:1;3564:10;3603:2;3597:9;3666:2;3662:7;3657:2;3653;3649:11;3645:25;3637:6;3633:38;3721:6;3709:10;3706:22;3701:2;3689:10;3686:18;3683:46;3680:72;;;3732:18;;:::i;:::-;3768:2;3761:22;3818:18;;;3852:15;;;;-1:-1:-1;3894:11:40;;;3890:20;;;3922:19;;;3919:39;;;3954:1;3951;3944:12;3919:39;3978:11;;;;3998:135;4014:6;4009:3;4006:15;3998:135;;;4080:10;;4068:23;;4031:12;;;;4111;;;;3998:135;;;4152:6;3059:1105;-1:-1:-1;;;;;;;;3059:1105:40:o;4169:127::-;4230:10;4225:3;4221:20;4218:1;4211:31;4261:4;4258:1;4251:15;4285:4;4282:1;4275:15;4301:125;4341:4;4369:1;4366;4363:8;4360:34;;;4374:18;;:::i;:::-;-1:-1:-1;4411:9:40;;4301:125::o;4431:127::-;4492:10;4487:3;4483:20;4480:1;4473:31;4523:4;4520:1;4513:15;4547:4;4544:1;4537:15;4563:273;4631:6;4684:2;4672:9;4663:7;4659:23;4655:32;4652:52;;;4700:1;4697;4690:12;4652:52;4732:9;4726:16;4782:4;4775:5;4771:16;4764:5;4761:27;4751:55;;4802:1;4799;4792:12;4841:422;4930:1;4973:5;4930:1;4987:270;5008:7;4998:8;4995:21;4987:270;;;5067:4;5063:1;5059:6;5055:17;5049:4;5046:27;5043:53;;;5076:18;;:::i;:::-;5126:7;5116:8;5112:22;5109:55;;;5146:16;;;;5109:55;5225:22;;;;5185:15;;;;4987:270;;;4991:3;4841:422;;;;;:::o;5268:806::-;5317:5;5347:8;5337:80;;-1:-1:-1;5388:1:40;5402:5;;5337:80;5436:4;5426:76;;-1:-1:-1;5473:1:40;5487:5;;5426:76;5518:4;5536:1;5531:59;;;;5604:1;5599:130;;;;5511:218;;5531:59;5561:1;5552:10;;5575:5;;;5599:130;5636:3;5626:8;5623:17;5620:43;;;5643:18;;:::i;:::-;-1:-1:-1;;5699:1:40;5685:16;;5714:5;;5511:218;;5813:2;5803:8;5800:16;5794:3;5788:4;5785:13;5781:36;5775:2;5765:8;5762:16;5757:2;5751:4;5748:12;5744:35;5741:77;5738:159;;;-1:-1:-1;5850:19:40;;;5882:5;;5738:159;5929:34;5954:8;5948:4;5929:34;:::i;:::-;5999:6;5995:1;5991:6;5987:19;5978:7;5975:32;5972:58;;;6010:18;;:::i;:::-;6048:20;;5268:806;-1:-1:-1;;;5268:806:40:o;6079:140::-;6137:5;6166:47;6207:4;6197:8;6193:19;6187:4;6166:47;:::i;6604:184::-;6674:6;6727:2;6715:9;6706:7;6702:23;6698:32;6695:52;;;6743:1;6740;6733:12;6695:52;-1:-1:-1;6766:16:40;;6604:184;-1:-1:-1;6604:184:40:o;6793:356::-;6995:2;6977:21;;;7014:18;;;7007:30;7073:34;7068:2;7053:18;;7046:62;7140:2;7125:18;;6793:356::o;7534:312::-;7613:6;7621;7674:2;7662:9;7653:7;7649:23;7645:32;7642:52;;;7690:1;7687;7680:12;7642:52;7722:9;7716:16;7741:31;7766:5;7741:31;:::i;:::-;7836:2;7821:18;;;;7815:25;7791:5;;7815:25;;-1:-1:-1;;;7534:312:40:o;7851:128::-;7891:3;7922:1;7918:6;7915:1;7912:13;7909:39;;;7928:18;;:::i;:::-;-1:-1:-1;7964:9:40;;7851:128::o;8364:338::-;8440:6;8448;8501:2;8489:9;8480:7;8476:23;8472:32;8469:52;;;8517:1;8514;8507:12;8469:52;8546:9;8540:16;8530:26;;8599:2;8588:9;8584:18;8578:25;8646:5;8639:13;8632:21;8625:5;8622:32;8612:60;;8668:1;8665;8658:12;8612:60;8691:5;8681:15;;;8364:338;;;;;:::o;9457:135::-;9496:3;-1:-1:-1;;9517:17:40;;9514:43;;;9537:18;;:::i;:::-;-1:-1:-1;9584:1:40;9573:13;;9457:135::o;9597:131::-;9657:5;9686:36;9713:8;9707:4;9686:36;:::i;9733:168::-;9773:7;9839:1;9835;9831:6;9827:14;9824:1;9821:21;9816:1;9809:9;9802:17;9798:45;9795:71;;;9846:18;;:::i;:::-;-1:-1:-1;9886:9:40;;9733:168::o;9906:217::-;9946:1;9972;9962:132;;10016:10;10011:3;10007:20;10004:1;9997:31;10051:4;10048:1;10041:15;10079:4;10076:1;10069:15;9962:132;-1:-1:-1;10108:9:40;;9906:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pairRouter(uint256)": {
        "notice": "Info of each TokenPair"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    413,
    4560
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73F356DD GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xE35BEF2F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE35BEF2F EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xE49B30DA EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xF0B19CC4 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73F356DD EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xBFE8933D EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18645B43 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x251506D9 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x3367FD2D EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x38266B22 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x7309142B EQ PUSH2 0x17D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10F JUMP JUMPDEST PUSH2 0xFB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x4E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xC9D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFB JUMP JUMPDEST PUSH2 0x12B PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xCB6 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST PUSH2 0xFB PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12B PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST PUSH2 0x17B PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x260 DUP7 DUP6 PUSH2 0x870 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x294 SWAP3 SWAP2 SWAP1 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x2D9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDAB JUMP JUMPDEST SWAP1 POP PUSH2 0x30A DUP2 PUSH1 0x1 DUP4 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2FD JUMPI PUSH2 0x2FD PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0xA7F JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x387 SWAP1 PUSH1 0xA PUSH2 0xFB3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3B6 DUP5 DUP4 PUSH32 0x0 PUSH2 0x6F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3E5 DUP6 DUP5 PUSH32 0x0 PUSH2 0x527 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F1 DUP2 DUP4 PUSH2 0xB2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x251506D9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 AND PUSH1 0x44 DUP3 ADD MSTORE SWAP1 SWAP5 POP ADDRESS SWAP1 PUSH4 0x251506D9 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x483 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x480 SWAP2 DUP2 ADD SWAP1 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4BD JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH2 0x4E0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI PUSH1 0x0 DUP6 GT PUSH2 0x4D1 JUMPI DUP1 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x4DB DUP6 DUP3 PUSH2 0xB46 JUMP JUMPDEST SWAP5 POP JUMPDEST POP JUMPDEST POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x51B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP1 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x525 PUSH1 0x0 PUSH2 0xB61 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x55F JUMPI POP PUSH1 0x0 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4E21DF75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x4E21DF75 SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x1010 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x608 DUP2 PUSH2 0xA7F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x63B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP1 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH2 0x64A PUSH1 0x1 DUP3 PUSH2 0xE7F JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x659 JUMPI PUSH2 0x659 PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x68A JUMPI PUSH2 0x68A PUSH2 0xE96 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x103E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR DUP2 SSTORE SWAP2 SWAP3 POP PUSH2 0x6EC SWAP1 DUP3 ADD DUP6 DUP6 PUSH2 0xBB1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72C JUMPI POP PUSH1 0x0 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5E1E6325 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x5E1E6325 SWAP1 PUSH1 0x64 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7C9 SWAP2 SWAP1 PUSH2 0x1056 JUMP JUMPDEST POP SWAP1 POP PUSH2 0x608 DUP2 PUSH2 0xA7F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP1 PUSH2 0xFDB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x512 JUMP JUMPDEST PUSH2 0x86D DUP2 PUSH2 0xB61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP2 PUSH2 0x88B PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP8 AND PUSH2 0x103E JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1C9BDD5D195C881B9BDD081CD95D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x512 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x911 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x93A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x95D JUMPI PUSH2 0x95D PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x9DC JUMPI DUP1 PUSH1 0x1 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x9D0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B2 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x1 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0xA74 JUMPI PUSH1 0x1 DUP1 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0xA0A SWAP2 SWAP1 PUSH2 0xE7F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xA1A JUMPI PUSH2 0xA1A PUSH2 0xE96 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA4A JUMPI PUSH2 0xA4A PUSH2 0xE96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xA6C DUP2 PUSH2 0x108B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9DF JUMP JUMPDEST POP JUMPDEST POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 PUSH32 0x0 GT PUSH2 0xAEF JUMPI PUSH2 0xAD4 PUSH32 0x0 PUSH1 0x12 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0xADF SWAP1 PUSH1 0xA PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0xAE9 SWAP1 DUP4 PUSH2 0x10B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB1A PUSH1 0x12 PUSH32 0x0 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0xB25 SWAP1 PUSH1 0xA PUSH2 0x10A6 JUMP JUMPDEST PUSH2 0xAE9 SWAP1 DUP4 PUSH2 0x10D1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0xB3F JUMPI DUP2 PUSH2 0x310 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB55 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x10D1 JUMP JUMPDEST PUSH2 0x310 SWAP1 DUP5 DUP5 AND PUSH2 0x103E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xC04 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xC04 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 CALLDATALOAD AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBD1 JUMP JUMPDEST POP PUSH2 0xC10 SWAP3 SWAP2 POP PUSH2 0xC14 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x86D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xC5E DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0xC75 DUP2 PUSH2 0xC29 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x310 DUP2 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xCD6 DUP2 PUSH2 0xC29 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xD16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0xD2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD88 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xD63 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0xDFC JUMPI PUSH2 0xDFC PUSH2 0xD95 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0xE21 JUMPI PUSH2 0xE21 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP9 DUP4 GT ISZERO PUSH2 0xE3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0xE5D JUMPI DUP5 MLOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0xE44 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE91 JUMPI PUSH2 0xE91 PUSH2 0xE69 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xF0A JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xEF0 JUMPI PUSH2 0xEF0 PUSH2 0xE69 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xEFD JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xED4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF21 JUMPI POP PUSH1 0x1 PUSH2 0xAE9 JUMP JUMPDEST DUP2 PUSH2 0xF2E JUMPI POP PUSH1 0x0 PUSH2 0xAE9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xF44 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xF4E JUMPI PUSH2 0xF6A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xF5F JUMPI PUSH2 0xF5F PUSH2 0xE69 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xAE9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xF8D JUMPI POP DUP2 DUP2 EXP PUSH2 0xAE9 JUMP JUMPDEST PUSH2 0xF97 DUP4 DUP4 PUSH2 0xECF JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAB PUSH2 0xE69 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1023 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x102E DUP2 PUSH2 0xC29 JUMP JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1051 PUSH2 0xE69 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH1 0x20 DUP4 ADD MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1080 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x109F JUMPI PUSH2 0x109F PUSH2 0xE69 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x310 DUP4 DUP4 PUSH2 0xF12 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CC PUSH2 0xE69 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10EE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x3D2FCFBC43E82F75E2771596EBC95E65B78C32DACA688EF830B7F0 LOG1 SWAP9 CODESIZE 0x25 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "6": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "12": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "REVERT",
      "path": "38"
    },
    "16": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "17": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "POP",
      "path": "38"
    },
    "18": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "21": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "LT",
      "path": "38"
    },
    "22": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "26": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "CALLDATALOAD",
      "path": "38"
    },
    "29": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "SHR",
      "path": "38"
    },
    "32": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "33": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x73F356DD"
    },
    "38": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "GT",
      "path": "38"
    },
    "39": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "43": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "44": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xE35BEF2F"
    },
    "49": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "GT",
      "path": "38"
    },
    "50": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "54": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "55": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xE35BEF2F"
    },
    "60": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "61": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1F1"
    },
    "64": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "65": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "66": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xE49B30DA"
    },
    "71": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "72": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x204"
    },
    "75": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "76": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "77": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xF0B19CC4"
    },
    "82": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "83": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x22B"
    },
    "86": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "87": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "88": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "94": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x23E"
    },
    "97": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "98": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "101": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "REVERT",
      "path": "38"
    },
    "102": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "103": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "104": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x73F356DD"
    },
    "109": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "110": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A6"
    },
    "113": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "114": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "115": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x8DA5CB5B"
    },
    "120": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "121": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1B9"
    },
    "124": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "125": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "126": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xBFE8933D"
    },
    "131": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "132": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1CA"
    },
    "135": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "136": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "139": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "REVERT",
      "path": "38"
    },
    "140": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "141": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "142": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x18645B43"
    },
    "147": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "148": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "152": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "153": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x251506D9"
    },
    "158": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "159": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x118"
    },
    "162": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "163": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "164": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x3367FD2D"
    },
    "169": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "170": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x139"
    },
    "173": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "174": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "175": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x38266B22"
    },
    "180": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "181": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x160"
    },
    "184": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "185": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "186": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x715018A6"
    },
    "191": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "192": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x173"
    },
    "195": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "196": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "197": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x7309142B"
    },
    "202": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "EQ",
      "path": "38"
    },
    "203": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x17D"
    },
    "206": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "207": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "208": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "DUP1",
      "path": "38"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        413,
        4560
      ],
      "op": "REVERT",
      "path": "38"
    },
    "212": {
      "offset": [
        636,
        675
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "213": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFB"
    },
    "216": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "249": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "DUP2",
      "path": "38"
    },
    "250": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "JUMP",
      "path": "38"
    },
    "251": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "252": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "254": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "261": {
      "op": "SHL"
    },
    "262": {
      "op": "SUB"
    },
    "263": {
      "op": "SWAP1"
    },
    "264": {
      "op": "SWAP2"
    },
    "265": {
      "op": "AND"
    },
    "266": {
      "op": "DUP2"
    },
    "267": {
      "op": "MSTORE"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "270": {
      "op": "ADD"
    },
    "271": {
      "offset": [
        636,
        675
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "272": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "274": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "275": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "DUP1",
      "path": "38"
    },
    "276": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "277": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "SUB",
      "path": "38"
    },
    "278": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "279": {
      "fn": null,
      "offset": [
        636,
        675
      ],
      "op": "RETURN",
      "path": "38"
    },
    "280": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "281": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12B"
    },
    "284": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x126"
    },
    "287": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "288": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "290": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC3E"
    },
    "293": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMP",
      "path": "38"
    },
    "294": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "295": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x251"
    },
    "298": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMP",
      "path": "38"
    },
    "299": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "300": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "302": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "303": {
      "op": "SWAP1"
    },
    "304": {
      "op": "DUP2"
    },
    "305": {
      "op": "MSTORE"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "308": {
      "op": "ADD"
    },
    "309": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10F"
    },
    "312": {
      "op": "JUMP"
    },
    "313": {
      "offset": [
        713,
        753
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "314": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        713,
        753
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFB"
    },
    "317": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        713,
        753
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "350": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        713,
        753
      ],
      "op": "DUP2",
      "path": "38"
    },
    "351": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        713,
        753
      ],
      "op": "JUMP",
      "path": "38"
    },
    "352": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "353": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12B"
    },
    "356": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x16E"
    },
    "359": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "360": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "362": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC80"
    },
    "365": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1199,
        1937
      ],
      "op": "JUMP",
      "path": "38"
    },
    "366": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "367": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x317"
    },
    "370": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1199,
        1937
      ],
      "op": "JUMP",
      "path": "38"
    },
    "371": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "372": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B"
    },
    "375": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4E8"
    },
    "378": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "8"
    },
    "379": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "380": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "8"
    },
    "381": {
      "offset": [
        847,
        895
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "382": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFB"
    },
    "385": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18B"
    },
    "388": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "389": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "391": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC9D"
    },
    "394": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        847,
        895
      ],
      "op": "JUMP",
      "path": "38"
    },
    "395": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "396": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "398": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "400": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "401": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "403": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "404": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "DUP2",
      "path": "38"
    },
    "405": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "406": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "408": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "409": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "410": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "417": {
      "op": "SHL"
    },
    "418": {
      "op": "SUB"
    },
    "419": {
      "offset": [
        847,
        895
      ],
      "op": "AND",
      "path": "38"
    },
    "420": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "DUP2",
      "path": "38"
    },
    "421": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        847,
        895
      ],
      "op": "JUMP",
      "path": "38"
    },
    "422": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "423": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12B"
    },
    "426": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1B4"
    },
    "429": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "430": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "432": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC3E"
    },
    "435": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "jump": "i",
      "offset": [
        2630,
        2941
      ],
      "op": "JUMP",
      "path": "38"
    },
    "436": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "437": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x527"
    },
    "440": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "jump": "i",
      "offset": [
        2630,
        2941
      ],
      "op": "JUMP",
      "path": "38"
    },
    "441": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "442": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "444": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8",
      "statement": 0
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "451": {
      "op": "SHL"
    },
    "452": {
      "op": "SUB"
    },
    "453": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "454": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFB"
    },
    "457": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "8"
    },
    "458": {
      "offset": [
        759,
        801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "459": {
      "fn": "Ownable.owner",
      "offset": [
        759,
        801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12B"
    },
    "462": {
      "fn": "Ownable.owner",
      "offset": [
        759,
        801
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "495": {
      "fn": "Ownable.owner",
      "offset": [
        759,
        801
      ],
      "op": "DUP2",
      "path": "38"
    },
    "496": {
      "fn": "Ownable.owner",
      "offset": [
        759,
        801
      ],
      "op": "JUMP",
      "path": "38"
    },
    "497": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "498": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x17B"
    },
    "501": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1FF"
    },
    "504": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "505": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "507": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xCB6"
    },
    "510": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3387,
        3693
      ],
      "op": "JUMP",
      "path": "38"
    },
    "511": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "512": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x611"
    },
    "515": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3387,
        3693
      ],
      "op": "JUMP",
      "path": "38"
    },
    "516": {
      "offset": [
        593,
        630
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "517": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        593,
        630
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFB"
    },
    "520": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        593,
        630
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "553": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        593,
        630
      ],
      "op": "DUP2",
      "path": "38"
    },
    "554": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        593,
        630
      ],
      "op": "JUMP",
      "path": "38"
    },
    "555": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "556": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12B"
    },
    "559": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x239"
    },
    "562": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "563": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "565": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC3E"
    },
    "568": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "jump": "i",
      "offset": [
        2302,
        2624
      ],
      "op": "JUMP",
      "path": "38"
    },
    "569": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "570": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6F4"
    },
    "573": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "jump": "i",
      "offset": [
        2302,
        2624
      ],
      "op": "JUMP",
      "path": "38"
    },
    "574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x17B"
    },
    "578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24C"
    },
    "581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "582": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC80"
    },
    "587": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "8"
    },
    "588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7D5"
    },
    "592": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "8"
    },
    "593": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "594": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2038,
        2045
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "596": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2058,
        2072
      ],
      "op": "DUP1",
      "path": "38"
    },
    "597": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2074,
        2095
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "599": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2099,
        2134
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x260"
    },
    "602": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2116,
        2125
      ],
      "op": "DUP7",
      "path": "38"
    },
    "603": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2126,
        2133
      ],
      "op": "DUP6",
      "path": "38"
    },
    "604": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2099,
        2115
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x870"
    },
    "607": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        2099,
        2134
      ],
      "op": "JUMP",
      "path": "38"
    },
    "608": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2099,
        2134
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "609": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2057,
        2134
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "610": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2057,
        2134
      ],
      "op": "POP",
      "path": "38"
    },
    "611": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2057,
        2134
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "612": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2057,
        2134
      ],
      "op": "POP",
      "path": "38"
    },
    "613": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2145,
        2169
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "615": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2191,
        2197
      ],
      "op": "DUP3",
      "path": "38"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2212
      ],
      "op": "AND",
      "path": "38"
    },
    "625": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2212
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xD06CA61F"
    },
    "630": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2213,
        2219
      ],
      "op": "DUP8",
      "path": "38"
    },
    "631": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2221,
        2225
      ],
      "op": "DUP5",
      "path": "38"
    },
    "632": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "634": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "635": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP4",
      "path": "38"
    },
    "636": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xFFFFFFFF"
    },
    "641": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "AND",
      "path": "38"
    },
    "642": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xE0"
    },
    "644": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SHL",
      "path": "38"
    },
    "645": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP2",
      "path": "38"
    },
    "646": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "647": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "649": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "ADD",
      "path": "38"
    },
    "650": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x294"
    },
    "653": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "654": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "655": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "656": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD3E"
    },
    "659": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        2172,
        2226
      ],
      "op": "JUMP",
      "path": "38"
    },
    "660": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "661": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "663": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "665": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "666": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP1",
      "path": "38"
    },
    "667": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP4",
      "path": "38"
    },
    "668": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SUB",
      "path": "38"
    },
    "669": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP2",
      "path": "38"
    },
    "670": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP7",
      "path": "38"
    },
    "671": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "GAS",
      "path": "38"
    },
    "672": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "STATICCALL",
      "path": "38"
    },
    "673": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "674": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP1",
      "path": "38"
    },
    "675": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "676": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B1"
    },
    "679": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "680": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "681": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "683": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP1",
      "path": "38"
    },
    "684": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "RETURNDATACOPY",
      "path": "38"
    },
    "685": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "686": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "688": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "REVERT",
      "path": "38"
    },
    "689": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "690": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "POP",
      "path": "38"
    },
    "691": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "POP",
      "path": "38"
    },
    "692": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "POP",
      "path": "38"
    },
    "693": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "POP",
      "path": "38"
    },
    "694": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "696": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "697": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "698": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "700": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP3",
      "path": "38"
    },
    "701": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "RETURNDATACOPY",
      "path": "38"
    },
    "702": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "704": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "705": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "706": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP2",
      "path": "38"
    },
    "707": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "ADD",
      "path": "38"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "710": {
      "op": "NOT"
    },
    "711": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "AND",
      "path": "38"
    },
    "712": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP3",
      "path": "38"
    },
    "713": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "ADD",
      "path": "38"
    },
    "714": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "716": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "717": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2D9"
    },
    "720": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "721": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "722": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "DUP2",
      "path": "38"
    },
    "723": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "ADD",
      "path": "38"
    },
    "724": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "725": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDAB"
    },
    "728": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        2172,
        2226
      ],
      "op": "JUMP",
      "path": "38"
    },
    "729": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2172,
        2226
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "730": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2145,
        2226
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "731": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2145,
        2226
      ],
      "op": "POP",
      "path": "38"
    },
    "732": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2244,
        2289
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 1,
      "value": "0x30A"
    },
    "735": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2268
      ],
      "op": "DUP2",
      "path": "38"
    },
    "736": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2286,
        2287
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "738": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2269,
        2276
      ],
      "op": "DUP4",
      "path": "38"
    },
    "739": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2269,
        2283
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "740": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2269,
        2287
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2ED"
    },
    "743": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2269,
        2287
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "744": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2269,
        2287
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "745": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2269,
        2287
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE7F"
    },
    "748": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        2269,
        2287
      ],
      "op": "JUMP",
      "path": "38"
    },
    "749": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2269,
        2287
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "750": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "DUP2",
      "path": "38"
    },
    "751": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "752": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "DUP2",
      "path": "38"
    },
    "753": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "LT",
      "path": "38"
    },
    "754": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2FD"
    },
    "757": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "758": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2FD"
    },
    "761": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE96"
    },
    "764": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        2261,
        2288
      ],
      "op": "JUMP",
      "path": "38"
    },
    "765": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "766": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "768": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "MUL",
      "path": "38"
    },
    "769": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "771": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "ADD",
      "path": "38"
    },
    "772": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "ADD",
      "path": "38"
    },
    "773": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2261,
        2288
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "774": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2244,
        2260
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA7F"
    },
    "777": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "i",
      "offset": [
        2244,
        2289
      ],
      "op": "JUMP",
      "path": "38"
    },
    "778": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2244,
        2289
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "779": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2237,
        2289
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "780": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2237,
        2289
      ],
      "op": "POP",
      "path": "38"
    },
    "781": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2237,
        2289
      ],
      "op": "POP",
      "path": "38"
    },
    "782": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2237,
        2289
      ],
      "op": "POP",
      "path": "38"
    },
    "783": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        2237,
        2289
      ],
      "op": "POP",
      "path": "38"
    },
    "784": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "785": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "786": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "787": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "POP",
      "path": "38"
    },
    "788": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "POP",
      "path": "38"
    },
    "789": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "offset": [
        1943,
        2296
      ],
      "op": "POP",
      "path": "38"
    },
    "790": {
      "fn": "OnChainPriceFetcher.getUniV2Quote",
      "jump": "o",
      "offset": [
        1943,
        2296
      ],
      "op": "JUMP",
      "path": "38"
    },
    "791": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "792": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1253,
        1271
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "794": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1283,
        1297
      ],
      "op": "DUP1",
      "path": "38"
    },
    "795": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1321,
        1326
      ],
      "op": "DUP3",
      "path": "38"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1336
      ],
      "op": "AND",
      "path": "38"
    },
    "805": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1336
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x313CE567"
    },
    "810": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "812": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "813": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP2",
      "path": "38"
    },
    "814": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xFFFFFFFF"
    },
    "819": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "AND",
      "path": "38"
    },
    "820": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xE0"
    },
    "822": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "SHL",
      "path": "38"
    },
    "823": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP2",
      "path": "38"
    },
    "824": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "825": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "827": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "ADD",
      "path": "38"
    },
    "828": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "830": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "832": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "833": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP1",
      "path": "38"
    },
    "834": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP4",
      "path": "38"
    },
    "835": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "SUB",
      "path": "38"
    },
    "836": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP2",
      "path": "38"
    },
    "837": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP7",
      "path": "38"
    },
    "838": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "GAS",
      "path": "38"
    },
    "839": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "STATICCALL",
      "path": "38"
    },
    "840": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "841": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP1",
      "path": "38"
    },
    "842": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "843": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x358"
    },
    "846": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "847": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "848": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "850": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP1",
      "path": "38"
    },
    "851": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "RETURNDATACOPY",
      "path": "38"
    },
    "852": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "853": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "855": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "REVERT",
      "path": "38"
    },
    "856": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "857": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "POP",
      "path": "38"
    },
    "858": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "POP",
      "path": "38"
    },
    "859": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "POP",
      "path": "38"
    },
    "860": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "POP",
      "path": "38"
    },
    "861": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "863": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "864": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "865": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "867": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "NOT",
      "path": "38"
    },
    "868": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "870": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP3",
      "path": "38"
    },
    "871": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "ADD",
      "path": "38"
    },
    "872": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "AND",
      "path": "38"
    },
    "873": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP3",
      "path": "38"
    },
    "874": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "ADD",
      "path": "38"
    },
    "875": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP1",
      "path": "38"
    },
    "876": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "878": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "879": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "POP",
      "path": "38"
    },
    "880": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "DUP2",
      "path": "38"
    },
    "881": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "ADD",
      "path": "38"
    },
    "882": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "883": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x37C"
    },
    "886": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "887": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "888": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xEAC"
    },
    "891": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1306,
        1338
      ],
      "op": "JUMP",
      "path": "38"
    },
    "892": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1306,
        1338
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "893": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1300,
        1338
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x387"
    },
    "896": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1300,
        1338
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "897": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1300,
        1302
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "899": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1300,
        1338
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFB3"
    },
    "902": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1300,
        1338
      ],
      "op": "JUMP",
      "path": "38"
    },
    "903": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1300,
        1338
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "904": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1283,
        1338
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "905": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1283,
        1338
      ],
      "op": "POP",
      "path": "38"
    },
    "906": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1373,
        1393
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "908": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1396,
        1443
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3B6"
    },
    "911": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1412,
        1417
      ],
      "op": "DUP5",
      "path": "38"
    },
    "912": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1419,
        1425
      ],
      "op": "DUP4",
      "path": "38"
    },
    "913": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1427,
        1442
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "946": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1396,
        1411
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6F4"
    },
    "949": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1396,
        1443
      ],
      "op": "JUMP",
      "path": "38"
    },
    "950": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1396,
        1443
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "951": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1373,
        1443
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "952": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1373,
        1443
      ],
      "op": "POP",
      "path": "38"
    },
    "953": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1476,
        1494
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "955": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1497,
        1542
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3E5"
    },
    "958": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1511,
        1516
      ],
      "op": "DUP6",
      "path": "38"
    },
    "959": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1518,
        1524
      ],
      "op": "DUP5",
      "path": "38"
    },
    "960": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1526,
        1541
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "993": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1497,
        1510
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x527"
    },
    "996": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1497,
        1542
      ],
      "op": "JUMP",
      "path": "38"
    },
    "997": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1497,
        1542
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "998": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1476,
        1542
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "999": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1476,
        1542
      ],
      "op": "POP",
      "path": "38"
    },
    "1000": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1566,
        1600
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 2,
      "value": "0x3F1"
    },
    "1003": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1575,
        1585
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1004": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1587,
        1599
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1005": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1566,
        1574
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB2F"
    },
    "1008": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1566,
        1600
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1009": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1566,
        1600
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1010": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1012": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1013": {
      "op": "PUSH4",
      "value": "0x251506D9"
    },
    "1018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1020": {
      "op": "SHL"
    },
    "1021": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1022": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "op": "SUB"
    },
    "1031": {
      "op": "DUP1"
    },
    "1032": {
      "op": "DUP9"
    },
    "1033": {
      "op": "AND"
    },
    "1034": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1036": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1037": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "ADD",
      "path": "38"
    },
    "1038": {
      "op": "MSTORE"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1041": {
      "op": "DUP3"
    },
    "1042": {
      "op": "ADD"
    },
    "1043": {
      "op": "DUP7"
    },
    "1044": {
      "op": "SWAP1"
    },
    "1045": {
      "op": "MSTORE"
    },
    "1046": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1649,
        1664
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "1079": {
      "op": "AND"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1082": {
      "op": "DUP3"
    },
    "1083": {
      "op": "ADD"
    },
    "1084": {
      "op": "MSTORE"
    },
    "1085": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1553,
        1600
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1086": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1553,
        1600
      ],
      "op": "SWAP5",
      "path": "38"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1619
      ],
      "op": "ADDRESS",
      "path": "38"
    },
    "1089": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1619
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1090": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1633
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x251506D9"
    },
    "1095": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1633
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1098": {
      "op": "ADD"
    },
    "1099": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1101": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1103": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1104": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1105": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1106": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "SUB",
      "path": "38"
    },
    "1107": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1108": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP7",
      "path": "38"
    },
    "1109": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "GAS",
      "path": "38"
    },
    "1110": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "STATICCALL",
      "path": "38"
    },
    "1111": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "1112": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "POP",
      "path": "38"
    },
    "1113": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "POP",
      "path": "38"
    },
    "1114": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "POP",
      "path": "38"
    },
    "1115": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1116": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1117": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x483"
    },
    "1120": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1121": {
      "op": "POP"
    },
    "1122": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1124": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1125": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1126": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "1128": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1129": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1130": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1131": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "ADD",
      "path": "38"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1134": {
      "op": "NOT"
    },
    "1135": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "AND",
      "path": "38"
    },
    "1136": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1137": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "ADD",
      "path": "38"
    },
    "1138": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1139": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "1140": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1141": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x480"
    },
    "1144": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1145": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1146": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "ADD",
      "path": "38"
    },
    "1147": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1148": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFC2"
    },
    "1151": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1615,
        1665
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1152": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1153": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "1155": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1615,
        1665
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1156": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4BD"
    },
    "1159": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1160": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1161": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1162": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1163": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1164": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4B1"
    },
    "1167": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1168": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1170": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1171": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1172": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "POP",
      "path": "38"
    },
    "1173": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "1175": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "NOT",
      "path": "38"
    },
    "1176": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x3F"
    },
    "1178": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1179": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "ADD",
      "path": "38"
    },
    "1180": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "AND",
      "path": "38"
    },
    "1181": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1182": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "ADD",
      "path": "38"
    },
    "1183": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1185": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1186": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1187": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1188": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1189": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1190": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1192": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1194": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "DUP5",
      "path": "38"
    },
    "1195": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "ADD",
      "path": "38"
    },
    "1196": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "RETURNDATACOPY",
      "path": "38"
    },
    "1197": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4B6"
    },
    "1200": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1201": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1202": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x60"
    },
    "1204": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1205": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "POP",
      "path": "38"
    },
    "1206": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1207": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "POP",
      "path": "38"
    },
    "1208": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1852,
        1931
      ],
      "op": "POP",
      "path": "38"
    },
    "1209": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4E0"
    },
    "1212": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1213": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1214": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1713,
        1727
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1215": {
      "branch": 26,
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1713,
        1727
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1216": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1709,
        1841
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4DE"
    },
    "1219": {
      "branch": 26,
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1709,
        1841
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1220": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1773,
        1774
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 3,
      "value": "0x0"
    },
    "1222": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1760,
        1770
      ],
      "op": "DUP6",
      "path": "38"
    },
    "1223": {
      "branch": 27,
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1760,
        1774
      ],
      "op": "GT",
      "path": "38"
    },
    "1224": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1760,
        1826
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4D1"
    },
    "1227": {
      "branch": 27,
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1760,
        1826
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1228": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1816,
        1826
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1229": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1760,
        1826
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4DB"
    },
    "1232": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1760,
        1826
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1233": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1760,
        1826
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1234": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1777,
        1813
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4DB"
    },
    "1237": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1790,
        1800
      ],
      "op": "DUP6",
      "path": "38"
    },
    "1238": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1802,
        1812
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1239": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1777,
        1789
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB46"
    },
    "1242": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "i",
      "offset": [
        1777,
        1813
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1243": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1777,
        1813
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1244": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1747,
        1826
      ],
      "op": "SWAP5",
      "path": "38"
    },
    "1245": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1747,
        1826
      ],
      "op": "POP",
      "path": "38"
    },
    "1246": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1709,
        1841
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1247": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1666,
        1851
      ],
      "op": "POP",
      "path": "38"
    },
    "1248": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1611,
        1931
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1249": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1273,
        1937
      ],
      "op": "POP",
      "path": "38"
    },
    "1250": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1273,
        1937
      ],
      "op": "POP",
      "path": "38"
    },
    "1251": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1273,
        1937
      ],
      "op": "POP",
      "path": "38"
    },
    "1252": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1253": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1254": {
      "fn": "OnChainPriceFetcher.getData",
      "offset": [
        1199,
        1937
      ],
      "op": "POP",
      "path": "38"
    },
    "1255": {
      "fn": "OnChainPriceFetcher.getData",
      "jump": "o",
      "offset": [
        1199,
        1937
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1256": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1257": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1259": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1266": {
      "op": "SHL"
    },
    "1267": {
      "op": "SUB"
    },
    "1268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "1269": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 4
    },
    "1270": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "8"
    },
    "1271": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x51B"
    },
    "1274": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1275": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1277": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1284": {
      "op": "SHL"
    },
    "1285": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1286": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1287": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1289": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "8"
    },
    "1290": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x512"
    },
    "1293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1294": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFDB"
    },
    "1297": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1298": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1299": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1301": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1302": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1303": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1304": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "8"
    },
    "1305": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1306": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "8"
    },
    "1307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1308": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 5,
      "value": "0x525"
    },
    "1311": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1313": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB61"
    },
    "1316": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1317": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1318": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1319": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1320": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2725,
        2732
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1322": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2748,
        2760
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1361": {
      "op": "SHL"
    },
    "1362": {
      "op": "SUB"
    },
    "1363": {
      "branch": 28,
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2748,
        2774
      ],
      "op": "AND",
      "path": "38"
    },
    "1364": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2744,
        2784
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x55F"
    },
    "1367": {
      "branch": 28,
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2744,
        2784
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2783,
        2784
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 6,
      "value": "0x0"
    },
    "1371": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2776,
        2784
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x310"
    },
    "1374": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2776,
        2784
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1375": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2744,
        2784
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1376": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1378": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1379": {
      "op": "PUSH4",
      "value": "0x4E21DF75"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1386": {
      "op": "SHL"
    },
    "1387": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1388": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1395": {
      "op": "SHL"
    },
    "1396": {
      "op": "SUB"
    },
    "1397": {
      "op": "DUP6"
    },
    "1398": {
      "op": "DUP2"
    },
    "1399": {
      "op": "AND"
    },
    "1400": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1402": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1403": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "ADD",
      "path": "38"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "DUP4"
    },
    "1406": {
      "op": "DUP2"
    },
    "1407": {
      "op": "AND"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1410": {
      "op": "DUP4"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1415": {
      "op": "DUP3"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "DUP6"
    },
    "1418": {
      "op": "SWAP1"
    },
    "1419": {
      "op": "MSTORE"
    },
    "1420": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2798,
        2816
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1422": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2798,
        2816
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1423": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2833,
        2845
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "1456": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2860
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1457": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2860
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1458": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2860
      ],
      "op": "AND",
      "path": "38"
    },
    "1459": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2860
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1460": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2860
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x4E21DF75"
    },
    "1465": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2860
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1468": {
      "op": "ADD"
    },
    "1469": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1471": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1472": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1473": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1474": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1475": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "SUB",
      "path": "38"
    },
    "1476": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1477": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP7",
      "path": "38"
    },
    "1478": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "GAS",
      "path": "38"
    },
    "1479": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "STATICCALL",
      "path": "38"
    },
    "1480": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1481": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1482": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1483": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x5D8"
    },
    "1486": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1487": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1488": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1490": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1491": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "RETURNDATACOPY",
      "path": "38"
    },
    "1492": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1493": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1495": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "REVERT",
      "path": "38"
    },
    "1496": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1497": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "POP",
      "path": "38"
    },
    "1498": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "POP",
      "path": "38"
    },
    "1499": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "POP",
      "path": "38"
    },
    "1500": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "POP",
      "path": "38"
    },
    "1501": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1503": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1504": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1505": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "1507": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "NOT",
      "path": "38"
    },
    "1508": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "1510": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1511": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "ADD",
      "path": "38"
    },
    "1512": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "AND",
      "path": "38"
    },
    "1513": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1514": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "ADD",
      "path": "38"
    },
    "1515": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1516": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1518": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1519": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "POP",
      "path": "38"
    },
    "1520": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1521": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "ADD",
      "path": "38"
    },
    "1522": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1523": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x5FC"
    },
    "1526": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1527": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1528": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1010"
    },
    "1531": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "jump": "i",
      "offset": [
        2820,
        2888
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1532": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2820,
        2888
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1533": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2795,
        2888
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1534": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2795,
        2888
      ],
      "op": "POP",
      "path": "38"
    },
    "1535": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2795,
        2888
      ],
      "op": "POP",
      "path": "38"
    },
    "1536": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2906,
        2934
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 7,
      "value": "0x608"
    },
    "1539": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2923,
        2933
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1540": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2906,
        2922
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA7F"
    },
    "1543": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "jump": "i",
      "offset": [
        2906,
        2934
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1544": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2906,
        2934
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1545": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2899,
        2934
      ],
      "op": "SWAP6",
      "path": "38"
    },
    "1546": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "offset": [
        2630,
        2941
      ],
      "op": "SWAP5",
      "path": "38"
    },
    "1547": {
      "op": "POP"
    },
    "1548": {
      "op": "POP"
    },
    "1549": {
      "op": "POP"
    },
    "1550": {
      "op": "POP"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "OnChainPriceFetcher.getCurveQuote",
      "jump": "o",
      "offset": [
        2630,
        2941
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1553": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1554": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1556": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1563": {
      "op": "SHL"
    },
    "1564": {
      "op": "SUB"
    },
    "1565": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "1566": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1567": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "8"
    },
    "1568": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x63B"
    },
    "1571": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1572": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1574": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1583": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1584": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1586": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "8"
    },
    "1587": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x512"
    },
    "1590": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1591": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFDB"
    },
    "1594": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1595": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1596": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3483,
        3495
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1598": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3540
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1599": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3540
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1600": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3541,
        3556
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x64A"
    },
    "1603": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3555,
        3556
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "1605": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3540
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1606": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3541,
        3556
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE7F"
    },
    "1609": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3541,
        3556
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1610": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3541,
        3556
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1611": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1612": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1613": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "LT",
      "path": "38"
    },
    "1614": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x659"
    },
    "1617": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1618": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x659"
    },
    "1621": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE96"
    },
    "1624": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3536,
        3557
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1625": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1626": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1627": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "POP",
      "path": "38"
    },
    "1628": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1630": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "MUL",
      "path": "38"
    },
    "1631": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "ADD",
      "path": "38"
    },
    "1632": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1634": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1635": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "ADD",
      "path": "38"
    },
    "1636": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1637": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x66E"
    },
    "1640": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1641": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1642": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC80"
    },
    "1645": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3536,
        3557
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1646": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3536,
        3557
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "op": "SUB"
    },
    "1655": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3523,
        3559
      ],
      "op": "AND",
      "path": "38"
    },
    "1656": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3515
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1657": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3515
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1658": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3516,
        3517
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1660": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1661": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1662": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "LT",
      "path": "38"
    },
    "1663": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x68A"
    },
    "1666": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1667": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x68A"
    },
    "1670": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE96"
    },
    "1673": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3511,
        3518
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1674": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1675": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1676": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "POP",
      "path": "38"
    },
    "1677": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1679": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "MUL",
      "path": "38"
    },
    "1680": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "ADD",
      "path": "38"
    },
    "1681": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1683": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1684": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "ADD",
      "path": "38"
    },
    "1685": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1686": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x69F"
    },
    "1689": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1690": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1691": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xC80"
    },
    "1694": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3511,
        3518
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1695": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3511,
        3518
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1702": {
      "op": "SHL"
    },
    "1703": {
      "op": "SUB"
    },
    "1704": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3498,
        3520
      ],
      "op": "AND",
      "path": "38"
    },
    "1705": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3498,
        3559
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B2"
    },
    "1708": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3498,
        3559
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1709": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3498,
        3559
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1710": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3498,
        3559
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x103E"
    },
    "1713": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3498,
        3559
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1714": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3498,
        3559
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1715": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3569,
        3599
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1717": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1718": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1719": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1720": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3612
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "1722": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1724": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1725": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1726": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1727": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1729": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1730": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1731": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "1732": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 8
    },
    "1733": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "op": "NOT"
    },
    "1743": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "AND",
      "path": "38"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "op": "SUB"
    },
    "1752": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "DUP9",
      "path": "38"
    },
    "1753": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "AND",
      "path": "38"
    },
    "1754": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "OR",
      "path": "38"
    },
    "1755": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1756": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3632,
        3656
      ],
      "op": "SSTORE",
      "path": "38"
    },
    "1757": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1758": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3602,
        3621
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "1759": {
      "op": "POP"
    },
    "1760": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3666,
        3686
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 9,
      "value": "0x6EC"
    },
    "1763": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3666,
        3686
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1764": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3666,
        3679
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1765": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3666,
        3679
      ],
      "op": "ADD",
      "path": "38"
    },
    "1766": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3682,
        3686
      ],
      "op": "DUP6",
      "path": "38"
    },
    "1767": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3682,
        3686
      ],
      "op": "DUP6",
      "path": "38"
    },
    "1768": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3666,
        3686
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xBB1"
    },
    "1771": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "i",
      "offset": [
        3666,
        3686
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1772": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3666,
        3686
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1773": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3666,
        3686
      ],
      "op": "POP",
      "path": "38"
    },
    "1774": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3473,
        3693
      ],
      "op": "POP",
      "path": "38"
    },
    "1775": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3473,
        3693
      ],
      "op": "POP",
      "path": "38"
    },
    "1776": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "POP",
      "path": "38"
    },
    "1777": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "POP",
      "path": "38"
    },
    "1778": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "offset": [
        3387,
        3693
      ],
      "op": "POP",
      "path": "38"
    },
    "1779": {
      "fn": "OnChainPriceFetcher.updatePairRouter",
      "jump": "o",
      "offset": [
        3387,
        3693
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1780": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2302,
        2624
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1781": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2399,
        2406
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1783": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2422,
        2436
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1822": {
      "op": "SHL"
    },
    "1823": {
      "op": "SUB"
    },
    "1824": {
      "branch": 29,
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2422,
        2450
      ],
      "op": "AND",
      "path": "38"
    },
    "1825": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2418,
        2460
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x72C"
    },
    "1828": {
      "branch": 29,
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2418,
        2460
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1829": {
      "op": "POP"
    },
    "1830": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2459,
        2460
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 10,
      "value": "0x0"
    },
    "1832": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2452,
        2460
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x310"
    },
    "1835": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2452,
        2460
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1836": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2418,
        2460
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1837": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1839": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1840": {
      "op": "PUSH4",
      "value": "0x5E1E6325"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1847": {
      "op": "SHL"
    },
    "1848": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1849": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1850": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1852": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1853": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "ADD",
      "path": "38"
    },
    "1854": {
      "op": "DUP5"
    },
    "1855": {
      "op": "SWAP1"
    },
    "1856": {
      "op": "MSTORE"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1863": {
      "op": "SHL"
    },
    "1864": {
      "op": "SUB"
    },
    "1865": {
      "op": "DUP6"
    },
    "1866": {
      "op": "DUP2"
    },
    "1867": {
      "op": "AND"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1870": {
      "op": "DUP4"
    },
    "1871": {
      "op": "ADD"
    },
    "1872": {
      "op": "MSTORE"
    },
    "1873": {
      "op": "DUP4"
    },
    "1874": {
      "op": "DUP2"
    },
    "1875": {
      "op": "AND"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1878": {
      "op": "DUP4"
    },
    "1879": {
      "op": "ADD"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2472,
        2492
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1883": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2472,
        2492
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1884": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2513,
        2527
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "1917": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2541
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1918": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2541
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1919": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2541
      ],
      "op": "AND",
      "path": "38"
    },
    "1920": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2541
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1921": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2541
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x5E1E6325"
    },
    "1926": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2541
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1929": {
      "op": "ADD"
    },
    "1930": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1932": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1933": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1934": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1935": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1936": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "SUB",
      "path": "38"
    },
    "1937": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1938": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP7",
      "path": "38"
    },
    "1939": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "GAS",
      "path": "38"
    },
    "1940": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "STATICCALL",
      "path": "38"
    },
    "1941": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1942": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1943": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1944": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x7A5"
    },
    "1947": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1948": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1949": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1951": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1952": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "RETURNDATACOPY",
      "path": "38"
    },
    "1953": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1954": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1956": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "REVERT",
      "path": "38"
    },
    "1957": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1958": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "POP",
      "path": "38"
    },
    "1959": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "POP",
      "path": "38"
    },
    "1960": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "POP",
      "path": "38"
    },
    "1961": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "POP",
      "path": "38"
    },
    "1962": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1964": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1965": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "RETURNDATASIZE",
      "path": "38"
    },
    "1966": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "1968": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "NOT",
      "path": "38"
    },
    "1969": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "1971": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1972": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "ADD",
      "path": "38"
    },
    "1973": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "AND",
      "path": "38"
    },
    "1974": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1975": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "ADD",
      "path": "38"
    },
    "1976": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1977": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1979": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1980": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "POP",
      "path": "38"
    },
    "1981": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1982": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "ADD",
      "path": "38"
    },
    "1983": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1984": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x7C9"
    },
    "1987": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1988": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1989": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1056"
    },
    "1992": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "jump": "i",
      "offset": [
        2497,
        2569
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1993": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2497,
        2569
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1994": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2471,
        2569
      ],
      "op": "POP",
      "path": "38"
    },
    "1995": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1996": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2471,
        2569
      ],
      "op": "POP",
      "path": "38"
    },
    "1997": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2587,
        2617
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 11,
      "value": "0x608"
    },
    "2000": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2604,
        2616
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2001": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "offset": [
        2587,
        2603
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA7F"
    },
    "2004": {
      "fn": "OnChainPriceFetcher.getSolidlyQuote",
      "jump": "i",
      "offset": [
        2587,
        2617
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2005": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2006": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2008": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2015": {
      "op": "SHL"
    },
    "2016": {
      "op": "SUB"
    },
    "2017": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "8"
    },
    "2018": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2019": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "8"
    },
    "2020": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x7FF"
    },
    "2023": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2024": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2026": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2033": {
      "op": "SHL"
    },
    "2034": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2035": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2036": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2038": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "8"
    },
    "2039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x512"
    },
    "2042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2043": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xFDB"
    },
    "2046": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2047": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2054": {
      "op": "SHL"
    },
    "2055": {
      "op": "SUB"
    },
    "2056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 12
    },
    "2057": {
      "branch": 33,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "8"
    },
    "2058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x864"
    },
    "2061": {
      "branch": 33,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2062": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2064": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2065": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2071": {
      "op": "SHL"
    },
    "2072": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2073": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2076": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2078": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2079": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "8"
    },
    "2080": {
      "op": "MSTORE"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2085": {
      "op": "DUP3"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "MSTORE"
    },
    "2088": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2123": {
      "op": "DUP3"
    },
    "2124": {
      "op": "ADD"
    },
    "2125": {
      "op": "MSTORE"
    },
    "2126": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2138": {
      "op": "DUP3"
    },
    "2139": {
      "op": "ADD"
    },
    "2140": {
      "op": "MSTORE"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2143": {
      "op": "ADD"
    },
    "2144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x512"
    },
    "2147": {
      "op": "JUMP"
    },
    "2148": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 13,
      "value": "0x86D"
    },
    "2152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB61"
    },
    "2156": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "8"
    },
    "2159": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2160": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3861,
        4558
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2161": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3946,
        3960
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2163": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3962,
        3983
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x60"
    },
    "2165": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3946,
        3960
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2166": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4010,
        4059
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x88B"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2175": {
      "op": "SHL"
    },
    "2176": {
      "op": "SUB"
    },
    "2177": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4037,
        4059
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2178": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4037,
        4059
      ],
      "op": "DUP7",
      "path": "38"
    },
    "2179": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4037,
        4059
      ],
      "op": "AND",
      "path": "38"
    },
    "2180": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4037,
        4059
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2181": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4010,
        4034
      ],
      "op": "DUP8",
      "path": "38"
    },
    "2182": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4010,
        4034
      ],
      "op": "AND",
      "path": "38"
    },
    "2183": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4010,
        4059
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x103E"
    },
    "2186": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4010,
        4059
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2187": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4010,
        4059
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2188": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4069,
        4099
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2190": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2191": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2192": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2193": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4112
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "2195": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2197": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2198": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2200": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2201": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2202": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4140,
        4155
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 14
    },
    "2203": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4140,
        4155
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2204": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3995,
        4059
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2205": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3995,
        4059
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2206": {
      "op": "POP"
    },
    "2207": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4102,
        4121
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2214": {
      "op": "SHL"
    },
    "2215": {
      "op": "SUB"
    },
    "2216": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4140,
        4155
      ],
      "op": "AND",
      "path": "38"
    },
    "2217": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8E5"
    },
    "2220": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2221": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2223": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2224": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2230": {
      "op": "SHL"
    },
    "2231": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2232": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2235": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2237": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2238": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "ADD",
      "path": "38"
    },
    "2239": {
      "op": "MSTORE"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "2242": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2244": {
      "op": "DUP3"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "op": "MSTORE"
    },
    "2247": {
      "op": "PUSH14",
      "value": "0x1C9BDD5D195C881B9BDD081CD95D"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2267": {
      "op": "DUP3"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x512"
    },
    "2276": {
      "op": "JUMP"
    },
    "2277": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4132,
        4188
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2278": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4208,
        4223
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 15
    },
    "2279": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4208,
        4223
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2280": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4208,
        4223
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "2282": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4255,
        4268
      ],
      "op": "DUP3",
      "path": "38",
      "statement": 16
    },
    "2283": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4255,
        4268
      ],
      "op": "ADD",
      "path": "38"
    },
    "2284": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4255,
        4275
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "op": "SUB"
    },
    "2293": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4208,
        4223
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2294": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4208,
        4223
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2295": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4208,
        4223
      ],
      "op": "AND",
      "path": "38"
    },
    "2296": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4208,
        4223
      ],
      "op": "SWAP5",
      "path": "38"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH8",
      "path": "38",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2307": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2308": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "GT",
      "path": "38"
    },
    "2309": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2310": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x911"
    },
    "2313": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2314": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x911"
    },
    "2317": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD95"
    },
    "2320": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4241,
        4276
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2321": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2322": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2324": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2325": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2326": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2327": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2328": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2329": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2330": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2332": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "MUL",
      "path": "38"
    },
    "2333": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2335": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "ADD",
      "path": "38"
    },
    "2336": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2337": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "ADD",
      "path": "38"
    },
    "2338": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2340": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2341": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2342": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2343": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x93A"
    },
    "2346": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2347": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2348": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2350": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "ADD",
      "path": "38"
    },
    "2351": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2353": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2354": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "MUL",
      "path": "38"
    },
    "2355": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2356": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "2357": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2358": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "CALLDATACOPY",
      "path": "38"
    },
    "2359": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "ADD",
      "path": "38"
    },
    "2360": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2361": {
      "op": "POP"
    },
    "2362": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2363": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4241,
        4276
      ],
      "op": "POP",
      "path": "38"
    },
    "2364": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4234,
        4276
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2365": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4234,
        4276
      ],
      "op": "POP",
      "path": "38"
    },
    "2366": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4310,
        4319
      ],
      "op": "DUP6",
      "path": "38"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2373": {
      "op": "SHL"
    },
    "2374": {
      "op": "SUB"
    },
    "2375": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4319
      ],
      "op": "AND",
      "path": "38"
    },
    "2376": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4298
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2377": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4303
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "2379": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4303
      ],
      "op": "ADD",
      "path": "38"
    },
    "2380": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4304,
        4305
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2382": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2383": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2384": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2385": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "LT",
      "path": "38"
    },
    "2386": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x95D"
    },
    "2389": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2390": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x95D"
    },
    "2393": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE96"
    },
    "2396": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4290,
        4306
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2397": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2398": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2400": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2401": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2402": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2403": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2405": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2406": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2407": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2408": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "ADD",
      "path": "38"
    },
    "2409": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2416": {
      "op": "SHL"
    },
    "2417": {
      "op": "SUB"
    },
    "2418": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4306
      ],
      "op": "AND",
      "path": "38"
    },
    "2419": {
      "branch": 30,
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4290,
        4319
      ],
      "op": "EQ",
      "path": "38"
    },
    "2420": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4286,
        4552
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2421": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4286,
        4552
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x9DC"
    },
    "2424": {
      "branch": 30,
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4286,
        4552
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2425": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4342,
        4350
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 17
    },
    "2426": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4342,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "2428": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4342,
        4355
      ],
      "op": "ADD",
      "path": "38"
    },
    "2429": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2430": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2431": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2432": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2434": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "MUL",
      "path": "38"
    },
    "2435": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2437": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "ADD",
      "path": "38"
    },
    "2438": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2440": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2441": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2442": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2443": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "ADD",
      "path": "38"
    },
    "2444": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2446": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2447": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2448": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2449": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2450": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2451": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2452": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2453": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2454": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2456": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "ADD",
      "path": "38"
    },
    "2457": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2458": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2459": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2460": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2461": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2462": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x9D0"
    },
    "2465": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2466": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2468": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "MUL",
      "path": "38"
    },
    "2469": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2470": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "ADD",
      "path": "38"
    },
    "2471": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2472": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2473": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2475": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2476": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2478": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2480": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2481": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2482": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2483": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2484": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2491": {
      "op": "SHL"
    },
    "2492": {
      "op": "SUB"
    },
    "2493": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "AND",
      "path": "38"
    },
    "2494": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2495": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2496": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "2498": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2499": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2500": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "ADD",
      "path": "38"
    },
    "2501": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2502": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2504": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "ADD",
      "path": "38"
    },
    "2505": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2506": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2507": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "GT",
      "path": "38"
    },
    "2508": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x9B2"
    },
    "2511": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2512": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2513": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "POP",
      "path": "38"
    },
    "2514": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "POP",
      "path": "38"
    },
    "2515": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "POP",
      "path": "38"
    },
    "2516": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "POP",
      "path": "38"
    },
    "2517": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "POP",
      "path": "38"
    },
    "2518": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2519": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4335,
        4355
      ],
      "op": "POP",
      "path": "38"
    },
    "2520": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4286,
        4552
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA76"
    },
    "2523": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4286,
        4552
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2524": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4286,
        4552
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2525": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4391,
        4401
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2527": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2528": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4415,
        4428
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "2530": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4415,
        4428
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2531": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4415,
        4428
      ],
      "op": "ADD",
      "path": "38"
    },
    "2532": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4415,
        4435
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2533": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4407,
        4435
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2534": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4407,
        4435
      ],
      "op": "LT",
      "path": "38"
    },
    "2535": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "2536": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA74"
    },
    "2539": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2540": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4492
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 18,
      "value": "0x1"
    },
    "2542": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4492
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2543": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4492
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2544": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4492
      ],
      "op": "ADD",
      "path": "38"
    },
    "2545": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4513
      ],
      "op": "DUP1",
      "path": "38"
    },
    "2546": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4513
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2547": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4492
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2548": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4492
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2549": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4520,
        4525
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2550": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4520,
        4525
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2551": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4517
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA00"
    },
    "2554": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4517
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2555": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4492
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2556": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4517
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE7F"
    },
    "2559": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4493,
        4517
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2560": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4517
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2561": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4525
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA0A"
    },
    "2564": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4525
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2565": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4525
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2566": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4525
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE7F"
    },
    "2569": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4493,
        4525
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2570": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4493,
        4525
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2571": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2572": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2573": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2574": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "LT",
      "path": "38"
    },
    "2575": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA1A"
    },
    "2578": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2579": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA1A"
    },
    "2582": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE96"
    },
    "2585": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4479,
        4526
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2586": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2587": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2588": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2590": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2591": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2593": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2595": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "KECCAK256",
      "path": "38"
    },
    "2596": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "ADD",
      "path": "38"
    },
    "2597": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2599": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2600": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "SLOAD",
      "path": "38"
    },
    "2601": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2602": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x100"
    },
    "2605": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "EXP",
      "path": "38"
    },
    "2606": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2607": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "DIV",
      "path": "38"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2614": {
      "op": "SHL"
    },
    "2615": {
      "op": "SUB"
    },
    "2616": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4479,
        4526
      ],
      "op": "AND",
      "path": "38"
    },
    "2617": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4468
      ],
      "op": "DUP5",
      "path": "38"
    },
    "2618": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4469,
        4474
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2619": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2620": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2621": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2622": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "LT",
      "path": "38"
    },
    "2623": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA4A"
    },
    "2626": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2627": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA4A"
    },
    "2630": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE96"
    },
    "2633": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4464,
        4475
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2634": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "op": "SUB"
    },
    "2643": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4527
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2644": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4527
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2645": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4527
      ],
      "op": "AND",
      "path": "38"
    },
    "2646": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2648": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2649": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2650": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "MUL",
      "path": "38"
    },
    "2651": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2652": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2653": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2654": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "ADD",
      "path": "38"
    },
    "2655": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2656": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2657": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4475
      ],
      "op": "ADD",
      "path": "38"
    },
    "2658": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4464,
        4527
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2659": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 19
    },
    "2660": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA6C"
    },
    "2663": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2664": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x108B"
    },
    "2667": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "i",
      "offset": [
        4437,
        4444
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2668": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2669": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2670": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "POP",
      "path": "38"
    },
    "2671": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4437,
        4444
      ],
      "op": "POP",
      "path": "38"
    },
    "2672": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x9DF"
    },
    "2675": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2676": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2677": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4386,
        4542
      ],
      "op": "POP",
      "path": "38"
    },
    "2678": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        4286,
        4552
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2679": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3985,
        4558
      ],
      "op": "POP",
      "path": "38"
    },
    "2680": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3985,
        4558
      ],
      "op": "POP",
      "path": "38"
    },
    "2681": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3861,
        4558
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2682": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3861,
        4558
      ],
      "op": "POP",
      "path": "38"
    },
    "2683": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3861,
        4558
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2684": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3861,
        4558
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2685": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "offset": [
        3861,
        4558
      ],
      "op": "POP",
      "path": "38"
    },
    "2686": {
      "fn": "OnChainPriceFetcher.getRouterAndPath",
      "jump": "o",
      "offset": [
        3861,
        4558
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2687": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        2947,
        3219
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2688": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3013,
        3020
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2690": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3057,
        3059
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x12"
    },
    "2692": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3036,
        3053
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "2725": {
      "branch": 31,
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3036,
        3059
      ],
      "op": "GT",
      "path": "38"
    },
    "2726": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3032,
        3213
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xAEF"
    },
    "2729": {
      "branch": 31,
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3032,
        3213
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2730": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3099,
        3121
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 20,
      "value": "0xAD4"
    },
    "2733": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3104,
        3121
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "2766": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3099,
        3101
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x12"
    },
    "2768": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3099,
        3121
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE7F"
    },
    "2771": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "jump": "i",
      "offset": [
        3099,
        3121
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2772": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3099,
        3121
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2773": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3094,
        3122
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xADF"
    },
    "2776": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3094,
        3122
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2777": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3094,
        3096
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "2779": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3094,
        3122
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10A6"
    },
    "2782": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "jump": "i",
      "offset": [
        3094,
        3122
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2783": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3094,
        3122
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2784": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3082,
        3123
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xAE9"
    },
    "2787": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3082,
        3123
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2788": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3082,
        3090
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2789": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3082,
        3123
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10B2"
    },
    "2792": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "jump": "i",
      "offset": [
        3082,
        3123
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2793": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3082,
        3123
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2794": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3075,
        3123
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2795": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        2947,
        3219
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2796": {
      "op": "POP"
    },
    "2797": {
      "op": "POP"
    },
    "2798": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "jump": "o",
      "offset": [
        2947,
        3219
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2799": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3032,
        3213
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2800": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3178,
        3200
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 21,
      "value": "0xB1A"
    },
    "2803": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3198,
        3200
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x12"
    },
    "2805": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3178,
        3195
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x0"
    },
    "2838": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3178,
        3200
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE7F"
    },
    "2841": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "jump": "i",
      "offset": [
        3178,
        3200
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2842": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3178,
        3200
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2843": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3173,
        3201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xB25"
    },
    "2846": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3173,
        3201
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2847": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3173,
        3175
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "2849": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3173,
        3201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10A6"
    },
    "2852": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "jump": "i",
      "offset": [
        3173,
        3201
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2853": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3173,
        3201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2854": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3161,
        3202
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xAE9"
    },
    "2857": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3161,
        3202
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2858": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3161,
        3169
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2859": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "offset": [
        3161,
        3202
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10D1"
    },
    "2862": {
      "fn": "OnChainPriceFetcher.scalePriceTo1e18",
      "jump": "i",
      "offset": [
        3161,
        3202
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2863": {
      "fn": "Math.max",
      "offset": [
        285,
        390
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2864": {
      "fn": "Math.max",
      "offset": [
        343,
        350
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2866": {
      "fn": "Math.max",
      "offset": [
        374,
        375
      ],
      "op": "DUP2",
      "path": "18",
      "statement": 22
    },
    "2867": {
      "fn": "Math.max",
      "offset": [
        369,
        370
      ],
      "op": "DUP4",
      "path": "18"
    },
    "2868": {
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "LT",
      "path": "18"
    },
    "2869": {
      "branch": 32,
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "ISZERO",
      "path": "18"
    },
    "2870": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0xB3F"
    },
    "2873": {
      "branch": 32,
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPI",
      "path": "18"
    },
    "2874": {
      "fn": "Math.max",
      "offset": [
        382,
        383
      ],
      "op": "DUP2",
      "path": "18"
    },
    "2875": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x310"
    },
    "2878": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2879": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2880": {
      "op": "POP"
    },
    "2881": {
      "fn": "Math.max",
      "offset": [
        378,
        379
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2882": {
      "fn": "Math.max",
      "offset": [
        378,
        379
      ],
      "op": "SWAP2",
      "path": "18"
    },
    "2883": {
      "fn": "Math.max",
      "offset": [
        362,
        383
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        285,
        390
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2886": {
      "fn": "Math.average",
      "offset": [
        678,
        831
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2887": {
      "fn": "Math.average",
      "offset": [
        740,
        747
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x0"
    },
    "2889": {
      "fn": "Math.average",
      "offset": [
        813,
        824
      ],
      "op": "PUSH2",
      "path": "18",
      "statement": 23,
      "value": "0xB55"
    },
    "2892": {
      "fn": "Math.average",
      "offset": [
        823,
        824
      ],
      "op": "PUSH1",
      "path": "18",
      "value": "0x2"
    },
    "2894": {
      "fn": "Math.average",
      "offset": [
        814,
        819
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2895": {
      "fn": "Math.average",
      "offset": [
        814,
        819
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2896": {
      "fn": "Math.average",
      "offset": [
        814,
        819
      ],
      "op": "XOR",
      "path": "18"
    },
    "2897": {
      "fn": "Math.average",
      "offset": [
        813,
        824
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x10D1"
    },
    "2900": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        813,
        824
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2901": {
      "fn": "Math.average",
      "offset": [
        813,
        824
      ],
      "op": "JUMPDEST",
      "path": "18"
    },
    "2902": {
      "fn": "Math.average",
      "offset": [
        803,
        824
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x310"
    },
    "2905": {
      "fn": "Math.average",
      "offset": [
        803,
        824
      ],
      "op": "SWAP1",
      "path": "18"
    },
    "2906": {
      "fn": "Math.average",
      "offset": [
        804,
        809
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2907": {
      "fn": "Math.average",
      "offset": [
        804,
        809
      ],
      "op": "DUP5",
      "path": "18"
    },
    "2908": {
      "fn": "Math.average",
      "offset": [
        804,
        809
      ],
      "op": "AND",
      "path": "18"
    },
    "2909": {
      "fn": "Math.average",
      "offset": [
        803,
        824
      ],
      "op": "PUSH2",
      "path": "18",
      "value": "0x103E"
    },
    "2912": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        803,
        824
      ],
      "op": "JUMP",
      "path": "18"
    },
    "2913": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2914": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2916": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2924": {
      "op": "SHL"
    },
    "2925": {
      "op": "SUB"
    },
    "2926": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "8",
      "statement": 24
    },
    "2927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2928": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "8"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "op": "NOT"
    },
    "2938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "8"
    },
    "2940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2941": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "8"
    },
    "2942": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "8"
    },
    "2943": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2944": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 25,
      "value": "0x40"
    },
    "2946": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2947": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2948": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2949": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2950": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "8"
    },
    "2951": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2952": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2953": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2954": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2987": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "8"
    },
    "2990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "8"
    },
    "2991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "8"
    },
    "2992": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2993": {
      "op": "JUMPDEST"
    },
    "2994": {
      "op": "DUP3"
    },
    "2995": {
      "op": "DUP1"
    },
    "2996": {
      "op": "SLOAD"
    },
    "2997": {
      "op": "DUP3"
    },
    "2998": {
      "op": "DUP3"
    },
    "2999": {
      "op": "SSTORE"
    },
    "3000": {
      "op": "SWAP1"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3003": {
      "op": "MSTORE"
    },
    "3004": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3008": {
      "op": "KECCAK256"
    },
    "3009": {
      "op": "SWAP1"
    },
    "3010": {
      "op": "DUP2"
    },
    "3011": {
      "op": "ADD"
    },
    "3012": {
      "op": "SWAP3"
    },
    "3013": {
      "op": "DUP3"
    },
    "3014": {
      "op": "ISZERO"
    },
    "3015": {
      "op": "PUSH2",
      "value": "0xC04"
    },
    "3018": {
      "op": "JUMPI"
    },
    "3019": {
      "op": "SWAP2"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3022": {
      "op": "MUL"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "JUMPDEST"
    },
    "3026": {
      "op": "DUP3"
    },
    "3027": {
      "op": "DUP2"
    },
    "3028": {
      "op": "GT"
    },
    "3029": {
      "op": "ISZERO"
    },
    "3030": {
      "op": "PUSH2",
      "value": "0xC04"
    },
    "3033": {
      "op": "JUMPI"
    },
    "3034": {
      "op": "DUP2"
    },
    "3035": {
      "op": "SLOAD"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3042": {
      "op": "SHL"
    },
    "3043": {
      "op": "SUB"
    },
    "3044": {
      "op": "NOT"
    },
    "3045": {
      "op": "AND"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3052": {
      "op": "SHL"
    },
    "3053": {
      "op": "SUB"
    },
    "3054": {
      "op": "DUP5"
    },
    "3055": {
      "op": "CALLDATALOAD"
    },
    "3056": {
      "op": "AND"
    },
    "3057": {
      "op": "OR"
    },
    "3058": {
      "op": "DUP3"
    },
    "3059": {
      "op": "SSTORE"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3062": {
      "op": "SWAP1"
    },
    "3063": {
      "op": "SWAP3"
    },
    "3064": {
      "op": "ADD"
    },
    "3065": {
      "op": "SWAP2"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3068": {
      "op": "SWAP1"
    },
    "3069": {
      "op": "SWAP2"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "op": "SWAP1"
    },
    "3072": {
      "op": "PUSH2",
      "value": "0xBD1"
    },
    "3075": {
      "op": "JUMP"
    },
    "3076": {
      "op": "JUMPDEST"
    },
    "3077": {
      "op": "POP"
    },
    "3078": {
      "op": "PUSH2",
      "value": "0xC10"
    },
    "3081": {
      "op": "SWAP3"
    },
    "3082": {
      "op": "SWAP2"
    },
    "3083": {
      "op": "POP"
    },
    "3084": {
      "op": "PUSH2",
      "value": "0xC14"
    },
    "3087": {
      "jump": "i",
      "op": "JUMP"
    },
    "3088": {
      "op": "JUMPDEST"
    },
    "3089": {
      "op": "POP"
    },
    "3090": {
      "op": "SWAP1"
    },
    "3091": {
      "jump": "o",
      "op": "JUMP"
    },
    "3092": {
      "op": "JUMPDEST"
    },
    "3093": {
      "op": "JUMPDEST"
    },
    "3094": {
      "op": "DUP1"
    },
    "3095": {
      "op": "DUP3"
    },
    "3096": {
      "op": "GT"
    },
    "3097": {
      "op": "ISZERO"
    },
    "3098": {
      "op": "PUSH2",
      "value": "0xC10"
    },
    "3101": {
      "op": "JUMPI"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3104": {
      "op": "DUP2"
    },
    "3105": {
      "op": "SSTORE"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "ADD"
    },
    "3109": {
      "op": "PUSH2",
      "value": "0xC15"
    },
    "3112": {
      "op": "JUMP"
    },
    "3113": {
      "op": "JUMPDEST"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3120": {
      "op": "SHL"
    },
    "3121": {
      "op": "SUB"
    },
    "3122": {
      "op": "DUP2"
    },
    "3123": {
      "op": "AND"
    },
    "3124": {
      "op": "DUP2"
    },
    "3125": {
      "op": "EQ"
    },
    "3126": {
      "op": "PUSH2",
      "value": "0x86D"
    },
    "3129": {
      "op": "JUMPI"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3132": {
      "op": "DUP1"
    },
    "3133": {
      "op": "REVERT"
    },
    "3134": {
      "op": "JUMPDEST"
    },
    "3135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3137": {
      "op": "DUP1"
    },
    "3138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3140": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3142": {
      "op": "DUP5"
    },
    "3143": {
      "op": "DUP7"
    },
    "3144": {
      "op": "SUB"
    },
    "3145": {
      "op": "SLT"
    },
    "3146": {
      "op": "ISZERO"
    },
    "3147": {
      "op": "PUSH2",
      "value": "0xC53"
    },
    "3150": {
      "op": "JUMPI"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3153": {
      "op": "DUP1"
    },
    "3154": {
      "op": "REVERT"
    },
    "3155": {
      "op": "JUMPDEST"
    },
    "3156": {
      "op": "DUP4"
    },
    "3157": {
      "op": "CALLDATALOAD"
    },
    "3158": {
      "op": "PUSH2",
      "value": "0xC5E"
    },
    "3161": {
      "op": "DUP2"
    },
    "3162": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3165": {
      "jump": "i",
      "op": "JUMP"
    },
    "3166": {
      "op": "JUMPDEST"
    },
    "3167": {
      "op": "SWAP3"
    },
    "3168": {
      "op": "POP"
    },
    "3169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3171": {
      "op": "DUP5"
    },
    "3172": {
      "op": "ADD"
    },
    "3173": {
      "op": "CALLDATALOAD"
    },
    "3174": {
      "op": "SWAP2"
    },
    "3175": {
      "op": "POP"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3178": {
      "op": "DUP5"
    },
    "3179": {
      "op": "ADD"
    },
    "3180": {
      "op": "CALLDATALOAD"
    },
    "3181": {
      "op": "PUSH2",
      "value": "0xC75"
    },
    "3184": {
      "op": "DUP2"
    },
    "3185": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3188": {
      "jump": "i",
      "op": "JUMP"
    },
    "3189": {
      "op": "JUMPDEST"
    },
    "3190": {
      "op": "DUP1"
    },
    "3191": {
      "op": "SWAP2"
    },
    "3192": {
      "op": "POP"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "op": "SWAP3"
    },
    "3195": {
      "op": "POP"
    },
    "3196": {
      "op": "SWAP3"
    },
    "3197": {
      "op": "POP"
    },
    "3198": {
      "op": "SWAP3"
    },
    "3199": {
      "jump": "o",
      "op": "JUMP"
    },
    "3200": {
      "op": "JUMPDEST"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3205": {
      "op": "DUP3"
    },
    "3206": {
      "op": "DUP5"
    },
    "3207": {
      "op": "SUB"
    },
    "3208": {
      "op": "SLT"
    },
    "3209": {
      "op": "ISZERO"
    },
    "3210": {
      "op": "PUSH2",
      "value": "0xC92"
    },
    "3213": {
      "op": "JUMPI"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3216": {
      "op": "DUP1"
    },
    "3217": {
      "op": "REVERT"
    },
    "3218": {
      "op": "JUMPDEST"
    },
    "3219": {
      "op": "DUP2"
    },
    "3220": {
      "op": "CALLDATALOAD"
    },
    "3221": {
      "op": "PUSH2",
      "value": "0x310"
    },
    "3224": {
      "op": "DUP2"
    },
    "3225": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3228": {
      "jump": "i",
      "op": "JUMP"
    },
    "3229": {
      "op": "JUMPDEST"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3234": {
      "op": "DUP3"
    },
    "3235": {
      "op": "DUP5"
    },
    "3236": {
      "op": "SUB"
    },
    "3237": {
      "op": "SLT"
    },
    "3238": {
      "op": "ISZERO"
    },
    "3239": {
      "op": "PUSH2",
      "value": "0xCAF"
    },
    "3242": {
      "op": "JUMPI"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3245": {
      "op": "DUP1"
    },
    "3246": {
      "op": "REVERT"
    },
    "3247": {
      "op": "JUMPDEST"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "op": "CALLDATALOAD"
    },
    "3250": {
      "op": "SWAP2"
    },
    "3251": {
      "op": "SWAP1"
    },
    "3252": {
      "op": "POP"
    },
    "3253": {
      "jump": "o",
      "op": "JUMP"
    },
    "3254": {
      "op": "JUMPDEST"
    },
    "3255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3257": {
      "op": "DUP1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3262": {
      "op": "DUP5"
    },
    "3263": {
      "op": "DUP7"
    },
    "3264": {
      "op": "SUB"
    },
    "3265": {
      "op": "SLT"
    },
    "3266": {
      "op": "ISZERO"
    },
    "3267": {
      "op": "PUSH2",
      "value": "0xCCB"
    },
    "3270": {
      "op": "JUMPI"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3273": {
      "op": "DUP1"
    },
    "3274": {
      "op": "REVERT"
    },
    "3275": {
      "op": "JUMPDEST"
    },
    "3276": {
      "op": "DUP4"
    },
    "3277": {
      "op": "CALLDATALOAD"
    },
    "3278": {
      "op": "PUSH2",
      "value": "0xCD6"
    },
    "3281": {
      "op": "DUP2"
    },
    "3282": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "3285": {
      "jump": "i",
      "op": "JUMP"
    },
    "3286": {
      "op": "JUMPDEST"
    },
    "3287": {
      "op": "SWAP3"
    },
    "3288": {
      "op": "POP"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3291": {
      "op": "DUP5"
    },
    "3292": {
      "op": "ADD"
    },
    "3293": {
      "op": "CALLDATALOAD"
    },
    "3294": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3303": {
      "op": "DUP1"
    },
    "3304": {
      "op": "DUP3"
    },
    "3305": {
      "op": "GT"
    },
    "3306": {
      "op": "ISZERO"
    },
    "3307": {
      "op": "PUSH2",
      "value": "0xCF3"
    },
    "3310": {
      "op": "JUMPI"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3313": {
      "op": "DUP1"
    },
    "3314": {
      "op": "REVERT"
    },
    "3315": {
      "op": "JUMPDEST"
    },
    "3316": {
      "op": "DUP2"
    },
    "3317": {
      "op": "DUP7"
    },
    "3318": {
      "op": "ADD"
    },
    "3319": {
      "op": "SWAP2"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "op": "DUP7"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3324": {
      "op": "DUP4"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "SLT"
    },
    "3327": {
      "op": "PUSH2",
      "value": "0xD07"
    },
    "3330": {
      "op": "JUMPI"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3333": {
      "op": "DUP1"
    },
    "3334": {
      "op": "REVERT"
    },
    "3335": {
      "op": "JUMPDEST"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "CALLDATALOAD"
    },
    "3338": {
      "op": "DUP2"
    },
    "3339": {
      "op": "DUP2"
    },
    "3340": {
      "op": "GT"
    },
    "3341": {
      "op": "ISZERO"
    },
    "3342": {
      "op": "PUSH2",
      "value": "0xD16"
    },
    "3345": {
      "op": "JUMPI"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3348": {
      "op": "DUP1"
    },
    "3349": {
      "op": "REVERT"
    },
    "3350": {
      "op": "JUMPDEST"
    },
    "3351": {
      "op": "DUP8"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3354": {
      "op": "DUP3"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3357": {
      "op": "SHL"
    },
    "3358": {
      "op": "DUP6"
    },
    "3359": {
      "op": "ADD"
    },
    "3360": {
      "op": "ADD"
    },
    "3361": {
      "op": "GT"
    },
    "3362": {
      "op": "ISZERO"
    },
    "3363": {
      "op": "PUSH2",
      "value": "0xD2B"
    },
    "3366": {
      "op": "JUMPI"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3369": {
      "op": "DUP1"
    },
    "3370": {
      "op": "REVERT"
    },
    "3371": {
      "op": "JUMPDEST"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3374": {
      "op": "DUP4"
    },
    "3375": {
      "op": "ADD"
    },
    "3376": {
      "op": "SWAP5"
    },
    "3377": {
      "op": "POP"
    },
    "3378": {
      "op": "DUP1"
    },
    "3379": {
      "op": "SWAP4"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "op": "POP"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "op": "SWAP3"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "SWAP3"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "op": "SWAP3"
    },
    "3389": {
      "jump": "o",
      "op": "JUMP"
    },
    "3390": {
      "op": "JUMPDEST"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3395": {
      "op": "DUP3"
    },
    "3396": {
      "op": "ADD"
    },
    "3397": {
      "op": "DUP5"
    },
    "3398": {
      "op": "DUP4"
    },
    "3399": {
      "op": "MSTORE"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3404": {
      "op": "DUP2"
    },
    "3405": {
      "op": "DUP6"
    },
    "3406": {
      "op": "ADD"
    },
    "3407": {
      "op": "MSTORE"
    },
    "3408": {
      "op": "DUP2"
    },
    "3409": {
      "op": "DUP6"
    },
    "3410": {
      "op": "MLOAD"
    },
    "3411": {
      "op": "DUP1"
    },
    "3412": {
      "op": "DUP5"
    },
    "3413": {
      "op": "MSTORE"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3416": {
      "op": "DUP7"
    },
    "3417": {
      "op": "ADD"
    },
    "3418": {
      "op": "SWAP2"
    },
    "3419": {
      "op": "POP"
    },
    "3420": {
      "op": "DUP3"
    },
    "3421": {
      "op": "DUP8"
    },
    "3422": {
      "op": "ADD"
    },
    "3423": {
      "op": "SWAP4"
    },
    "3424": {
      "op": "POP"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3427": {
      "op": "JUMPDEST"
    },
    "3428": {
      "op": "DUP2"
    },
    "3429": {
      "op": "DUP2"
    },
    "3430": {
      "op": "LT"
    },
    "3431": {
      "op": "ISZERO"
    },
    "3432": {
      "op": "PUSH2",
      "value": "0xD88"
    },
    "3435": {
      "op": "JUMPI"
    },
    "3436": {
      "op": "DUP5"
    },
    "3437": {
      "op": "MLOAD"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3444": {
      "op": "SHL"
    },
    "3445": {
      "op": "SUB"
    },
    "3446": {
      "op": "AND"
    },
    "3447": {
      "op": "DUP4"
    },
    "3448": {
      "op": "MSTORE"
    },
    "3449": {
      "op": "SWAP4"
    },
    "3450": {
      "op": "DUP4"
    },
    "3451": {
      "op": "ADD"
    },
    "3452": {
      "op": "SWAP4"
    },
    "3453": {
      "op": "SWAP2"
    },
    "3454": {
      "op": "DUP4"
    },
    "3455": {
      "op": "ADD"
    },
    "3456": {
      "op": "SWAP2"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "PUSH2",
      "value": "0xD63"
    },
    "3463": {
      "op": "JUMP"
    },
    "3464": {
      "op": "JUMPDEST"
    },
    "3465": {
      "op": "POP"
    },
    "3466": {
      "op": "SWAP1"
    },
    "3467": {
      "op": "SWAP8"
    },
    "3468": {
      "op": "SWAP7"
    },
    "3469": {
      "op": "POP"
    },
    "3470": {
      "op": "POP"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "op": "POP"
    },
    "3473": {
      "op": "POP"
    },
    "3474": {
      "op": "POP"
    },
    "3475": {
      "op": "POP"
    },
    "3476": {
      "jump": "o",
      "op": "JUMP"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3485": {
      "op": "SHL"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3488": {
      "op": "MSTORE"
    },
    "3489": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3493": {
      "op": "MSTORE"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3498": {
      "op": "REVERT"
    },
    "3499": {
      "op": "JUMPDEST"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3504": {
      "op": "DUP1"
    },
    "3505": {
      "op": "DUP4"
    },
    "3506": {
      "op": "DUP6"
    },
    "3507": {
      "op": "SUB"
    },
    "3508": {
      "op": "SLT"
    },
    "3509": {
      "op": "ISZERO"
    },
    "3510": {
      "op": "PUSH2",
      "value": "0xDBE"
    },
    "3513": {
      "op": "JUMPI"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3516": {
      "op": "DUP1"
    },
    "3517": {
      "op": "REVERT"
    },
    "3518": {
      "op": "JUMPDEST"
    },
    "3519": {
      "op": "DUP3"
    },
    "3520": {
      "op": "MLOAD"
    },
    "3521": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3530": {
      "op": "DUP1"
    },
    "3531": {
      "op": "DUP3"
    },
    "3532": {
      "op": "GT"
    },
    "3533": {
      "op": "ISZERO"
    },
    "3534": {
      "op": "PUSH2",
      "value": "0xDD6"
    },
    "3537": {
      "op": "JUMPI"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3540": {
      "op": "DUP1"
    },
    "3541": {
      "op": "REVERT"
    },
    "3542": {
      "op": "JUMPDEST"
    },
    "3543": {
      "op": "DUP2"
    },
    "3544": {
      "op": "DUP6"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "op": "SWAP2"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "op": "DUP6"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3551": {
      "op": "DUP4"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "SLT"
    },
    "3554": {
      "op": "PUSH2",
      "value": "0xDEA"
    },
    "3557": {
      "op": "JUMPI"
    },
    "3558": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3560": {
      "op": "DUP1"
    },
    "3561": {
      "op": "REVERT"
    },
    "3562": {
      "op": "JUMPDEST"
    },
    "3563": {
      "op": "DUP2"
    },
    "3564": {
      "op": "MLOAD"
    },
    "3565": {
      "op": "DUP2"
    },
    "3566": {
      "op": "DUP2"
    },
    "3567": {
      "op": "GT"
    },
    "3568": {
      "op": "ISZERO"
    },
    "3569": {
      "op": "PUSH2",
      "value": "0xDFC"
    },
    "3572": {
      "op": "JUMPI"
    },
    "3573": {
      "op": "PUSH2",
      "value": "0xDFC"
    },
    "3576": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3579": {
      "jump": "i",
      "op": "JUMP"
    },
    "3580": {
      "op": "JUMPDEST"
    },
    "3581": {
      "op": "DUP1"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3584": {
      "op": "SHL"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3587": {
      "op": "MLOAD"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3590": {
      "op": "NOT"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3593": {
      "op": "DUP4"
    },
    "3594": {
      "op": "ADD"
    },
    "3595": {
      "op": "AND"
    },
    "3596": {
      "op": "DUP2"
    },
    "3597": {
      "op": "ADD"
    },
    "3598": {
      "op": "DUP2"
    },
    "3599": {
      "op": "DUP2"
    },
    "3600": {
      "op": "LT"
    },
    "3601": {
      "op": "DUP6"
    },
    "3602": {
      "op": "DUP3"
    },
    "3603": {
      "op": "GT"
    },
    "3604": {
      "op": "OR"
    },
    "3605": {
      "op": "ISZERO"
    },
    "3606": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3609": {
      "op": "JUMPI"
    },
    "3610": {
      "op": "PUSH2",
      "value": "0xE21"
    },
    "3613": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3616": {
      "jump": "i",
      "op": "JUMP"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3620": {
      "op": "MSTORE"
    },
    "3621": {
      "op": "SWAP2"
    },
    "3622": {
      "op": "DUP3"
    },
    "3623": {
      "op": "MSTORE"
    },
    "3624": {
      "op": "DUP5"
    },
    "3625": {
      "op": "DUP3"
    },
    "3626": {
      "op": "ADD"
    },
    "3627": {
      "op": "SWAP3"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "op": "DUP4"
    },
    "3630": {
      "op": "DUP2"
    },
    "3631": {
      "op": "ADD"
    },
    "3632": {
      "op": "DUP6"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "op": "SWAP2"
    },
    "3635": {
      "op": "DUP9"
    },
    "3636": {
      "op": "DUP4"
    },
    "3637": {
      "op": "GT"
    },
    "3638": {
      "op": "ISZERO"
    },
    "3639": {
      "op": "PUSH2",
      "value": "0xE3F"
    },
    "3642": {
      "op": "JUMPI"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3645": {
      "op": "DUP1"
    },
    "3646": {
      "op": "REVERT"
    },
    "3647": {
      "op": "JUMPDEST"
    },
    "3648": {
      "op": "SWAP4"
    },
    "3649": {
      "op": "DUP6"
    },
    "3650": {
      "op": "ADD"
    },
    "3651": {
      "op": "SWAP4"
    },
    "3652": {
      "op": "JUMPDEST"
    },
    "3653": {
      "op": "DUP3"
    },
    "3654": {
      "op": "DUP6"
    },
    "3655": {
      "op": "LT"
    },
    "3656": {
      "op": "ISZERO"
    },
    "3657": {
      "op": "PUSH2",
      "value": "0xE5D"
    },
    "3660": {
      "op": "JUMPI"
    },
    "3661": {
      "op": "DUP5"
    },
    "3662": {
      "op": "MLOAD"
    },
    "3663": {
      "op": "DUP5"
    },
    "3664": {
      "op": "MSTORE"
    },
    "3665": {
      "op": "SWAP4"
    },
    "3666": {
      "op": "DUP6"
    },
    "3667": {
      "op": "ADD"
    },
    "3668": {
      "op": "SWAP4"
    },
    "3669": {
      "op": "SWAP3"
    },
    "3670": {
      "op": "DUP6"
    },
    "3671": {
      "op": "ADD"
    },
    "3672": {
      "op": "SWAP3"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE44"
    },
    "3676": {
      "op": "JUMP"
    },
    "3677": {
      "op": "JUMPDEST"
    },
    "3678": {
      "op": "SWAP9"
    },
    "3679": {
      "op": "SWAP8"
    },
    "3680": {
      "op": "POP"
    },
    "3681": {
      "op": "POP"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "op": "POP"
    },
    "3684": {
      "op": "POP"
    },
    "3685": {
      "op": "POP"
    },
    "3686": {
      "op": "POP"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "jump": "o",
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3697": {
      "op": "SHL"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3700": {
      "op": "MSTORE"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3705": {
      "op": "MSTORE"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3710": {
      "op": "REVERT"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3714": {
      "op": "DUP3"
    },
    "3715": {
      "op": "DUP3"
    },
    "3716": {
      "op": "LT"
    },
    "3717": {
      "op": "ISZERO"
    },
    "3718": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3721": {
      "op": "JUMPI"
    },
    "3722": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3728": {
      "jump": "i",
      "op": "JUMP"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "POP"
    },
    "3731": {
      "op": "SUB"
    },
    "3732": {
      "op": "SWAP1"
    },
    "3733": {
      "jump": "o",
      "op": "JUMP"
    },
    "3734": {
      "op": "JUMPDEST"
    },
    "3735": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3742": {
      "op": "SHL"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3745": {
      "op": "MSTORE"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3748": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3750": {
      "op": "MSTORE"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3755": {
      "op": "REVERT"
    },
    "3756": {
      "op": "JUMPDEST"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3761": {
      "op": "DUP3"
    },
    "3762": {
      "op": "DUP5"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "op": "SLT"
    },
    "3765": {
      "op": "ISZERO"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "3769": {
      "op": "JUMPI"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3772": {
      "op": "DUP1"
    },
    "3773": {
      "op": "REVERT"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "DUP2"
    },
    "3776": {
      "op": "MLOAD"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3779": {
      "op": "DUP2"
    },
    "3780": {
      "op": "AND"
    },
    "3781": {
      "op": "DUP2"
    },
    "3782": {
      "op": "EQ"
    },
    "3783": {
      "op": "PUSH2",
      "value": "0x310"
    },
    "3786": {
      "op": "JUMPI"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "REVERT"
    },
    "3791": {
      "op": "JUMPDEST"
    },
    "3792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3794": {
      "op": "DUP2"
    },
    "3795": {
      "op": "DUP2"
    },
    "3796": {
      "op": "JUMPDEST"
    },
    "3797": {
      "op": "DUP1"
    },
    "3798": {
      "op": "DUP6"
    },
    "3799": {
      "op": "GT"
    },
    "3800": {
      "op": "ISZERO"
    },
    "3801": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3804": {
      "op": "JUMPI"
    },
    "3805": {
      "op": "DUP2"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3808": {
      "op": "NOT"
    },
    "3809": {
      "op": "DIV"
    },
    "3810": {
      "op": "DUP3"
    },
    "3811": {
      "op": "GT"
    },
    "3812": {
      "op": "ISZERO"
    },
    "3813": {
      "op": "PUSH2",
      "value": "0xEF0"
    },
    "3816": {
      "op": "JUMPI"
    },
    "3817": {
      "op": "PUSH2",
      "value": "0xEF0"
    },
    "3820": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3823": {
      "jump": "i",
      "op": "JUMP"
    },
    "3824": {
      "op": "JUMPDEST"
    },
    "3825": {
      "op": "DUP1"
    },
    "3826": {
      "op": "DUP6"
    },
    "3827": {
      "op": "AND"
    },
    "3828": {
      "op": "ISZERO"
    },
    "3829": {
      "op": "PUSH2",
      "value": "0xEFD"
    },
    "3832": {
      "op": "JUMPI"
    },
    "3833": {
      "op": "SWAP2"
    },
    "3834": {
      "op": "DUP2"
    },
    "3835": {
      "op": "MUL"
    },
    "3836": {
      "op": "SWAP2"
    },
    "3837": {
      "op": "JUMPDEST"
    },
    "3838": {
      "op": "SWAP4"
    },
    "3839": {
      "op": "DUP5"
    },
    "3840": {
      "op": "SHR"
    },
    "3841": {
      "op": "SWAP4"
    },
    "3842": {
      "op": "SWAP1"
    },
    "3843": {
      "op": "DUP1"
    },
    "3844": {
      "op": "MUL"
    },
    "3845": {
      "op": "SWAP1"
    },
    "3846": {
      "op": "PUSH2",
      "value": "0xED4"
    },
    "3849": {
      "op": "JUMP"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "op": "SWAP3"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "SWAP3"
    },
    "3855": {
      "op": "SWAP1"
    },
    "3856": {
      "op": "POP"
    },
    "3857": {
      "jump": "o",
      "op": "JUMP"
    },
    "3858": {
      "op": "JUMPDEST"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3861": {
      "op": "DUP3"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF21"
    },
    "3865": {
      "op": "JUMPI"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "3872": {
      "op": "JUMP"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "DUP2"
    },
    "3875": {
      "op": "PUSH2",
      "value": "0xF2E"
    },
    "3878": {
      "op": "JUMPI"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3882": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "3885": {
      "op": "JUMP"
    },
    "3886": {
      "op": "JUMPDEST"
    },
    "3887": {
      "op": "DUP2"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3890": {
      "op": "DUP2"
    },
    "3891": {
      "op": "EQ"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xF44"
    },
    "3895": {
      "op": "JUMPI"
    },
    "3896": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3898": {
      "op": "DUP2"
    },
    "3899": {
      "op": "EQ"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0xF4E"
    },
    "3903": {
      "op": "JUMPI"
    },
    "3904": {
      "op": "PUSH2",
      "value": "0xF6A"
    },
    "3907": {
      "op": "JUMP"
    },
    "3908": {
      "op": "JUMPDEST"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3911": {
      "op": "SWAP2"
    },
    "3912": {
      "op": "POP"
    },
    "3913": {
      "op": "POP"
    },
    "3914": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "3917": {
      "op": "JUMP"
    },
    "3918": {
      "op": "JUMPDEST"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3921": {
      "op": "DUP5"
    },
    "3922": {
      "op": "GT"
    },
    "3923": {
      "op": "ISZERO"
    },
    "3924": {
      "op": "PUSH2",
      "value": "0xF5F"
    },
    "3927": {
      "op": "JUMPI"
    },
    "3928": {
      "op": "PUSH2",
      "value": "0xF5F"
    },
    "3931": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3934": {
      "jump": "i",
      "op": "JUMP"
    },
    "3935": {
      "op": "JUMPDEST"
    },
    "3936": {
      "op": "POP"
    },
    "3937": {
      "op": "POP"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3940": {
      "op": "DUP3"
    },
    "3941": {
      "op": "SHL"
    },
    "3942": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "3945": {
      "op": "JUMP"
    },
    "3946": {
      "op": "JUMPDEST"
    },
    "3947": {
      "op": "POP"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3950": {
      "op": "DUP4"
    },
    "3951": {
      "op": "LT"
    },
    "3952": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "3955": {
      "op": "DUP4"
    },
    "3956": {
      "op": "LT"
    },
    "3957": {
      "op": "AND"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3960": {
      "op": "DUP5"
    },
    "3961": {
      "op": "LT"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3964": {
      "op": "DUP5"
    },
    "3965": {
      "op": "LT"
    },
    "3966": {
      "op": "AND"
    },
    "3967": {
      "op": "OR"
    },
    "3968": {
      "op": "ISZERO"
    },
    "3969": {
      "op": "PUSH2",
      "value": "0xF8D"
    },
    "3972": {
      "op": "JUMPI"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "op": "DUP2"
    },
    "3975": {
      "op": "DUP2"
    },
    "3976": {
      "op": "EXP"
    },
    "3977": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "3980": {
      "op": "JUMP"
    },
    "3981": {
      "op": "JUMPDEST"
    },
    "3982": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "3985": {
      "op": "DUP4"
    },
    "3986": {
      "op": "DUP4"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0xECF"
    },
    "3990": {
      "jump": "i",
      "op": "JUMP"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "op": "DUP1"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3995": {
      "op": "NOT"
    },
    "3996": {
      "op": "DIV"
    },
    "3997": {
      "op": "DUP3"
    },
    "3998": {
      "op": "GT"
    },
    "3999": {
      "op": "ISZERO"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFAB"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "PUSH2",
      "value": "0xFAB"
    },
    "4007": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "4010": {
      "jump": "i",
      "op": "JUMP"
    },
    "4011": {
      "op": "JUMPDEST"
    },
    "4012": {
      "op": "MUL"
    },
    "4013": {
      "op": "SWAP4"
    },
    "4014": {
      "op": "SWAP3"
    },
    "4015": {
      "op": "POP"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "jump": "o",
      "op": "JUMP"
    },
    "4019": {
      "op": "JUMPDEST"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4022": {
      "op": "PUSH2",
      "value": "0x310"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4027": {
      "op": "DUP5"
    },
    "4028": {
      "op": "AND"
    },
    "4029": {
      "op": "DUP4"
    },
    "4030": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "4033": {
      "jump": "i",
      "op": "JUMP"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4039": {
      "op": "DUP3"
    },
    "4040": {
      "op": "DUP5"
    },
    "4041": {
      "op": "SUB"
    },
    "4042": {
      "op": "SLT"
    },
    "4043": {
      "op": "ISZERO"
    },
    "4044": {
      "op": "PUSH2",
      "value": "0xFD4"
    },
    "4047": {
      "op": "JUMPI"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "DUP1"
    },
    "4051": {
      "op": "REVERT"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "op": "MLOAD"
    },
    "4055": {
      "op": "SWAP2"
    },
    "4056": {
      "op": "SWAP1"
    },
    "4057": {
      "op": "POP"
    },
    "4058": {
      "jump": "o",
      "op": "JUMP"
    },
    "4059": {
      "op": "JUMPDEST"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4062": {
      "op": "DUP1"
    },
    "4063": {
      "op": "DUP3"
    },
    "4064": {
      "op": "MSTORE"
    },
    "4065": {
      "op": "DUP2"
    },
    "4066": {
      "op": "DUP2"
    },
    "4067": {
      "op": "ADD"
    },
    "4068": {
      "op": "MSTORE"
    },
    "4069": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4104": {
      "op": "DUP3"
    },
    "4105": {
      "op": "ADD"
    },
    "4106": {
      "op": "MSTORE"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4109": {
      "op": "ADD"
    },
    "4110": {
      "op": "SWAP1"
    },
    "4111": {
      "jump": "o",
      "op": "JUMP"
    },
    "4112": {
      "op": "JUMPDEST"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4115": {
      "op": "DUP1"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4118": {
      "op": "DUP4"
    },
    "4119": {
      "op": "DUP6"
    },
    "4120": {
      "op": "SUB"
    },
    "4121": {
      "op": "SLT"
    },
    "4122": {
      "op": "ISZERO"
    },
    "4123": {
      "op": "PUSH2",
      "value": "0x1023"
    },
    "4126": {
      "op": "JUMPI"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4129": {
      "op": "DUP1"
    },
    "4130": {
      "op": "REVERT"
    },
    "4131": {
      "op": "JUMPDEST"
    },
    "4132": {
      "op": "DUP3"
    },
    "4133": {
      "op": "MLOAD"
    },
    "4134": {
      "op": "PUSH2",
      "value": "0x102E"
    },
    "4137": {
      "op": "DUP2"
    },
    "4138": {
      "op": "PUSH2",
      "value": "0xC29"
    },
    "4141": {
      "jump": "i",
      "op": "JUMP"
    },
    "4142": {
      "op": "JUMPDEST"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4145": {
      "op": "SWAP4"
    },
    "4146": {
      "op": "SWAP1"
    },
    "4147": {
      "op": "SWAP4"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "MLOAD"
    },
    "4150": {
      "op": "SWAP3"
    },
    "4151": {
      "op": "SWAP5"
    },
    "4152": {
      "op": "SWAP3"
    },
    "4153": {
      "op": "SWAP4"
    },
    "4154": {
      "op": "POP"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "op": "POP"
    },
    "4157": {
      "jump": "o",
      "op": "JUMP"
    },
    "4158": {
      "op": "JUMPDEST"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4161": {
      "op": "DUP3"
    },
    "4162": {
      "op": "NOT"
    },
    "4163": {
      "op": "DUP3"
    },
    "4164": {
      "op": "GT"
    },
    "4165": {
      "op": "ISZERO"
    },
    "4166": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4169": {
      "op": "JUMPI"
    },
    "4170": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "4176": {
      "jump": "i",
      "op": "JUMP"
    },
    "4177": {
      "op": "JUMPDEST"
    },
    "4178": {
      "op": "POP"
    },
    "4179": {
      "op": "ADD"
    },
    "4180": {
      "op": "SWAP1"
    },
    "4181": {
      "jump": "o",
      "op": "JUMP"
    },
    "4182": {
      "op": "JUMPDEST"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4185": {
      "op": "DUP1"
    },
    "4186": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4188": {
      "op": "DUP4"
    },
    "4189": {
      "op": "DUP6"
    },
    "4190": {
      "op": "SUB"
    },
    "4191": {
      "op": "SLT"
    },
    "4192": {
      "op": "ISZERO"
    },
    "4193": {
      "op": "PUSH2",
      "value": "0x1069"
    },
    "4196": {
      "op": "JUMPI"
    },
    "4197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4199": {
      "op": "DUP1"
    },
    "4200": {
      "op": "REVERT"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "DUP3"
    },
    "4203": {
      "op": "MLOAD"
    },
    "4204": {
      "op": "SWAP2"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4208": {
      "op": "DUP4"
    },
    "4209": {
      "op": "ADD"
    },
    "4210": {
      "op": "MLOAD"
    },
    "4211": {
      "op": "DUP1"
    },
    "4212": {
      "op": "ISZERO"
    },
    "4213": {
      "op": "ISZERO"
    },
    "4214": {
      "op": "DUP2"
    },
    "4215": {
      "op": "EQ"
    },
    "4216": {
      "op": "PUSH2",
      "value": "0x1080"
    },
    "4219": {
      "op": "JUMPI"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4222": {
      "op": "DUP1"
    },
    "4223": {
      "op": "REVERT"
    },
    "4224": {
      "op": "JUMPDEST"
    },
    "4225": {
      "op": "DUP1"
    },
    "4226": {
      "op": "SWAP2"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "op": "SWAP3"
    },
    "4230": {
      "op": "POP"
    },
    "4231": {
      "op": "SWAP3"
    },
    "4232": {
      "op": "SWAP1"
    },
    "4233": {
      "op": "POP"
    },
    "4234": {
      "jump": "o",
      "op": "JUMP"
    },
    "4235": {
      "op": "JUMPDEST"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4240": {
      "op": "NOT"
    },
    "4241": {
      "op": "DUP3"
    },
    "4242": {
      "op": "EQ"
    },
    "4243": {
      "op": "ISZERO"
    },
    "4244": {
      "op": "PUSH2",
      "value": "0x109F"
    },
    "4247": {
      "op": "JUMPI"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0x109F"
    },
    "4251": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "4254": {
      "jump": "i",
      "op": "JUMP"
    },
    "4255": {
      "op": "JUMPDEST"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4259": {
      "op": "ADD"
    },
    "4260": {
      "op": "SWAP1"
    },
    "4261": {
      "jump": "o",
      "op": "JUMP"
    },
    "4262": {
      "op": "JUMPDEST"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4265": {
      "op": "PUSH2",
      "value": "0x310"
    },
    "4268": {
      "op": "DUP4"
    },
    "4269": {
      "op": "DUP4"
    },
    "4270": {
      "op": "PUSH2",
      "value": "0xF12"
    },
    "4273": {
      "jump": "i",
      "op": "JUMP"
    },
    "4274": {
      "op": "JUMPDEST"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4277": {
      "op": "DUP2"
    },
    "4278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4280": {
      "op": "NOT"
    },
    "4281": {
      "op": "DIV"
    },
    "4282": {
      "op": "DUP4"
    },
    "4283": {
      "op": "GT"
    },
    "4284": {
      "op": "DUP3"
    },
    "4285": {
      "op": "ISZERO"
    },
    "4286": {
      "op": "ISZERO"
    },
    "4287": {
      "op": "AND"
    },
    "4288": {
      "op": "ISZERO"
    },
    "4289": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4292": {
      "op": "JUMPI"
    },
    "4293": {
      "op": "PUSH2",
      "value": "0x10CC"
    },
    "4296": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "4299": {
      "jump": "i",
      "op": "JUMP"
    },
    "4300": {
      "op": "JUMPDEST"
    },
    "4301": {
      "op": "POP"
    },
    "4302": {
      "op": "MUL"
    },
    "4303": {
      "op": "SWAP1"
    },
    "4304": {
      "jump": "o",
      "op": "JUMP"
    },
    "4305": {
      "op": "JUMPDEST"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4308": {
      "op": "DUP3"
    },
    "4309": {
      "op": "PUSH2",
      "value": "0x10EE"
    },
    "4312": {
      "op": "JUMPI"
    },
    "4313": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4320": {
      "op": "SHL"
    },
    "4321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4323": {
      "op": "MSTORE"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4328": {
      "op": "MSTORE"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4333": {
      "op": "REVERT"
    },
    "4334": {
      "op": "JUMPDEST"
    },
    "4335": {
      "op": "POP"
    },
    "4336": {
      "op": "DIV"
    },
    "4337": {
      "op": "SWAP1"
    },
    "4338": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "17c6803616c0a2de3752c93e065316ed7660d0b5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\nimport '../interfaces/IPriceFeed.sol';\nimport '../interfaces/IBaseV1Router01.sol';\nimport '../interfaces/IUniv2LikeRouter01.sol';\nimport '../interfaces/ICurveRouter.sol';\n\ncontract OnChainPriceFetcher is IPriceFeed, Ownable {\n\n    struct TokenPairInfo {\n        // ROUTER\n        address router;\n        // swap path\n        address[] path;\n    }\n\n    address public immutable CURVE_ROUTER;\n    address public immutable SOLIDLY_ROUTER;\n    // USD  (USDC / MIM / 3CRV)\n    address public immutable QUOTE_USD_TOKEN;\n    uint256 public immutable QUOTE_USD_DECIMAL;\n\n    /// @notice Info of each TokenPair\n    mapping(uint => TokenPairInfo) public pairRouter;\n\n    constructor(address _CURVE_ROUTER, address _SOLIDLY_ROUTER, address _QUOTE_USD_TOKEN) {\n        CURVE_ROUTER = _CURVE_ROUTER;\n        SOLIDLY_ROUTER = _SOLIDLY_ROUTER;\n        QUOTE_USD_TOKEN = _QUOTE_USD_TOKEN;\n\n        QUOTE_USD_DECIMAL = IERC20Metadata(_QUOTE_USD_TOKEN).decimals();\n    }\n\n    function getData(address token) external view returns(uint256 priceInUSD) {\n        uint256 amount = 10 ** IERC20Metadata(token).decimals();\n        // Check Solidly\n        uint256 solidlyQuote = getSolidlyQuote(token, amount, QUOTE_USD_TOKEN);\n        // Check Curve\n        uint256 curveQuote = getCurveQuote(token, amount, QUOTE_USD_TOKEN);\n\n        priceInUSD = Math.max(curveQuote, solidlyQuote);\n\n        try this.getUniV2Quote(token, amount, QUOTE_USD_TOKEN) returns (uint256 uniV2Quote) {\n            if (uniV2Quote > 0) {\n                priceInUSD = priceInUSD > 0 ? Math.average(priceInUSD, uniV2Quote) : uniV2Quote;\n            }\n        } catch (bytes memory) {\n            // We ignore as it means it's zero\n        }\n    }\n\n    function getUniV2Quote(address fromToken, uint256 amount, address toToken) public view returns(uint256) {\n        (address router, address[] memory path) = getRouterAndPath(fromToken,toToken);\n\n        uint256[] memory amounts = IUniv2LikeRouter01(router).getAmountsOut(amount, path);\n\n        return scalePriceTo1e18(amounts[amounts.length - 1]);\n    }\n\n    function getSolidlyQuote(address fromToken, uint256 amount, address toToken) public view returns(uint256) {\n        if (SOLIDLY_ROUTER == address(0)) return 0;\n\n        (uint256 solidlyQuote,) = IBaseV1Router01(SOLIDLY_ROUTER).getAmountOut(amount, fromToken, toToken);\n\n        return scalePriceTo1e18(solidlyQuote);\n    }\n\n    function getCurveQuote(address fromToken, uint256 amount, address toToken) public view returns(uint256) {\n        if (CURVE_ROUTER == address(0)) return 0;\n\n        (, uint256 curveQuote) = ICurveRouter(CURVE_ROUTER).get_best_rate(fromToken, toToken, amount);\n\n        return scalePriceTo1e18(curveQuote);\n    }\n\n    function scalePriceTo1e18(uint256 rawPrice) internal view returns(uint256) {\n        if (QUOTE_USD_DECIMAL <= 18) {\n            return rawPrice * (10**(18 - QUOTE_USD_DECIMAL));\n        } else {\n            return rawPrice / (10**(QUOTE_USD_DECIMAL - 18));\n        }\n    }\n\n    // --------------------------------------------------------------\n    // ROUTER Manage\n    // --------------------------------------------------------------\n\n    function updatePairRouter(address router, address[] calldata path) external onlyOwner {\n        uint pairKey = uint(uint160(path[0])) + uint(uint160(path[path.length - 1]));\n        TokenPairInfo storage pairInfo = pairRouter[pairKey];\n\n        pairInfo.router = router;\n        pairInfo.path = path;\n    }\n    \n\n    // --------------------------------------------------------------\n    // Internal\n    // --------------------------------------------------------------\n\n    function getRouterAndPath(address fromToken, address toToken) internal view returns (address router, address[] memory path) {\n        uint pairKey = uint(uint160(fromToken)) + uint(uint160(toToken));\n        TokenPairInfo storage pairInfo = pairRouter[pairKey];\n\n        require(pairInfo.router != address(0), \"router not set\");\n\n        router = pairInfo.router;\n\n        path = new address[](pairInfo.path.length);\n        if (pairInfo.path[0] == fromToken) {\n            path = pairInfo.path;\n        } else {\n            for (uint index = 0; index < pairInfo.path.length; index++) {\n                path[index] = (pairInfo.path[pairInfo.path.length - 1 - index]);\n            }\n        }\n    }\n}",
  "sourceMap": "413:4147:38:-:0;;;902:291;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:8;719:10:14;921:18:8;:32::i;:::-;-1:-1:-1;;;;;998:28:38;;;;;1036:32;;;;;1078:34;;;;;;1143:43;;;-1:-1:-1;;;1143:43:38;;;;:41;;:43;;;;;;;;;;;;;;;1078:34;1143:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1123:63;;;;-1:-1:-1;413:4147:38;;-1:-1:-1;;413:4147:38;2270:187:8;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:8;;;-1:-1:-1;;;;;;2378:17:8;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:40:-;93:13;;-1:-1:-1;;;;;135:31:40;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;579:273::-;647:6;700:2;688:9;679:7;675:23;671:32;668:52;;;716:1;713;706:12;668:52;748:9;742:16;798:4;791:5;787:16;780:5;777:27;767:55;;818:1;815;808:12;767:55;841:5;579:273;-1:-1:-1;;;579:273:40:o;:::-;413:4147:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/priceOracle/OnChainPriceFetcher.sol",
  "type": "contract"
}